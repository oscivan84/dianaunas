{"ast":null,"code":"import _Drawer from \"@material-ui/core/esm/Drawer\";\nimport _Button from \"@material-ui/core/esm/Button\";\nimport _Card from \"@material-ui/core/esm/Card\";\nimport _IconButton from \"@material-ui/core/esm/IconButton\";\nimport _Badge from \"@material-ui/core/esm/Badge\";\nimport _Icon from \"@material-ui/core/esm/Icon\";\nimport _slicedToArray from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\src\\\\app\\\\components\\\\NotificationBar\\\\NotificationBar.jsx\";\n\nvar _excluded = [\"palette\"];\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { getTimeDifference } from 'utils.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport useSettings from 'app/hooks/useSettings';\nimport useNotification from 'app/hooks/useNotification';\nvar useStyles = makeStyles(function (_ref) {\n  var palette = _ref.palette,\n      theme = _objectWithoutProperties(_ref, _excluded);\n\n  return {\n    notification: {\n      width: 'var(--sidenav-width)',\n      '& .notification__topbar': {\n        height: 'var(--topbar-height)'\n      }\n    },\n    notificationCard: {\n      '&:hover': {\n        '& .delete-button': {\n          cursor: 'pointer',\n          display: 'unset',\n          right: 0,\n          marginTop: 6,\n          top: 0,\n          zIndex: 2\n        },\n        '& .card__topbar__time': {\n          display: 'none'\n        }\n      },\n      '& .delete-button': {\n        display: 'none',\n        position: 'absolute',\n        right: 0,\n        marginTop: 9\n      },\n      '& .card__topbar__button': {\n        borderRadius: 15,\n        opacity: 0.9\n      }\n    }\n  };\n});\n\nvar NotificationBar = function NotificationBar(_ref2) {\n  var container = _ref2.container;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      panelOpen = _React$useState2[0],\n      setPanelOpen = _React$useState2[1];\n\n  var classes = useStyles();\n\n  var _useSettings = useSettings(),\n      settings = _useSettings.settings;\n\n  var _useNotification = useNotification(),\n      deleteNotification = _useNotification.deleteNotification,\n      clearNotifications = _useNotification.clearNotifications,\n      notifications = _useNotification.notifications;\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    setPanelOpen(!panelOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_IconButton, {\n    onClick: handleDrawerToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Badge, {\n    color: \"secondary\",\n    badgeContent: notifications === null || notifications === void 0 ? void 0 : notifications.length,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"notifications\"))), /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: settings.themes[settings.activeTheme],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Drawer, {\n    width: '100px',\n    container: container,\n    variant: \"temporary\",\n    anchor: 'right',\n    open: panelOpen,\n    onClose: handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.notification,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notification__topbar elevation-z6 flex items-center p-4 mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"notifications\"), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"ml-2 my-0 font-medium\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, \"Notifications\")), notifications === null || notifications === void 0 ? void 0 : notifications.map(function (notification) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: notification.id,\n      className: clsx('relative', classes.notificationCard),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(_IconButton, {\n      size: \"small\",\n      className: \"delete-button bg-light-gray mr-6\",\n      onClick: function onClick() {\n        return deleteNotification(notification.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_Icon, {\n      className: \"text-muted\",\n      fontSize: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }, \"clear\")), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\".concat(notification.path),\n      onClick: handleDrawerToggle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_Card, {\n      className: \"mx-4 mb-6\",\n      elevation: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card__topbar flex items-center justify-between p-2 bg-light-gray\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex items-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card__topbar__button flex items-center justify-between h-24 w-24 overflow-hidden\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(_Icon, {\n      className: \"card__topbar__icon\",\n      fontSize: \"small\",\n      color: notification.icon.color,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 53\n      }\n    }, notification.icon.name)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-4 font-medium text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 49\n      }\n    }, notification.heading)), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"card__topbar__time text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 45\n      }\n    }, getTimeDifference(new Date(notification.timestamp)), ' ', \"ago\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"px-4 pt-2 pb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"m-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 45\n      }\n    }, notification.title), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 45\n      }\n    }, notification.subtitle)))));\n  }), !!(notifications === null || notifications === void 0 ? void 0 : notifications.length) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    onClick: clearNotifications,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }, \"Clear Notifications\"))))));\n};\n\nexport default NotificationBar;","map":{"version":3,"sources":["C:/Users/DiazP/Documents/SSmanagm/src/app/components/NotificationBar/NotificationBar.jsx"],"names":["React","Fragment","Link","ThemeProvider","getTimeDifference","makeStyles","clsx","useSettings","useNotification","useStyles","palette","theme","notification","width","height","notificationCard","cursor","display","right","marginTop","top","zIndex","position","borderRadius","opacity","NotificationBar","container","useState","panelOpen","setPanelOpen","classes","settings","deleteNotification","clearNotifications","notifications","handleDrawerToggle","length","themes","activeTheme","keepMounted","map","id","path","icon","color","name","heading","Date","timestamp","title","subtitle"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\r\n\r\nimport {\r\n    Icon,\r\n    Badge,\r\n    Card,\r\n    Button,\r\n    IconButton,\r\n    Drawer,\r\n} from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { getTimeDifference } from 'utils.js'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport useNotification from 'app/hooks/useNotification'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    notification: {\r\n        width: 'var(--sidenav-width)',\r\n        '& .notification__topbar': {\r\n            height: 'var(--topbar-height)',\r\n        },\r\n    },\r\n    notificationCard: {\r\n        '&:hover': {\r\n            '& .delete-button': {\r\n                cursor: 'pointer',\r\n                display: 'unset',\r\n                right: 0,\r\n                marginTop: 6,\r\n                top: 0,\r\n                zIndex: 2,\r\n            },\r\n            '& .card__topbar__time': {\r\n                display: 'none',\r\n            },\r\n        },\r\n        '& .delete-button': {\r\n            display: 'none',\r\n            position: 'absolute',\r\n            right: 0,\r\n            marginTop: 9,\r\n        },\r\n        '& .card__topbar__button': {\r\n            borderRadius: 15,\r\n            opacity: 0.9,\r\n        },\r\n    },\r\n}))\r\n\r\nconst NotificationBar = ({ container }) => {\r\n    const [panelOpen, setPanelOpen] = React.useState(false)\r\n\r\n    const classes = useStyles()\r\n    const { settings } = useSettings()\r\n    const {\r\n        deleteNotification,\r\n        clearNotifications,\r\n        notifications,\r\n    } = useNotification()\r\n\r\n    const handleDrawerToggle = () => {\r\n        setPanelOpen(!panelOpen)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <IconButton onClick={handleDrawerToggle}>\r\n                <Badge color=\"secondary\" badgeContent={notifications?.length}>\r\n                    <Icon>notifications</Icon>\r\n                </Badge>\r\n            </IconButton>\r\n\r\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n                <Drawer\r\n                    width={'100px'}\r\n                    container={container}\r\n                    variant=\"temporary\"\r\n                    anchor={'right'}\r\n                    open={panelOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    ModalProps={{\r\n                        keepMounted: true,\r\n                    }}\r\n                >\r\n                    <div className={classes.notification}>\r\n                        <div className=\"notification__topbar elevation-z6 flex items-center p-4 mb-4\">\r\n                            <Icon color=\"primary\">notifications</Icon>\r\n                            <h5 className=\"ml-2 my-0 font-medium\">\r\n                                Notifications\r\n                            </h5>\r\n                        </div>\r\n\r\n                        {notifications?.map((notification) => (\r\n                            <div\r\n                                key={notification.id}\r\n                                className={clsx(\r\n                                    'relative',\r\n                                    classes.notificationCard\r\n                                )}\r\n                            >\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    className=\"delete-button bg-light-gray mr-6\"\r\n                                    onClick={() =>\r\n                                        deleteNotification(notification.id)\r\n                                    }\r\n                                >\r\n                                    <Icon\r\n                                        className=\"text-muted\"\r\n                                        fontSize=\"small\"\r\n                                    >\r\n                                        clear\r\n                                    </Icon>\r\n                                </IconButton>\r\n                                <Link\r\n                                    to={`/${notification.path}`}\r\n                                    onClick={handleDrawerToggle}\r\n                                >\r\n                                    <Card className=\"mx-4 mb-6\" elevation={3}>\r\n                                        <div className=\"card__topbar flex items-center justify-between p-2 bg-light-gray\">\r\n                                            <div className=\"flex items-center\">\r\n                                                <div className=\"card__topbar__button flex items-center justify-between h-24 w-24 overflow-hidden\">\r\n                                                    <Icon\r\n                                                        className=\"card__topbar__icon\"\r\n                                                        fontSize=\"small\"\r\n                                                        color={\r\n                                                            notification.icon\r\n                                                                .color\r\n                                                        }\r\n                                                    >\r\n                                                        {notification.icon.name}\r\n                                                    </Icon>\r\n                                                </div>\r\n                                                <span className=\"ml-4 font-medium text-muted\">\r\n                                                    {notification.heading}\r\n                                                </span>\r\n                                            </div>\r\n                                            <small className=\"card__topbar__time text-muted\">\r\n                                                {getTimeDifference(\r\n                                                    new Date(\r\n                                                        notification.timestamp\r\n                                                    )\r\n                                                )}{' '}\r\n                                                ago\r\n                                            </small>\r\n                                        </div>\r\n                                        <div className=\"px-4 pt-2 pb-4\">\r\n                                            <p className=\"m-0\">\r\n                                                {notification.title}\r\n                                            </p>\r\n                                            <small className=\"text-muted\">\r\n                                                {notification.subtitle}\r\n                                            </small>\r\n                                        </div>\r\n                                    </Card>\r\n                                </Link>\r\n                            </div>\r\n                        ))}\r\n                        {!!notifications?.length && (\r\n                            <div className=\"text-center\">\r\n                                <Button onClick={clearNotifications}>\r\n                                    Clear Notifications\r\n                                </Button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </Drawer>\r\n            </ThemeProvider>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NotificationBar\r\n"]},"metadata":{},"sourceType":"module"}