{"ast":null,"code":"import _Button from \"@material-ui/core/esm/Button\";\nimport _Icon from \"@material-ui/core/esm/Icon\";\nimport _Table from \"@material-ui/core/esm/Table\";\nimport _TableBody from \"@material-ui/core/esm/TableBody\";\nimport _TextField from \"@material-ui/core/esm/TextField\";\nimport _toConsumableArray from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _TableHead from \"@material-ui/core/esm/TableHead\";\nimport _TableRow from \"@material-ui/core/esm/TableRow\";\nimport _TableCell from \"@material-ui/core/esm/TableCell\";\nimport _FormControlLabel from \"@material-ui/core/esm/FormControlLabel\";\nimport _Checkbox from \"@material-ui/core/esm/Checkbox\";\nimport _Grid from \"@material-ui/core/esm/Grid\";\nimport _defineProperty from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\src\\\\app\\\\views\\\\material-kit\\\\forms\\\\OrdenServicio.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Autocomplete, createFilterOptions } from '@material-ui/lab';\nimport Highlight from 'react-highlight';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\n\nvar Typography = function Typography() {\n  var list = [{\n    className: '.font-light',\n    description: 'font-weight: 300'\n  }];\n};\n\nvar suggestions = [{\n  label: 'Producto 1'\n}, {\n  label: 'Producto 2'\n}, {\n  label: 'Producto 3'\n}, {\n  label: 'Producto 4'\n}];\n\nvar OrdenServicio = function OrdenServicio() {\n  var _useState = useState({\n    date: new Date()\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useEffect(function () {\n    ValidatorForm.addValidationRule('isPasswordMatch', function (value) {\n      console.log(value);\n\n      if (value !== state.password) {\n        return false;\n      }\n\n      return true;\n    });\n    return function () {\n      return ValidatorForm.removeValidationRule('isPasswordMatch');\n    };\n  }, [state.password]);\n\n  var handleSubmit = function handleSubmit(event) {// console.log(\"submitted\");\n    // console.log(event);\n  };\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var handleDateChange = function handleDateChange(date) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      date: date\n    }));\n  };\n\n  var username = state.username,\n      firstName = state.firstName,\n      creditCard = state.creditCard,\n      mobile = state.mobile,\n      password = state.password,\n      confirmPassword = state.confirmPassword,\n      gender = state.gender,\n      date = state.date,\n      email = state.email;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ValidatorForm, {\n    onSubmit: handleSubmit,\n    onError: function onError() {\n      return null;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Grid, {\n    container: true,\n    spacing: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    sm: 6,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Nombre\",\n    onChange: handleChange,\n    type: \"text\",\n    name: \"firstName\",\n    value: firstName || '',\n    validators: ['required'],\n    errorMessages: ['Campo Requerido'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Apellido\",\n    onChange: handleChange,\n    type: \"text\",\n    name: \"username\",\n    value: username || '',\n    validators: ['required', 'minStringLength: 4', 'maxStringLength: 9'],\n    errorMessages: ['Campo Requerido'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Email\",\n    onChange: handleChange,\n    type: \"email\",\n    name: \"email\",\n    value: email || '',\n    validators: ['required', 'isEmail'],\n    errorMessages: ['Campo Requerido', 'email is not valid'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-8 w-full\",\n    label: \"Celular\",\n    onChange: handleChange,\n    type: \"number\",\n    name: \"creditCard\",\n    value: creditCard || '',\n    validators: ['required', 'minStringLength:16', 'maxStringLength: 16'],\n    errorMessages: ['Campo Requerido'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(_Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Direccion\",\n    onChange: handleChange,\n    type: \"text\",\n    name: \"mobile\",\n    value: mobile || '',\n    validators: ['required'],\n    errorMessages: ['Campo Requerido'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Otro\",\n    onChange: handleChange,\n    name: \"password\",\n    type: \"firstName\",\n    value: password || '',\n    errorMessages: ['Campo Requerido'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Otro\",\n    onChange: handleChange,\n    name: \"confirmPassword\",\n    type: \"firstName\",\n    value: confirmPassword || '',\n    validators: ['isPasswordMatch'],\n    errorMessages: ['Campo Requerido', 'password no concuerda'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(_FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(_Checkbox, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 38\n      }\n    }),\n    label: \"Deseo Recibir informacion mediante correo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(_Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-sm-30\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-sm-30\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    routeSegments: [{\n      name: 'Utilities',\n      path: '/utilities'\n    }, {\n      name: 'Typography'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(SimpleCard, {\n    title: \"Pedido\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Table, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_TableRow, {\n    className: \"bg-default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_TableCell, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 29\n    }\n  }, \"Producto\"), /*#__PURE__*/React.createElement(_TableCell, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, \"Cantidad\"), /*#__PURE__*/React.createElement(_TableCell, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }\n  }, \"Precio\"))), /*#__PURE__*/React.createElement(_TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, _toConsumableArray(Array(7).keys()).slice(1).reverse().map(function (item, index) {\n    return /*#__PURE__*/React.createElement(_TableRow, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_TableCell, {\n      className: \"px-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      className: \"mb-4 w-300\",\n      options: suggestions,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.label;\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/React.createElement(_TextField, Object.assign({}, params, {\n          label: \"Combo box\",\n          variant: \"outlined\",\n          fullWidth: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(_TableCell, {\n      className: \"px-0 capitalize\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(_TableCell, {\n      className: \"px-0 capitalize\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      className: \"mb-4 w-300\",\n      options: suggestions,\n      getOptionLabel: function getOptionLabel(option) {\n        return option.label;\n      },\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/React.createElement(_TextField, Object.assign({}, params, {\n          label: \"Combo box\",\n          variant: \"outlined\",\n          fullWidth: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 21\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 37\n      }\n    })));\n  }), /*#__PURE__*/React.createElement(_TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_TableCell, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, \"text-small\"), /*#__PURE__*/React.createElement(_TableCell, {\n    className: \"px-0 capitalize\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 29\n    }\n  }, \"0.8125rem\"), /*#__PURE__*/React.createElement(_TableCell, {\n    className: \"px-0 capitalize\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 33\n    }\n  }, \"text-small\"))), [13, 14, 16, 18, 20, 22, 24, 30, 32].map(function (item, index) {\n    return /*#__PURE__*/React.createElement(_TableRow, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_TableCell, {\n      className: \"px-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 37\n      }\n    }, \"text-\", item), /*#__PURE__*/React.createElement(_TableCell, {\n      className: \"px-0 capitalize\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 37\n      }\n    }, item, \"px\"), /*#__PURE__*/React.createElement(_TableCell, {\n      className: \"px-0 capitalize\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 37\n      }\n    }, ReactHtmlParser(\"<span class=\\\"text-\".concat(item, \"\\\">text-\").concat(item, \"</span>\"))));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(_Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }, \"send\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pl-2 capitalize\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }, \"Enviar\"))));\n};\n\nexport default OrdenServicio;","map":{"version":3,"sources":["C:/Users/DiazP/Documents/SSmanagm/src/app/views/material-kit/forms/OrdenServicio.jsx"],"names":["React","useState","useEffect","ValidatorForm","TextValidator","Breadcrumb","SimpleCard","ReactHtmlParser","Autocomplete","createFilterOptions","Highlight","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","Typography","list","className","description","suggestions","label","OrdenServicio","date","Date","state","setState","addValidationRule","value","console","log","password","removeValidationRule","handleSubmit","event","handleChange","persist","target","name","handleDateChange","username","firstName","creditCard","mobile","confirmPassword","gender","email","path","Array","keys","slice","reverse","map","item","index","option","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\nimport { Breadcrumb, SimpleCard } from 'app/components'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { Autocomplete, createFilterOptions } from '@material-ui/lab'\r\n\r\nimport Highlight from 'react-highlight'\r\nimport {\r\n    Button,\r\n    Icon,\r\n    Grid,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Table,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n    TextField,\r\n} from '@material-ui/core'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers'\r\nimport 'date-fns'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\n\r\nconst Typography = () => {\r\n    let list = [\r\n        {\r\n            className: '.font-light',\r\n            description: 'font-weight: 300',\r\n        },\r\n    ]}\r\n\r\n    const suggestions = [\r\n        { label: 'Producto 1' },\r\n        { label: 'Producto 2' },\r\n        { label: 'Producto 3' },\r\n        { label: 'Producto 4' },\r\n    ]\r\n\r\n\r\n\r\nconst OrdenServicio = () => {\r\n    const [state, setState] = useState({\r\n        date: new Date(),\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            console.log(value)\r\n\r\n            if (value !== state.password) {\r\n                return false\r\n            }\r\n            return true\r\n        })\r\n        return () => ValidatorForm.removeValidationRule('isPasswordMatch')\r\n    }, [state.password])\r\n\r\n    const handleSubmit = (event) => {\r\n        // console.log(\"submitted\");\r\n        // console.log(event);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        event.persist()\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n        setState({ ...state, date })\r\n    }\r\n\r\n    const {\r\n        username,\r\n        firstName,\r\n        creditCard,\r\n        mobile,\r\n        password,\r\n        confirmPassword,\r\n        gender,\r\n        date,\r\n        email,\r\n    } = state\r\n\r\n    return (\r\n        <div>\r\n            <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n                <Grid container spacing={6}>\r\n                    <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Nombre\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            value={firstName || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['Campo Requerido']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Apellido\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={username || ''}\r\n                            validators={[\r\n                                'required',\r\n                                'minStringLength: 4',\r\n                                'maxStringLength: 9',\r\n                            ]}\r\n                            errorMessages={['Campo Requerido']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Email\"\r\n                            onChange={handleChange}\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={email || ''}\r\n                            validators={['required', 'isEmail']}\r\n                            errorMessages={[\r\n                                'Campo Requerido',\r\n                                'email is not valid',\r\n                            ]}\r\n                        />\r\n\r\n                        <TextValidator\r\n                            className=\"mb-8 w-full\"\r\n                            label=\"Celular\"\r\n                            onChange={handleChange}\r\n                            type=\"number\"\r\n                            name=\"creditCard\"\r\n                            value={creditCard || ''}\r\n                            validators={[\r\n                                'required',\r\n                                'minStringLength:16',\r\n                                'maxStringLength: 16',\r\n                            ]}\r\n                            errorMessages={['Campo Requerido']}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Direccion\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"mobile\"\r\n                            value={mobile || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['Campo Requerido']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Otro\"\r\n                            onChange={handleChange}\r\n                            name=\"password\"\r\n                            type=\"firstName\"\r\n                            value={password || ''}\r\n                            errorMessages={['Campo Requerido']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Otro\"\r\n                            onChange={handleChange}\r\n                            name=\"confirmPassword\"\r\n                            type=\"firstName\"\r\n                            value={confirmPassword || ''}\r\n                            validators={['isPasswordMatch']}\r\n                            errorMessages={[\r\n                                'Campo Requerido',\r\n                                'password no concuerda',\r\n                            ]}\r\n                        />\r\n\r\n                        <FormControlLabel\r\n                            control={<Checkbox />}\r\n                            label=\"Deseo Recibir informacion mediante correo\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item lg={6} md={6} sm={12} xs={12}>\r\n        <div className=\"m-sm-30\">\r\n            <div className=\"mb-sm-30\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Utilities', path: '/utilities' },\r\n                        { name: 'Typography' },\r\n                    ]}\r\n                />\r\n            </div>\r\n\r\n            <SimpleCard title=\"Pedido\">\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow className=\"bg-default\">\r\n                            <TableCell className=\"px-0\">Producto</TableCell>\r\n                            <TableCell className=\"px-0\">Cantidad</TableCell>\r\n                            <TableCell className=\"px-0\">Precio</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {[...Array(7).keys()]\r\n                            .slice(1)\r\n                            .reverse()\r\n                            .map((item, index) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell className=\"px-0\">\r\n                                       \r\n                                    \r\n            <Autocomplete\r\n                className=\"mb-4 w-300\"\r\n                options={suggestions}\r\n                getOptionLabel={(option) => option.label}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        label=\"Combo box\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                    />\r\n                )}\r\n            />\r\n\r\n\r\n\r\n\r\n\r\n                                    </TableCell>\r\n                                    <TableCell className=\"px-0 capitalize\"></TableCell>\r\n                                    <TableCell className=\"px-0 capitalize\">\r\n                                      \r\n                                    <Autocomplete\r\n                className=\"mb-4 w-300\"\r\n                options={suggestions}\r\n                getOptionLabel={(option) => option.label}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        label=\"Combo box\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                    />\r\n                )}\r\n            />\r\n\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        <TableRow>\r\n                            <TableCell className=\"px-0\">text-small</TableCell>\r\n                            <TableCell className=\"px-0 capitalize\">\r\n                                0.8125rem\r\n                            </TableCell>\r\n                            <TableCell className=\"px-0 capitalize\">\r\n                                <span className=\"text-small\">text-small</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n\r\n                        {[13, 14, 16, 18, 20, 22, 24, 30, 32].map(\r\n                            (item, index) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell className=\"px-0\">\r\n                                        text-{item}\r\n                                    </TableCell>\r\n                                    <TableCell className=\"px-0 capitalize\">\r\n                                        {item}px\r\n                                    </TableCell>\r\n                                    <TableCell className=\"px-0 capitalize\">\r\n                                        {ReactHtmlParser(\r\n                                            `<span class=\"text-${item}\">text-${item}</span>`\r\n                                        )}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n\r\n                <div className=\"py-2\"></div>\r\n                \r\n            </SimpleCard>\r\n        </div>\r\n                    </Grid>\r\n\r\n                <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                    <Icon>send</Icon>\r\n                    <span className=\"pl-2 capitalize\">Enviar</span>\r\n                </Button>\r\n            </ValidatorForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrdenServicio\r\n"]},"metadata":{},"sourceType":"module"}