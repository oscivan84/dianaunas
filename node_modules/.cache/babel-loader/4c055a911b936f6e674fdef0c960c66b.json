{"ast":null,"code":"import _Button from \"@material-ui/core/esm/Button\";\nimport _Icon from \"@material-ui/core/esm/Icon\";\nimport _Card from \"@material-ui/core/esm/Card\";\nimport _TextField from \"@material-ui/core/esm/TextField\";\nimport _MenuItem from \"@material-ui/core/esm/MenuItem\";\nimport _Grid from \"@material-ui/core/esm/Grid\";\nimport _Divider from \"@material-ui/core/esm/Divider\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\src\\\\app\\\\views\\\\forms\\\\invoice-form\\\\InvoiceForm.jsx\";\n\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport InvoiceItemTable from './InvoiceItemTable';\nimport { calculateAmount } from './InvoiceFormService';\n\nvar InvoiceForm = function InvoiceForm() {\n  var calculateSubTotal = function calculateSubTotal() {\n    var itemList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var subTotal = 0;\n    itemList.forEach(function (item) {\n      subTotal += calculateAmount(item);\n    });\n    return subTotal;\n  };\n\n  var calculateTotal = function calculateTotal(values) {\n    var total = 0;\n    total += calculateSubTotal(values.items);\n    total += values.shippingCharge || 0;\n    total += values[values.otherField] || 0;\n    return total;\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n      var isSubmitting;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              isSubmitting = _ref.isSubmitting;\n              console.log(values);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-sm-30\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Card, {\n    elevation: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"m-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"New Invoice\")), /*#__PURE__*/React.createElement(_Divider, {\n    className: \"mb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    enableReinitialize: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, function (_ref3) {\n    var values = _ref3.values,\n        errors = _ref3.errors,\n        touched = _ref3.touched,\n        handleChange = _ref3.handleChange,\n        handleBlur = _ref3.handleBlur,\n        handleSubmit = _ref3.handleSubmit,\n        isSubmitting = _ref3.isSubmitting,\n        setSubmitting = _ref3.setSubmitting,\n        setFieldValue = _ref3.setFieldValue;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"p-4\",\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_Grid, {\n      container: true,\n      spacing: 3,\n      alignItems: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      md: 2,\n      sm: 4,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }, \"Customer Name\"), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      md: 10,\n      sm: 8,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_TextField, {\n      className: \"min-w-188\",\n      label: \"Name\",\n      name: \"customerName\",\n      size: \"small\",\n      variant: \"outlined\",\n      select: true,\n      value: values.customerName || '',\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }\n    }, customerList.map(function (item, ind) {\n      return /*#__PURE__*/React.createElement(_MenuItem, {\n        value: item,\n        key: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 45\n        }\n      }, item);\n    }))), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      md: 2,\n      sm: 4,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, \"Invoice#\"), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      md: 10,\n      sm: 8,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_TextField, {\n      label: \"Invoice No\",\n      name: \"invoiceNo\",\n      size: \"small\",\n      variant: \"outlined\",\n      defaultValue: \"INV-000001\",\n      value: values.invoiceNo,\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      md: 2,\n      sm: 4,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, \"Order Number\"), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      md: 10,\n      sm: 8,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_TextField, {\n      label: \"Invoice No\",\n      name: \"orderNo\",\n      size: \"small\",\n      variant: \"outlined\",\n      value: values.orderNo,\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      md: 2,\n      sm: 4,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, \"Invoice Date\"), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      md: 10,\n      sm: 8,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-wrap m--2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      className: \"m-2\",\n      margin: \"none\",\n      label: \"Invoice Date\",\n      inputVariant: \"outlined\",\n      type: \"text\",\n      size: \"small\",\n      autoOk: true,\n      value: values.invoiceDate,\n      format: \"MMMM dd, yyyy\",\n      onChange: function onChange(date) {\n        return setFieldValue('invoiceDate', date);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(_TextField, {\n      className: \"m-2 min-w-188\",\n      label: \"Terms\",\n      name: \"terms\",\n      size: \"small\",\n      variant: \"outlined\",\n      value: values.terms || '',\n      onChange: handleChange,\n      select: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 41\n      }\n    }, paymentTermList.map(function (item, ind) {\n      return /*#__PURE__*/React.createElement(_MenuItem, {\n        value: item,\n        key: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 53\n        }\n      }, item);\n    })), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      className: \"m-2\",\n      margin: \"none\",\n      label: \"Due Date\",\n      inputVariant: \"outlined\",\n      type: \"text\",\n      size: \"small\",\n      autoOk: true,\n      value: values.dueDate,\n      format: \"MMMM dd, yyyy\",\n      onChange: function onChange(date) {\n        return setFieldValue('dueDate', date);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 45\n      }\n    })))), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      md: 2,\n      sm: 4,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }\n    }, \"Salesperson Name\"), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      md: 10,\n      sm: 8,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_TextField, {\n      className: \"min-w-188\",\n      label: \"Salesperson Name\",\n      name: \"salesPersonName\",\n      size: \"small\",\n      variant: \"outlined\",\n      value: values.salesPersonName || '',\n      onChange: handleChange,\n      select: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 37\n      }\n    }, customerList.map(function (item, ind) {\n      return /*#__PURE__*/React.createElement(_MenuItem, {\n        value: item,\n        key: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 45\n        }\n      }, item);\n    }))), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(InvoiceItemTable, {\n      values: values,\n      setFieldValue: setFieldValue,\n      handleChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(_Grid, {\n      container: true,\n      spacing: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(_TextField, {\n      label: \"Custom Notes\",\n      name: \"notes\",\n      size: \"small\",\n      variant: \"outlined\",\n      multiline: true,\n      rows: 6,\n      fullWidth: true,\n      value: values.notes,\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(_Card, {\n      className: \"bg-default p-4\",\n      elevation: 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(_Grid, {\n      container: true,\n      spacing: 3,\n      justify: \"space-between\",\n      alignItems: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 49\n      }\n    }, \"Sub Total\"), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 53\n      }\n    }, calculateSubTotal(values.items).toFixed(2))), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex items-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"whitespace-pre\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 57\n      }\n    }, \"Shipping Charges\"), /*#__PURE__*/React.createElement(_TextField, {\n      className: \"ml-3\",\n      name: \"shippingCharge\",\n      size: \"small\",\n      type: \"number\",\n      variant: \"outlined\",\n      value: values.shippingCharge || '',\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 53\n      }\n    }, (values.shippingCharge || 0).toFixed(2))), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex items-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(_TextField, {\n      name: \"otherField\",\n      size: \"small\",\n      variant: \"outlined\",\n      value: values.otherField || '',\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(_TextField, {\n      className: \"ml-3\",\n      name: values.otherField,\n      size: \"small\",\n      variant: \"outlined\",\n      type: \"number\",\n      value: values[values.otherField] || '',\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 53\n      }\n    }, (values[values.otherField] || 0).toFixed(2))), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 53\n      }\n    }, \"Total ( $ )\")), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"m-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 57\n      }\n    }, calculateTotal(values).toFixed(2))))))))), /*#__PURE__*/React.createElement(_Card, {\n      className: \"bg-default p-4\",\n      elevation: 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(_Grid, {\n      container: true,\n      spacing: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(_TextField, {\n      label: \"Terms & Conditions\",\n      name: \"terms_conditions\",\n      size: \"small\",\n      variant: \"outlined\",\n      multiline: true,\n      rows: 6,\n      fullWidth: true,\n      value: values.terms_conditions,\n      onChange: handleChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      xs: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"upload-multiple-file\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      className: \"capitalize\",\n      color: \"primary\",\n      component: \"span\",\n      variant: \"contained\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex items-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(_Icon, {\n      className: \"pr-8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 53\n      }\n    }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 53\n      }\n    }, \"Upload File\")))), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"hidden\",\n      onChange: function onChange(e) {\n        return setFieldValue('files', e.target.files);\n      },\n      id: \"upload-multiple-file\",\n      type: \"file\",\n      multiple: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 33\n      }\n    }, \"Submit\")));\n  })));\n};\n\nvar paymentTermList = ['NET 15', 'NET 30', 'NET 45', 'NET 60', 'Due end of the month', 'Due on receive'];\nvar customerList = ['customer 1', 'customer 2', 'customer 3', 'customer 4', 'customer 5', 'customer 6', 'customer 7', 'customer 8'];\nvar initialValues = {\n  customerType: '',\n  otherField: 'Adjustment'\n};\nexport default InvoiceForm;","map":{"version":3,"sources":["C:/Users/DiazP/Documents/SSmanagm/src/app/views/forms/invoice-form/InvoiceForm.jsx"],"names":["React","Formik","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","InvoiceItemTable","calculateAmount","InvoiceForm","calculateSubTotal","itemList","subTotal","forEach","item","calculateTotal","values","total","items","shippingCharge","otherField","handleSubmit","isSubmitting","console","log","initialValues","errors","touched","handleChange","handleBlur","setSubmitting","setFieldValue","customerName","customerList","map","ind","invoiceNo","orderNo","invoiceDate","date","terms","paymentTermList","dueDate","salesPersonName","notes","toFixed","terms_conditions","e","target","files","customerType"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAUA,SACIC,uBADJ,EAEIC,kBAFJ,QAGO,sBAHP;AAIA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,eAAT,QAAgC,sBAAhC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAmB;AAAA,QAAlBC,QAAkB,uEAAP,EAAO;AACzC,QAAIC,QAAQ,GAAG,CAAf;AACAD,IAAAA,QAAQ,CAACE,OAAT,CAAiB,UAACC,IAAD,EAAU;AACvBF,MAAAA,QAAQ,IAAIJ,eAAe,CAACM,IAAD,CAA3B;AACH,KAFD;AAIA,WAAOF,QAAP;AACH,GAPD;;AASA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAY;AAC/B,QAAIC,KAAK,GAAG,CAAZ;AACAA,IAAAA,KAAK,IAAIP,iBAAiB,CAACM,MAAM,CAACE,KAAR,CAA1B;AACAD,IAAAA,KAAK,IAAID,MAAM,CAACG,cAAP,IAAyB,CAAlC;AACAF,IAAAA,KAAK,IAAID,MAAM,CAACA,MAAM,CAACI,UAAR,CAAN,IAA6B,CAAtC;AAEA,WAAOH,KAAP;AACH,GAPD;;AASA,MAAMI,YAAY;AAAA,yEAAG,iBAAOL,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBM,cAAAA,YAAjB,QAAiBA,YAAjB;AACjBC,cAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;;AADiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZK,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,eAII;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAMI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAEI,aADnB;AAEI,IAAA,QAAQ,EAAEJ,YAFd;AAGI,IAAA,kBAAkB,EAAE,IAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKK;AAAA,QACGL,MADH,SACGA,MADH;AAAA,QAEGU,MAFH,SAEGA,MAFH;AAAA,QAGGC,OAHH,SAGGA,OAHH;AAAA,QAIGC,YAJH,SAIGA,YAJH;AAAA,QAKGC,UALH,SAKGA,UALH;AAAA,QAMGR,YANH,SAMGA,YANH;AAAA,QAOGC,YAPH,SAOGA,YAPH;AAAA,QAQGQ,aARH,SAQGA,aARH;AAAA,QASGC,aATH,SASGA,aATH;AAAA,wBAWG;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAsB,MAAA,QAAQ,EAAEV,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,UAAU,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAII;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAC,WADd;AAEI,MAAA,KAAK,EAAC,MAFV;AAGI,MAAA,IAAI,EAAC,cAHT;AAII,MAAA,IAAI,EAAC,OAJT;AAKI,MAAA,OAAO,EAAC,UALZ;AAMI,MAAA,MAAM,MANV;AAOI,MAAA,KAAK,EAAEL,MAAM,CAACgB,YAAP,IAAuB,EAPlC;AAQI,MAAA,QAAQ,EAAEJ,YARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUKK,YAAY,CAACC,GAAb,CAAiB,UAACpB,IAAD,EAAOqB,GAAP;AAAA,0BACd;AAAU,QAAA,KAAK,EAAErB,IAAjB;AAAuB,QAAA,GAAG,EAAEA,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,IADL,CADc;AAAA,KAAjB,CAVL,CADJ,CAJJ,eAuBI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBJ,eA0BI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,KAAK,EAAC,YADV;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,OAAO,EAAC,UAJZ;AAKI,MAAA,YAAY,EAAC,YALjB;AAMI,MAAA,KAAK,EAAEE,MAAM,CAACoB,SANlB;AAOI,MAAA,QAAQ,EAAER,YAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CA1BJ,eAsCI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtCJ,eAyCI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,KAAK,EAAC,YADV;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,OAAO,EAAC,UAJZ;AAKI,MAAA,KAAK,EAAEZ,MAAM,CAACqB,OALlB;AAMI,MAAA,QAAQ,EAAET,YANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAzCJ,eAoDI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBApDJ,eAuDI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,uBAAD;AACI,MAAA,KAAK,EAAEtB,YADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,kBAAD;AACI,MAAA,SAAS,EAAC,KADd;AAEI,MAAA,MAAM,EAAC,MAFX;AAGI,MAAA,KAAK,EAAC,cAHV;AAII,MAAA,YAAY,EAAC,UAJjB;AAKI,MAAA,IAAI,EAAC,MALT;AAMI,MAAA,IAAI,EAAC,OANT;AAOI,MAAA,MAAM,EAAE,IAPZ;AAQI,MAAA,KAAK,EAAEU,MAAM,CAACsB,WARlB;AASI,MAAA,MAAM,EAAC,eATX;AAUI,MAAA,QAAQ,EAAE,kBAACC,IAAD;AAAA,eACNR,aAAa,CACT,aADS,EAETQ,IAFS,CADP;AAAA,OAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,eAuBI;AACI,MAAA,SAAS,EAAC,eADd;AAEI,MAAA,KAAK,EAAC,OAFV;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,IAAI,EAAC,OAJT;AAKI,MAAA,OAAO,EAAC,UALZ;AAMI,MAAA,KAAK,EAAEvB,MAAM,CAACwB,KAAP,IAAgB,EAN3B;AAOI,MAAA,QAAQ,EAAEZ,YAPd;AAQI,MAAA,MAAM,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUKa,eAAe,CAACP,GAAhB,CACG,UAACpB,IAAD,EAAOqB,GAAP;AAAA,0BACI;AACI,QAAA,KAAK,EAAErB,IADX;AAEI,QAAA,GAAG,EAAEA,IAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIKA,IAJL,CADJ;AAAA,KADH,CAVL,CAvBJ,eA6CI,oBAAC,uBAAD;AACI,MAAA,KAAK,EAAER,YADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,kBAAD;AACI,MAAA,SAAS,EAAC,KADd;AAEI,MAAA,MAAM,EAAC,MAFX;AAGI,MAAA,KAAK,EAAC,UAHV;AAII,MAAA,YAAY,EAAC,UAJjB;AAKI,MAAA,IAAI,EAAC,MALT;AAMI,MAAA,IAAI,EAAC,OANT;AAOI,MAAA,MAAM,EAAE,IAPZ;AAQI,MAAA,KAAK,EAAEU,MAAM,CAAC0B,OARlB;AASI,MAAA,MAAM,EAAC,eATX;AAUI,MAAA,QAAQ,EAAE,kBAACH,IAAD;AAAA,eACNR,aAAa,CACT,SADS,EAETQ,IAFS,CADP;AAAA,OAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CA7CJ,CADJ,CAvDJ,eA6HI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CA7HJ,eAiII;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjIJ,eAoII;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAC,WADd;AAEI,MAAA,KAAK,EAAC,kBAFV;AAGI,MAAA,IAAI,EAAC,iBAHT;AAII,MAAA,IAAI,EAAC,OAJT;AAKI,MAAA,OAAO,EAAC,UALZ;AAMI,MAAA,KAAK,EAAEvB,MAAM,CAAC2B,eAAP,IAA0B,EANrC;AAOI,MAAA,QAAQ,EAAEf,YAPd;AAQI,MAAA,MAAM,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUKK,YAAY,CAACC,GAAb,CAAiB,UAACpB,IAAD,EAAOqB,GAAP;AAAA,0BACd;AAAU,QAAA,KAAK,EAAErB,IAAjB;AAAuB,QAAA,GAAG,EAAEA,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,IADL,CADc;AAAA,KAAjB,CAVL,CADJ,CApIJ,eAuJI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAvJJ,CADJ,eA6JI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,MAAM,EAAEE,MADZ;AAEI,MAAA,aAAa,EAAEe,aAFnB;AAGI,MAAA,YAAY,EAAEH,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CA7JJ,eAqKI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,KAAK,EAAC,cADV;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,OAAO,EAAC,UAJZ;AAKI,MAAA,SAAS,MALb;AAMI,MAAA,IAAI,EAAE,CANV;AAOI,MAAA,SAAS,MAPb;AAQI,MAAA,KAAK,EAAEZ,MAAM,CAAC4B,KARlB;AASI,MAAA,QAAQ,EAAEhB,YATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAcI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAC,gBADd;AAEI,MAAA,SAAS,EAAE,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AACI,MAAA,SAAS,MADb;AAEI,MAAA,OAAO,EAAE,CAFb;AAGI,MAAA,OAAO,EAAC,eAHZ;AAII,MAAA,UAAU,EAAC,QAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,eASI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKlB,iBAAiB,CACdM,MAAM,CAACE,KADO,CAAjB,CAEC2B,OAFD,CAES,CAFT,CADL,CADJ,CATJ,eAgBI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII;AACI,MAAA,SAAS,EAAC,MADd;AAEI,MAAA,IAAI,EAAC,gBAFT;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,IAAI,EAAC,QAJT;AAKI,MAAA,OAAO,EAAC,UALZ;AAMI,MAAA,KAAK,EACD7B,MAAM,CAACG,cAAP,IACA,EARR;AAUI,MAAA,QAAQ,EACJS,YAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CAhBJ,eAqCI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CACGZ,MAAM,CAACG,cAAP,IACA,CAFH,EAGC0B,OAHD,CAGS,CAHT,CADL,CADJ,CArCJ,eA6CI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,YADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,OAAO,EAAC,UAHZ;AAII,MAAA,KAAK,EACD7B,MAAM,CAACI,UAAP,IACA,EANR;AAQI,MAAA,QAAQ,EACJQ,YATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAcI;AACI,MAAA,SAAS,EAAC,MADd;AAEI,MAAA,IAAI,EACAZ,MAAM,CAACI,UAHf;AAKI,MAAA,IAAI,EAAC,OALT;AAMI,MAAA,OAAO,EAAC,UANZ;AAOI,MAAA,IAAI,EAAC,QAPT;AAQI,MAAA,KAAK,EACDJ,MAAM,CACFA,MAAM,CACDI,UAFH,CAAN,IAGK,EAZb;AAcI,MAAA,QAAQ,EACJQ,YAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,CADJ,CA7CJ,eAgFI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CACGZ,MAAM,CACFA,MAAM,CACDI,UAFH,CAAN,IAGK,CAJR,EAKCyB,OALD,CAKS,CALT,CADL,CADJ,CAhFJ,eA2FI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CA3FJ,eAgGI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK9B,cAAc,CACXC,MADW,CAAd,CAEC6B,OAFD,CAES,CAFT,CADL,CADJ,CADJ,CAhGJ,CAJJ,CADJ,CAdJ,CADJ,CArKJ,eAwSI;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAiC,MAAA,SAAS,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,KAAK,EAAC,oBADV;AAEI,MAAA,IAAI,EAAC,kBAFT;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,OAAO,EAAC,UAJZ;AAKI,MAAA,SAAS,MALb;AAMI,MAAA,IAAI,EAAE,CANV;AAOI,MAAA,SAAS,MAPb;AAQI,MAAA,KAAK,EAAE7B,MAAM,CAAC8B,gBARlB;AASI,MAAA,QAAQ,EAAElB,YATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAcI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,SAAS,EAAC,MAHd;AAII,MAAA,OAAO,EAAC,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,CANJ,CADJ,CADJ,eAgBI;AACI,MAAA,SAAS,EAAC,QADd;AAEI,MAAA,QAAQ,EAAE,kBAACmB,CAAD;AAAA,eACNhB,aAAa,CACT,OADS,EAETgB,CAAC,CAACC,MAAF,CAASC,KAFA,CADP;AAAA,OAFd;AAQI,MAAA,EAAE,EAAC,sBARP;AASI,MAAA,IAAI,EAAC,MATT;AAUI,MAAA,QAAQ,MAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,CAdJ,CADJ,CAxSJ,eAuVI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,KAAK,EAAC,SADV;AAEI,MAAA,OAAO,EAAC,WAFZ;AAGI,MAAA,IAAI,EAAC,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAvVJ,CAXH;AAAA,GALL,CANJ,CADJ,CADJ;AA8XH,CArZD;;AAuZA,IAAMR,eAAe,GAAG,CACpB,QADoB,EAEpB,QAFoB,EAGpB,QAHoB,EAIpB,QAJoB,EAKpB,sBALoB,EAMpB,gBANoB,CAAxB;AASA,IAAMR,YAAY,GAAG,CACjB,YADiB,EAEjB,YAFiB,EAGjB,YAHiB,EAIjB,YAJiB,EAKjB,YALiB,EAMjB,YANiB,EAOjB,YAPiB,EAQjB,YARiB,CAArB;AAWA,IAAMR,aAAa,GAAG;AAClByB,EAAAA,YAAY,EAAE,EADI;AAElB9B,EAAAA,UAAU,EAAE;AAFM,CAAtB;AAKA,eAAeX,WAAf","sourcesContent":["import React from 'react'\r\nimport { Formik } from 'formik'\r\nimport {\r\n    Grid,\r\n    Card,\r\n    Divider,\r\n    TextField,\r\n    MenuItem,\r\n    Button,\r\n    Icon,\r\n} from '@material-ui/core'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport InvoiceItemTable from './InvoiceItemTable'\r\nimport { calculateAmount } from './InvoiceFormService'\r\n\r\nconst InvoiceForm = () => {\r\n    const calculateSubTotal = (itemList = []) => {\r\n        let subTotal = 0\r\n        itemList.forEach((item) => {\r\n            subTotal += calculateAmount(item)\r\n        })\r\n\r\n        return subTotal\r\n    }\r\n\r\n    const calculateTotal = (values) => {\r\n        let total = 0\r\n        total += calculateSubTotal(values.items)\r\n        total += values.shippingCharge || 0\r\n        total += values[values.otherField] || 0\r\n\r\n        return total\r\n    }\r\n\r\n    const handleSubmit = async (values, { isSubmitting }) => {\r\n        console.log(values)\r\n    }\r\n\r\n    return (\r\n        <div className=\"m-sm-30\">\r\n            <Card elevation={3}>\r\n                <div className=\"flex p-4\">\r\n                    <h4 className=\"m-0\">New Invoice</h4>\r\n                </div>\r\n                <Divider className=\"mb-2\" />\r\n\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    onSubmit={handleSubmit}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {({\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isSubmitting,\r\n                        setSubmitting,\r\n                        setFieldValue,\r\n                    }) => (\r\n                        <form className=\"p-4\" onSubmit={handleSubmit}>\r\n                            <Grid container spacing={3} alignItems=\"center\">\r\n                                <Grid item md={2} sm={4} xs={12}>\r\n                                    Customer Name\r\n                                </Grid>\r\n                                <Grid item md={10} sm={8} xs={12}>\r\n                                    <TextField\r\n                                        className=\"min-w-188\"\r\n                                        label=\"Name\"\r\n                                        name=\"customerName\"\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                        select\r\n                                        value={values.customerName || ''}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        {customerList.map((item, ind) => (\r\n                                            <MenuItem value={item} key={item}>\r\n                                                {item}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </Grid>\r\n\r\n                                <Grid item md={2} sm={4} xs={12}>\r\n                                    Invoice#\r\n                                </Grid>\r\n                                <Grid item md={10} sm={8} xs={12}>\r\n                                    <TextField\r\n                                        label=\"Invoice No\"\r\n                                        name=\"invoiceNo\"\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                        defaultValue=\"INV-000001\"\r\n                                        value={values.invoiceNo}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid item md={2} sm={4} xs={12}>\r\n                                    Order Number\r\n                                </Grid>\r\n                                <Grid item md={10} sm={8} xs={12}>\r\n                                    <TextField\r\n                                        label=\"Invoice No\"\r\n                                        name=\"orderNo\"\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                        value={values.orderNo}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid item md={2} sm={4} xs={12}>\r\n                                    Invoice Date\r\n                                </Grid>\r\n                                <Grid item md={10} sm={8} xs={12}>\r\n                                    <div className=\"flex flex-wrap m--2\">\r\n                                        <MuiPickersUtilsProvider\r\n                                            utils={DateFnsUtils}\r\n                                        >\r\n                                            <KeyboardDatePicker\r\n                                                className=\"m-2\"\r\n                                                margin=\"none\"\r\n                                                label=\"Invoice Date\"\r\n                                                inputVariant=\"outlined\"\r\n                                                type=\"text\"\r\n                                                size=\"small\"\r\n                                                autoOk={true}\r\n                                                value={values.invoiceDate}\r\n                                                format=\"MMMM dd, yyyy\"\r\n                                                onChange={(date) =>\r\n                                                    setFieldValue(\r\n                                                        'invoiceDate',\r\n                                                        date\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </MuiPickersUtilsProvider>\r\n\r\n                                        <TextField\r\n                                            className=\"m-2 min-w-188\"\r\n                                            label=\"Terms\"\r\n                                            name=\"terms\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            value={values.terms || ''}\r\n                                            onChange={handleChange}\r\n                                            select\r\n                                        >\r\n                                            {paymentTermList.map(\r\n                                                (item, ind) => (\r\n                                                    <MenuItem\r\n                                                        value={item}\r\n                                                        key={item}\r\n                                                    >\r\n                                                        {item}\r\n                                                    </MenuItem>\r\n                                                )\r\n                                            )}\r\n                                        </TextField>\r\n\r\n                                        <MuiPickersUtilsProvider\r\n                                            utils={DateFnsUtils}\r\n                                        >\r\n                                            <KeyboardDatePicker\r\n                                                className=\"m-2\"\r\n                                                margin=\"none\"\r\n                                                label=\"Due Date\"\r\n                                                inputVariant=\"outlined\"\r\n                                                type=\"text\"\r\n                                                size=\"small\"\r\n                                                autoOk={true}\r\n                                                value={values.dueDate}\r\n                                                format=\"MMMM dd, yyyy\"\r\n                                                onChange={(date) =>\r\n                                                    setFieldValue(\r\n                                                        'dueDate',\r\n                                                        date\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </MuiPickersUtilsProvider>\r\n                                    </div>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <Divider />\r\n                                </Grid>\r\n\r\n                                <Grid item md={2} sm={4} xs={12}>\r\n                                    Salesperson Name\r\n                                </Grid>\r\n                                <Grid item md={10} sm={8} xs={12}>\r\n                                    <TextField\r\n                                        className=\"min-w-188\"\r\n                                        label=\"Salesperson Name\"\r\n                                        name=\"salesPersonName\"\r\n                                        size=\"small\"\r\n                                        variant=\"outlined\"\r\n                                        value={values.salesPersonName || ''}\r\n                                        onChange={handleChange}\r\n                                        select\r\n                                    >\r\n                                        {customerList.map((item, ind) => (\r\n                                            <MenuItem value={item} key={item}>\r\n                                                {item}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <Divider />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <div className=\"mb-8\">\r\n                                <InvoiceItemTable\r\n                                    values={values}\r\n                                    setFieldValue={setFieldValue}\r\n                                    handleChange={handleChange}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"mb-8\">\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            label=\"Custom Notes\"\r\n                                            name=\"notes\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            multiline\r\n                                            rows={6}\r\n                                            fullWidth\r\n                                            value={values.notes}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Card\r\n                                            className=\"bg-default p-4\"\r\n                                            elevation={0}\r\n                                        >\r\n                                            <Grid\r\n                                                container\r\n                                                spacing={3}\r\n                                                justify=\"space-between\"\r\n                                                alignItems=\"center\"\r\n                                            >\r\n                                                <Grid item xs={6}>\r\n                                                    Sub Total\r\n                                                </Grid>\r\n                                                <Grid item xs={6}>\r\n                                                    <div className=\"text-right\">\r\n                                                        {calculateSubTotal(\r\n                                                            values.items\r\n                                                        ).toFixed(2)}\r\n                                                    </div>\r\n                                                </Grid>\r\n                                                <Grid item xs={6}>\r\n                                                    <div className=\"flex items-center\">\r\n                                                        <span className=\"whitespace-pre\">\r\n                                                            Shipping Charges\r\n                                                        </span>\r\n                                                        <TextField\r\n                                                            className=\"ml-3\"\r\n                                                            name=\"shippingCharge\"\r\n                                                            size=\"small\"\r\n                                                            type=\"number\"\r\n                                                            variant=\"outlined\"\r\n                                                            value={\r\n                                                                values.shippingCharge ||\r\n                                                                ''\r\n                                                            }\r\n                                                            onChange={\r\n                                                                handleChange\r\n                                                            }\r\n                                                        />\r\n                                                    </div>\r\n                                                </Grid>\r\n                                                <Grid item xs={6}>\r\n                                                    <div className=\"text-right\">\r\n                                                        {(\r\n                                                            values.shippingCharge ||\r\n                                                            0\r\n                                                        ).toFixed(2)}\r\n                                                    </div>\r\n                                                </Grid>\r\n                                                <Grid item xs={6}>\r\n                                                    <div className=\"flex items-center\">\r\n                                                        <TextField\r\n                                                            name=\"otherField\"\r\n                                                            size=\"small\"\r\n                                                            variant=\"outlined\"\r\n                                                            value={\r\n                                                                values.otherField ||\r\n                                                                ''\r\n                                                            }\r\n                                                            onChange={\r\n                                                                handleChange\r\n                                                            }\r\n                                                        />\r\n\r\n                                                        <TextField\r\n                                                            className=\"ml-3\"\r\n                                                            name={\r\n                                                                values.otherField\r\n                                                            }\r\n                                                            size=\"small\"\r\n                                                            variant=\"outlined\"\r\n                                                            type=\"number\"\r\n                                                            value={\r\n                                                                values[\r\n                                                                    values\r\n                                                                        .otherField\r\n                                                                ] || ''\r\n                                                            }\r\n                                                            onChange={\r\n                                                                handleChange\r\n                                                            }\r\n                                                        />\r\n                                                    </div>\r\n                                                </Grid>\r\n                                                <Grid item xs={6}>\r\n                                                    <div className=\"text-right\">\r\n                                                        {(\r\n                                                            values[\r\n                                                                values\r\n                                                                    .otherField\r\n                                                            ] || 0\r\n                                                        ).toFixed(2)}\r\n                                                    </div>\r\n                                                </Grid>\r\n\r\n                                                <Grid item xs={6}>\r\n                                                    <h5 className=\"m-0\">\r\n                                                        Total ( $ )\r\n                                                    </h5>\r\n                                                </Grid>\r\n                                                <Grid item xs={6}>\r\n                                                    <div className=\"text-right\">\r\n                                                        <h5 className=\"m-0\">\r\n                                                            {calculateTotal(\r\n                                                                values\r\n                                                            ).toFixed(2)}\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n\r\n                            <Card className=\"bg-default p-4\" elevation={0}>\r\n                                <Grid container spacing={3}>\r\n                                    <Grid item xs={6}>\r\n                                        <TextField\r\n                                            label=\"Terms & Conditions\"\r\n                                            name=\"terms_conditions\"\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            multiline\r\n                                            rows={6}\r\n                                            fullWidth\r\n                                            value={values.terms_conditions}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <label htmlFor=\"upload-multiple-file\">\r\n                                            <Button\r\n                                                className=\"capitalize\"\r\n                                                color=\"primary\"\r\n                                                component=\"span\"\r\n                                                variant=\"contained\"\r\n                                            >\r\n                                                <div className=\"flex items-center\">\r\n                                                    <Icon className=\"pr-8\">\r\n                                                        cloud_upload\r\n                                                    </Icon>\r\n                                                    <span>Upload File</span>\r\n                                                </div>\r\n                                            </Button>\r\n                                        </label>\r\n                                        <input\r\n                                            className=\"hidden\"\r\n                                            onChange={(e) =>\r\n                                                setFieldValue(\r\n                                                    'files',\r\n                                                    e.target.files\r\n                                                )\r\n                                            }\r\n                                            id=\"upload-multiple-file\"\r\n                                            type=\"file\"\r\n                                            multiple\r\n                                        />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Card>\r\n\r\n                            <div className=\"mt-6\">\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\"\r\n                                >\r\n                                    Submit\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst paymentTermList = [\r\n    'NET 15',\r\n    'NET 30',\r\n    'NET 45',\r\n    'NET 60',\r\n    'Due end of the month',\r\n    'Due on receive',\r\n]\r\n\r\nconst customerList = [\r\n    'customer 1',\r\n    'customer 2',\r\n    'customer 3',\r\n    'customer 4',\r\n    'customer 5',\r\n    'customer 6',\r\n    'customer 7',\r\n    'customer 8',\r\n]\r\n\r\nconst initialValues = {\r\n    customerType: '',\r\n    otherField: 'Adjustment',\r\n}\r\n\r\nexport default InvoiceForm\r\n"]},"metadata":{},"sourceType":"module"}