{"ast":null,"code":"import _Drawer from \"@material-ui/core/esm/Drawer\";\nimport _Link from \"@material-ui/core/esm/Link\";\nimport _Card from \"@material-ui/core/esm/Card\";\nimport _Button from \"@material-ui/core/esm/Button\";\nimport _IconButton from \"@material-ui/core/esm/IconButton\";\nimport _Icon from \"@material-ui/core/esm/Icon\";\nimport _Tooltip from \"@material-ui/core/esm/Tooltip\";\nvar _jsxFileName = \"D:\\\\DianaUnas\\\\src\\\\app\\\\components\\\\MatxCustomizer\\\\MatxCustomizer.jsx\";\nimport React, { Fragment, useState } from 'react';\nimport Scrollbar from 'react-perfect-scrollbar'; // import Layout1Customizer from \"./Layout1Customizer\";\n// import Layout2Customizer from \"./Layout2Customizer\";\n// import { themeColors } from \"../../MatxTheme/themeColors\";\n\nimport BadgeSelected from './BadgeSelected'; // import { mainThemes, topbarThemes } from \"./customizerOptions\";\n\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport useSettings from 'app/hooks/useSettings';\nconst useStyles = makeStyles(_ref => {\n  let {\n    palette,\n    ...theme\n  } = _ref;\n  return {\n    label: {\n      color: palette.secondary.main,\n      backgroundColor: palette.primary.dark,\n      fontWeight: 700,\n      transform: 'rotate(90deg)',\n      marginBottom: '2.5rem',\n      padding: '.25rem .5rem',\n      borderRadius: '4px',\n      cursor: 'pointer',\n      letterSpacing: '1.5px',\n      fontSize: '1rem',\n      '&:hover, &.open': {\n        backgroundColor: palette.secondary.main,\n        color: palette.secondary.contrastText\n      }\n    },\n    helpText: {\n      margin: '0px .5rem 1rem'\n    },\n    maxCustomizer: {\n      position: 'fixed',\n      top: 0,\n      right: 0,\n      zIndex: 50\n    },\n    customizerCloseButton: {\n      position: 'absolute',\n      right: 8,\n      top: 8\n    },\n    layoutBox: {\n      '&:hover': {\n        '& .layout-name': {\n          position: 'absolute',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '100%',\n          width: '100%',\n          background: 'rgba(0,0,0,0.3)',\n          zIndex: 12\n        }\n      }\n    }\n  };\n});\n\nconst MatxCustomizer = props => {\n  const [open, setOpen] = useState(false);\n  const [tabIndex, setTabIndex] = useState(0);\n  const classes = useStyles();\n  const {\n    settings,\n    updateSettings\n  } = useSettings(); // const handleChange = (name, value) => {\n  //   let updatedSettings = set(settings, name, value);\n  //   updateSettings(updatedSettings);\n  // };\n  // const handleControlChange = (name) => (event) => {\n  //   let controlValue =\n  //     event.target.type === \"checkbox\"\n  //       ? event.target.checked\n  //       : event.target.value;\n  //   handleChange(name, controlValue);\n  // };\n\n  const tooglePanel = () => {\n    setOpen(!open);\n  };\n\n  const handleTabChange = index => {\n    setTabIndex(index);\n  };\n\n  let activeTheme = { ...settings.themes[settings.activeTheme]\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Tooltip, {\n    title: \"Theme Settings\",\n    placement: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx({\n      [classes.label]: true,\n      open\n    }),\n    onClick: tooglePanel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"DEMOS\")), /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: activeTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Drawer, {\n    anchor: 'right',\n    open: open,\n    variant: \"temporary\",\n    onClose: tooglePanel,\n    ModalProps: {\n      keepMounted: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx('flex-column w-320 pb-8 elevation-z12 h-full-screen bg-default', classes.maxCustomizer),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center px-5 py-4 mb-4 min-h-64 elevation-z6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, \"settings\"), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mb-0 ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, \"Theme Settings\"), /*#__PURE__*/React.createElement(_IconButton, {\n    onClick: tooglePanel,\n    className: classes.customizerCloseButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, \"close\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-6 mb-4 flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    variant: \"outlined\",\n    color: tabIndex === 0 ? 'secondary' : 'primary',\n    onClick: () => handleTabChange(0),\n    className: \"mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, \"Demos\"), /*#__PURE__*/React.createElement(_Button, {\n    variant: \"outlined\",\n    color: tabIndex === 1 ? 'secondary' : 'primary',\n    onClick: () => handleTabChange(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, \"Settings\")), /*#__PURE__*/React.createElement(Scrollbar, {\n    options: {\n      suppressScrollX: true\n    },\n    className: \"px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, tabIndex === 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-8 mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 37\n    }\n  }, \"Layouts\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }\n  }, demoLayouts.map(layout => /*#__PURE__*/React.createElement(BadgeSelected, {\n    color: \"secondary\",\n    className: clsx('w-full my-3 max-h-152 cursor-pointer', classes.layoutBox),\n    badgeContent: 'Pro',\n    invisible: !layout.isPro,\n    key: layout.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(_Card, {\n    className: \"relative\",\n    onClick: () => updateSettings(layout.options),\n    elevation: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"layout-name hidden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 57\n    }\n  }, layout.name)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"w-full\",\n    src: layout.thumbnail,\n    alt: layout.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 53\n    }\n  })))))), tabIndex === 1 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.helpText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 37\n    }\n  }, \"We used React context API to control layout. Check out the\", ' ', /*#__PURE__*/React.createElement(_Link, {\n    href: \"http://demos.ui-lib.com/matx-react-doc/layout.html\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 41\n    }\n  }, \"Documentation\"))))))));\n};\n\nconst demoLayouts = [{\n  name: 'Light Sidebar',\n  thumbnail: '/assets/images/screenshots/layout1-customizer.png',\n  isPro: false,\n  options: {\n    activeLayout: 'layout1',\n    activeTheme: 'blue',\n    layout1Settings: {\n      leftSidebar: {\n        mode: 'full',\n        theme: 'whiteBlue',\n        bgOpacity: 0.98\n      },\n      topbar: {\n        theme: 'blueDark',\n        fixed: true\n      }\n    },\n    footer: {\n      theme: 'slateDark1'\n    }\n  }\n}, {\n  name: 'Compact Sidebar',\n  thumbnail: '/assets/images/screenshots/layout5-customizer.png',\n  isPro: false,\n  options: {\n    activeLayout: 'layout1',\n    activeTheme: 'blue',\n    layout1Settings: {\n      leftSidebar: {\n        mode: 'compact',\n        theme: 'slateDark1',\n        bgOpacity: 0.92\n      },\n      topbar: {\n        theme: 'whiteBlue',\n        fixed: true\n      }\n    }\n  }\n}, {\n  name: 'Dark Sidebar',\n  thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\n  isPro: false,\n  options: {\n    activeLayout: 'layout1',\n    activeTheme: 'blue',\n    layout1Settings: {\n      leftSidebar: {\n        mode: 'full',\n        theme: 'slateDark1',\n        bgOpacity: 0.92\n      },\n      topbar: {\n        theme: 'blueDark',\n        fixed: true\n      }\n    }\n  }\n}, {\n  name: 'Dark Theme',\n  thumbnail: '/assets/images/screenshots/layout3-customizer.png',\n  isPro: true,\n  options: {\n    activeLayout: 'layout2',\n    activeTheme: 'blue',\n    layout1Settings: {\n      leftSidebar: {\n        mode: 'full',\n        theme: 'slateDark1',\n        bgOpacity: 0.92\n      },\n      topbar: {\n        theme: 'purpleDark1',\n        fixed: true\n      }\n    },\n    footer: {\n      theme: 'slateDark1'\n    }\n  }\n}, {\n  name: 'Horizontal Navigation',\n  thumbnail: '/assets/images/screenshots/layout4-customizer.png',\n  isPro: true,\n  options: {\n    activeLayout: 'layout2',\n    activeTheme: 'purple1',\n    layout2Settings: {\n      mode: 'full'\n    },\n    footer: {\n      theme: 'slateDark1'\n    }\n  }\n}];\nexport default MatxCustomizer;","map":{"version":3,"sources":["D:/DianaUnas/src/app/components/MatxCustomizer/MatxCustomizer.jsx"],"names":["React","Fragment","useState","Scrollbar","BadgeSelected","makeStyles","ThemeProvider","clsx","useSettings","useStyles","palette","theme","label","color","secondary","main","backgroundColor","primary","dark","fontWeight","transform","marginBottom","padding","borderRadius","cursor","letterSpacing","fontSize","contrastText","helpText","margin","maxCustomizer","position","top","right","zIndex","customizerCloseButton","layoutBox","display","justifyContent","alignItems","height","width","background","MatxCustomizer","props","open","setOpen","tabIndex","setTabIndex","classes","settings","updateSettings","tooglePanel","handleTabChange","index","activeTheme","themes","keepMounted","suppressScrollX","demoLayouts","map","layout","isPro","name","options","thumbnail","activeLayout","layout1Settings","leftSidebar","mode","bgOpacity","topbar","fixed","footer","layout2Settings"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport {\r\n    Icon,\r\n    IconButton,\r\n    Button,\r\n    // FormGroup,\r\n    // Switch,\r\n    // FormControlLabel,\r\n    // FormControl,\r\n    // FormLabel,\r\n    Card,\r\n    Tooltip,\r\n    Drawer,\r\n    Link,\r\n} from '@material-ui/core'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\n// import Layout1Customizer from \"./Layout1Customizer\";\r\n// import Layout2Customizer from \"./Layout2Customizer\";\r\n// import { themeColors } from \"../../MatxTheme/themeColors\";\r\nimport BadgeSelected from './BadgeSelected'\r\n// import { mainThemes, topbarThemes } from \"./customizerOptions\";\r\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\n\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    label: {\r\n        color: palette.secondary.main,\r\n        backgroundColor: palette.primary.dark,\r\n        fontWeight: 700,\r\n        transform: 'rotate(90deg)',\r\n        marginBottom: '2.5rem',\r\n        padding: '.25rem .5rem',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n        letterSpacing: '1.5px',\r\n        fontSize: '1rem',\r\n        '&:hover, &.open': {\r\n            backgroundColor: palette.secondary.main,\r\n            color: palette.secondary.contrastText,\r\n        },\r\n    },\r\n    helpText: {\r\n        margin: '0px .5rem 1rem',\r\n    },\r\n    maxCustomizer: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        zIndex: 50,\r\n    },\r\n    customizerCloseButton: {\r\n        position: 'absolute',\r\n        right: 8,\r\n        top: 8,\r\n    },\r\n    layoutBox: {\r\n        '&:hover': {\r\n            '& .layout-name': {\r\n                position: 'absolute',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '100%',\r\n                width: '100%',\r\n                background: 'rgba(0,0,0,0.3)',\r\n                zIndex: 12,\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nconst MatxCustomizer = (props) => {\r\n    const [open, setOpen] = useState(false)\r\n    const [tabIndex, setTabIndex] = useState(0)\r\n\r\n    const classes = useStyles()\r\n    const { settings, updateSettings } = useSettings()\r\n\r\n    // const handleChange = (name, value) => {\r\n    //   let updatedSettings = set(settings, name, value);\r\n\r\n    //   updateSettings(updatedSettings);\r\n    // };\r\n\r\n    // const handleControlChange = (name) => (event) => {\r\n    //   let controlValue =\r\n    //     event.target.type === \"checkbox\"\r\n    //       ? event.target.checked\r\n    //       : event.target.value;\r\n    //   handleChange(name, controlValue);\r\n    // };\r\n\r\n    const tooglePanel = () => {\r\n        setOpen(!open)\r\n    }\r\n    const handleTabChange = (index) => {\r\n        setTabIndex(index)\r\n    }\r\n\r\n    let activeTheme = { ...settings.themes[settings.activeTheme] }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Tooltip title=\"Theme Settings\" placement=\"left\">\r\n                <span\r\n                    className={clsx({ [classes.label]: true, open })}\r\n                    onClick={tooglePanel}\r\n                >\r\n                    DEMOS\r\n                </span>\r\n            </Tooltip>\r\n\r\n            {/* {open && ( */}\r\n            <ThemeProvider theme={activeTheme}>\r\n                <Drawer\r\n                    anchor={'right'}\r\n                    open={open}\r\n                    variant=\"temporary\"\r\n                    onClose={tooglePanel}\r\n                    ModalProps={{\r\n                        keepMounted: true,\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={clsx(\r\n                            'flex-column w-320 pb-8 elevation-z12 h-full-screen bg-default',\r\n                            classes.maxCustomizer\r\n                        )}\r\n                    >\r\n                        <div className=\"flex items-center px-5 py-4 mb-4 min-h-64 elevation-z6\">\r\n                            <Icon color=\"primary\">settings</Icon>\r\n                            <h5 className=\"mb-0 ml-2\">Theme Settings</h5>\r\n                            <IconButton\r\n                                onClick={tooglePanel}\r\n                                className={classes.customizerCloseButton}\r\n                            >\r\n                                <Icon>close</Icon>\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className=\"px-6 mb-4 flex\">\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color={tabIndex === 0 ? 'secondary' : 'primary'}\r\n                                onClick={() => handleTabChange(0)}\r\n                                className=\"mr-4\"\r\n                            >\r\n                                Demos\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color={tabIndex === 1 ? 'secondary' : 'primary'}\r\n                                onClick={() => handleTabChange(1)}\r\n                            >\r\n                                Settings\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <Scrollbar\r\n                            options={{ suppressScrollX: true }}\r\n                            className=\"px-4\"\r\n                        >\r\n                            {tabIndex === 0 && (\r\n                                <div className=\"mb-8 mx-2\">\r\n                                    <div className=\"text-muted\">Layouts</div>\r\n\r\n                                    <div className=\"flex-column\">\r\n                                        {demoLayouts.map((layout) => (\r\n                                            <BadgeSelected\r\n                                                color=\"secondary\"\r\n                                                className={clsx(\r\n                                                    'w-full my-3 max-h-152 cursor-pointer',\r\n                                                    classes.layoutBox\r\n                                                )}\r\n                                                badgeContent={'Pro'}\r\n                                                invisible={!layout.isPro}\r\n                                                key={layout.name}\r\n                                            >\r\n                                                <Card\r\n                                                    className=\"relative\"\r\n                                                    onClick={() =>\r\n                                                        updateSettings(\r\n                                                            layout.options\r\n                                                        )\r\n                                                    }\r\n                                                    elevation={4}\r\n                                                >\r\n                                                    <div className=\"layout-name hidden\">\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"secondary\"\r\n                                                        >\r\n                                                            {layout.name}\r\n                                                        </Button>\r\n                                                    </div>\r\n\r\n                                                    <img\r\n                                                        className=\"w-full\"\r\n                                                        src={layout.thumbnail}\r\n                                                        alt={layout.name}\r\n                                                    />\r\n                                                </Card>\r\n                                            </BadgeSelected>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* END LAYOUT */}\r\n\r\n                            {tabIndex === 1 && (\r\n                                <div>\r\n                                    <div className={classes.helpText}>\r\n                                        We used React context API to control\r\n                                        layout. Check out the{' '}\r\n                                        <Link\r\n                                            href=\"http://demos.ui-lib.com/matx-react-doc/layout.html\"\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            Documentation\r\n                                        </Link>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            )}\r\n                        </Scrollbar>\r\n                    </div>\r\n                </Drawer>\r\n            </ThemeProvider>\r\n            {/* )} */}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst demoLayouts = [\r\n    {\r\n        name: 'Light Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout1-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'full',\r\n                    theme: 'whiteBlue',\r\n                    bgOpacity: 0.98,\r\n                },\r\n                topbar: {\r\n                    theme: 'blueDark',\r\n                    fixed: true,\r\n                },\r\n            },\r\n            footer: {\r\n                theme: 'slateDark1',\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Compact Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout5-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'compact',\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92,\r\n                },\r\n                topbar: {\r\n                    theme: 'whiteBlue',\r\n                    fixed: true,\r\n                },\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Dark Sidebar',\r\n        thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\r\n        isPro: false,\r\n        options: {\r\n            activeLayout: 'layout1',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'full',\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92,\r\n                },\r\n                topbar: {\r\n                    theme: 'blueDark',\r\n                    fixed: true,\r\n                },\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Dark Theme',\r\n        thumbnail: '/assets/images/screenshots/layout3-customizer.png',\r\n        isPro: true,\r\n        options: {\r\n            activeLayout: 'layout2',\r\n            activeTheme: 'blue',\r\n            layout1Settings: {\r\n                leftSidebar: {\r\n                    mode: 'full',\r\n                    theme: 'slateDark1',\r\n                    bgOpacity: 0.92,\r\n                },\r\n                topbar: {\r\n                    theme: 'purpleDark1',\r\n                    fixed: true,\r\n                },\r\n            },\r\n            footer: {\r\n                theme: 'slateDark1',\r\n            },\r\n        },\r\n    },\r\n    {\r\n        name: 'Horizontal Navigation',\r\n        thumbnail: '/assets/images/screenshots/layout4-customizer.png',\r\n        isPro: true,\r\n        options: {\r\n            activeLayout: 'layout2',\r\n            activeTheme: 'purple1',\r\n            layout2Settings: {\r\n                mode: 'full',\r\n            },\r\n            footer: {\r\n                theme: 'slateDark1',\r\n            },\r\n        },\r\n    },\r\n]\r\n\r\nexport default MatxCustomizer\r\n"]},"metadata":{},"sourceType":"module"}