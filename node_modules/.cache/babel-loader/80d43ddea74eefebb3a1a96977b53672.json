{"ast":null,"code":"import _Button from \"@material-ui/core/esm/Button\";\nimport _Icon from \"@material-ui/core/esm/Icon\";\nimport _Checkbox from \"@material-ui/core/esm/Checkbox\";\nimport _RadioGroup from \"@material-ui/core/esm/RadioGroup\";\nimport _FormControlLabel from \"@material-ui/core/esm/FormControlLabel\";\nimport _Radio from \"@material-ui/core/esm/Radio\";\nimport _Grid from \"@material-ui/core/esm/Grid\";\nvar _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\plantilla\\\\src\\\\app\\\\views\\\\material-kit\\\\forms\\\\SimpleForm.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst SimpleForm = () => {\n  const [state, setState] = useState({\n    date: new Date()\n  });\n  useEffect(() => {\n    ValidatorForm.addValidationRule('isPasswordMatch', value => {\n      console.log(value);\n\n      if (value !== state.password) {\n        return false;\n      }\n\n      return true;\n    });\n    return () => ValidatorForm.removeValidationRule('isPasswordMatch');\n  }, [state.password]);\n\n  const handleSubmit = event => {// console.log(\"submitted\");\n    // console.log(event);\n  };\n\n  const handleChange = event => {\n    event.persist();\n    setState({ ...state,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleDateChange = date => {\n    setState({ ...state,\n      date\n    });\n  };\n\n  const {\n    username,\n    firstName,\n    creditCard,\n    mobile,\n    password,\n    confirmPassword,\n    gender,\n    date,\n    email\n  } = state;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ValidatorForm, {\n    onSubmit: handleSubmit,\n    onError: () => null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Grid, {\n    container: true,\n    spacing: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Username (Min length 4, Max length 9)\",\n    onChange: handleChange,\n    type: \"text\",\n    name: \"username\",\n    value: username || '',\n    validators: ['required', 'minStringLength: 4', 'maxStringLength: 9'],\n    errorMessages: ['this field is required'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"First n,mnName\",\n    onChange: handleChange,\n    type: \"text\",\n    name: \"firstName\",\n    value: firstName || '',\n    validators: ['required'],\n    errorMessages: ['this field is required'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Email\",\n    onChange: handleChange,\n    type: \"email\",\n    name: \"email\",\n    value: email || '',\n    validators: ['required', 'isEmail'],\n    errorMessages: ['this field is required', 'email is not valid'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    className: \"mb-4 w-full\",\n    margin: \"none\",\n    id: \"mui-pickers-date\",\n    label: \"Date picker\",\n    inputVariant: \"standard\",\n    type: \"text\",\n    autoOk: true,\n    value: date,\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-8 w-full\",\n    label: \"Credit Card\",\n    onChange: handleChange,\n    type: \"number\",\n    name: \"creditCard\",\n    value: creditCard || '',\n    validators: ['required', 'minStringLength:16', 'maxStringLength: 16'],\n    errorMessages: ['this field is required'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(_Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Mobile Nubmer\",\n    onChange: handleChange,\n    type: \"text\",\n    name: \"mobile\",\n    value: mobile || '',\n    validators: ['required'],\n    errorMessages: ['this field is required'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Password\",\n    onChange: handleChange,\n    name: \"password\",\n    type: \"password\",\n    value: password || '',\n    validators: ['required'],\n    errorMessages: ['this field is required'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Confirm Password\",\n    onChange: handleChange,\n    name: \"confirmPassword\",\n    type: \"password\",\n    value: confirmPassword || '',\n    validators: ['required', 'isPasswordMatch'],\n    errorMessages: ['this field is required', \"password didn't match\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(_RadioGroup, {\n    className: \"mb-4\",\n    value: gender || '',\n    name: \"gender\",\n    onChange: handleChange,\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_FormControlLabel, {\n    value: \"Male\",\n    control: /*#__PURE__*/React.createElement(_Radio, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 42\n      }\n    }),\n    label: \"Male\",\n    labelPlacement: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(_FormControlLabel, {\n    value: \"Female\",\n    control: /*#__PURE__*/React.createElement(_Radio, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 42\n      }\n    }),\n    label: \"Female\",\n    labelPlacement: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(_FormControlLabel, {\n    value: \"Others\",\n    control: /*#__PURE__*/React.createElement(_Radio, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 42\n      }\n    }),\n    label: \"Others\",\n    labelPlacement: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(_FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(_Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 38\n      }\n    }),\n    label: \"I have read and agree to the terms of service.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(_Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, \"send\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pl-2 capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, \"Enviar\"))));\n};\n\nexport default SimpleForm;","map":{"version":3,"sources":["C:/Users/DiazP/Documents/plantilla/src/app/views/material-kit/forms/SimpleForm.jsx"],"names":["React","useState","useEffect","ValidatorForm","TextValidator","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","SimpleForm","state","setState","date","Date","addValidationRule","value","console","log","password","removeValidationRule","handleSubmit","event","handleChange","persist","target","name","handleDateChange","username","firstName","creditCard","mobile","confirmPassword","gender","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\nimport {\r\n    Button,\r\n    Icon,\r\n    Grid,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    Checkbox,\r\n} from '@material-ui/core'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers'\r\nimport 'date-fns'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\n\r\nconst SimpleForm = () => {\r\n    const [state, setState] = useState({\r\n        date: new Date(),\r\n    })\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            console.log(value)\r\n\r\n            if (value !== state.password) {\r\n                return false\r\n            }\r\n            return true\r\n        })\r\n        return () => ValidatorForm.removeValidationRule('isPasswordMatch')\r\n    }, [state.password])\r\n\r\n    const handleSubmit = (event) => {\r\n        // console.log(\"submitted\");\r\n        // console.log(event);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        event.persist()\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n        setState({ ...state, date })\r\n    }\r\n\r\n    const {\r\n        username,\r\n        firstName,\r\n        creditCard,\r\n        mobile,\r\n        password,\r\n        confirmPassword,\r\n        gender,\r\n        date,\r\n        email,\r\n    } = state\r\n\r\n    return (\r\n        <div>\r\n            <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n                <Grid container spacing={6}>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Username (Min length 4, Max length 9)\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={username || ''}\r\n                            validators={[\r\n                                'required',\r\n                                'minStringLength: 4',\r\n                                'maxStringLength: 9',\r\n                            ]}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"First n,mnName\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            value={firstName || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Email\"\r\n                            onChange={handleChange}\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={email || ''}\r\n                            validators={['required', 'isEmail']}\r\n                            errorMessages={[\r\n                                'this field is required',\r\n                                'email is not valid',\r\n                            ]}\r\n                        />\r\n\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                className=\"mb-4 w-full\"\r\n                                margin=\"none\"\r\n                                id=\"mui-pickers-date\"\r\n                                label=\"Date picker\"\r\n                                inputVariant=\"standard\"\r\n                                type=\"text\"\r\n                                autoOk={true}\r\n                                value={date}\r\n                                onChange={handleDateChange}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                        <TextValidator\r\n                            className=\"mb-8 w-full\"\r\n                            label=\"Credit Card\"\r\n                            onChange={handleChange}\r\n                            type=\"number\"\r\n                            name=\"creditCard\"\r\n                            value={creditCard || ''}\r\n                            validators={[\r\n                                'required',\r\n                                'minStringLength:16',\r\n                                'maxStringLength: 16',\r\n                            ]}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Mobile Nubmer\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"mobile\"\r\n                            value={mobile || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Password\"\r\n                            onChange={handleChange}\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            value={password || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['this field is required']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Confirm Password\"\r\n                            onChange={handleChange}\r\n                            name=\"confirmPassword\"\r\n                            type=\"password\"\r\n                            value={confirmPassword || ''}\r\n                            validators={['required', 'isPasswordMatch']}\r\n                            errorMessages={[\r\n                                'this field is required',\r\n                                \"password didn't match\",\r\n                            ]}\r\n                        />\r\n                        <RadioGroup\r\n                            className=\"mb-4\"\r\n                            value={gender || ''}\r\n                            name=\"gender\"\r\n                            onChange={handleChange}\r\n                            row\r\n                        >\r\n                            <FormControlLabel\r\n                                value=\"Male\"\r\n                                control={<Radio color=\"secondary\" />}\r\n                                label=\"Male\"\r\n                                labelPlacement=\"end\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"Female\"\r\n                                control={<Radio color=\"secondary\" />}\r\n                                label=\"Female\"\r\n                                labelPlacement=\"end\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"Others\"\r\n                                control={<Radio color=\"secondary\" />}\r\n                                label=\"Others\"\r\n                                labelPlacement=\"end\"\r\n                            />\r\n                        </RadioGroup>\r\n                        <FormControlLabel\r\n                            control={<Checkbox />}\r\n                            label=\"I have read and agree to the terms of service.\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                    <Icon>send</Icon>\r\n                    <span className=\"pl-2 capitalize\">Enviar</span>\r\n                </Button>\r\n            </ValidatorForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SimpleForm\r\n"]},"metadata":{},"sourceType":"module"}