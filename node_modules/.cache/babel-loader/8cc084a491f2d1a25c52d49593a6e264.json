{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\src\\\\app\\\\views\\\\material-kit\\\\dialog\\\\ConfirmationDialog.jsx\";\nvar _excluded = [\"onClose\", \"value\", \"open\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nvar options = ['None', 'Atria', 'Callisto', 'Dione', 'Ganymede', 'Hangouts Call', 'Luna', 'Oberon', 'Phobos', 'Pyxis', 'Sedna', 'Titania', 'Triton', 'Umbriel'];\n\nfunction ConfirmationDialogRaw(props) {\n  var _this = this;\n\n  var onClose = props.onClose,\n      valueProp = props.value,\n      open = props.open,\n      other = _objectWithoutProperties(props, _excluded);\n\n  var _React$useState = React.useState(valueProp),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var radioGroupRef = React.useRef(null);\n  React.useEffect(function () {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  function handleEntering() {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  }\n\n  function handleCancel() {\n    onClose();\n  }\n\n  function handleOk() {\n    onClose(value);\n  }\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  return /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    maxWidth: \"xs\",\n    onEntering: handleEntering,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"confirmation-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Phone Ringtone\"), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    ref: radioGroupRef,\n    \"aria-label\": \"Ringtone\",\n    name: \"ringtone\",\n    value: value,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, options.map(function (option) {\n    return /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: option,\n      key: option,\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 38\n        }\n      }),\n      label: option,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOk,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Ok\")));\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    },\n    paper: {\n      width: '80%',\n      maxHeight: 435\n    }\n  };\n});\nexport default function ConfirmationDialog() {\n  var classes = useStyles();\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      setOpen = _React$useState4[1];\n\n  var _React$useState5 = React.useState('Dione'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      value = _React$useState6[0],\n      setValue = _React$useState6[1];\n\n  function handleClickListItem() {\n    setOpen(true);\n  }\n\n  function handleClose(newValue) {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    component: \"div\",\n    role: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    divider: true,\n    disabled: true,\n    role: \"listitem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Interruptions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    divider: true,\n    \"aria-controls\": \"ringtone-menu\",\n    \"aria-label\": \"Phone ringtone\",\n    onClick: handleClickListItem,\n    role: \"listitem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Phone ringtone\",\n    secondary: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    divider: true,\n    disabled: true,\n    role: \"listitem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Default notification ringtone\",\n    secondary: \"Tethys\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ConfirmationDialogRaw, {\n    classes: {\n      paper: classes.paper\n    },\n    id: \"ringtone-menu\",\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/DiazP/Documents/SSmanagm/src/app/views/material-kit/dialog/ConfirmationDialog.jsx"],"names":["React","PropTypes","makeStyles","Button","List","ListItem","ListItemText","DialogTitle","DialogContent","DialogActions","Dialog","RadioGroup","Radio","FormControlLabel","options","ConfirmationDialogRaw","props","onClose","valueProp","value","open","other","useState","setValue","radioGroupRef","useRef","useEffect","handleEntering","current","focus","handleCancel","handleOk","handleChange","event","newValue","map","option","propTypes","func","isRequired","bool","string","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","maxHeight","ConfirmationDialog","classes","setOpen","handleClickListItem","handleClose"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AAEA,IAAMC,OAAO,GAAG,CACZ,MADY,EAEZ,OAFY,EAGZ,UAHY,EAIZ,OAJY,EAKZ,UALY,EAMZ,eANY,EAOZ,MAPY,EAQZ,QARY,EASZ,QATY,EAUZ,OAVY,EAWZ,OAXY,EAYZ,SAZY,EAaZ,QAbY,EAcZ,SAdY,CAAhB;;AAiBA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA;;AAClC,MAAQC,OAAR,GAAsDD,KAAtD,CAAQC,OAAR;AAAA,MAAwBC,SAAxB,GAAsDF,KAAtD,CAAiBG,KAAjB;AAAA,MAAmCC,IAAnC,GAAsDJ,KAAtD,CAAmCI,IAAnC;AAAA,MAA4CC,KAA5C,4BAAsDL,KAAtD;;AACA,wBAA0BhB,KAAK,CAACsB,QAAN,CAAeJ,SAAf,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcI,QAAd;;AACA,MAAMC,aAAa,GAAGxB,KAAK,CAACyB,MAAN,CAAa,IAAb,CAAtB;AAEAzB,EAAAA,KAAK,CAAC0B,SAAN,CAAgB,YAAM;AAClB,QAAI,CAACN,IAAL,EAAW;AACPG,MAAAA,QAAQ,CAACL,SAAD,CAAR;AACH;AACJ,GAJD,EAIG,CAACA,SAAD,EAAYE,IAAZ,CAJH;;AAMA,WAASO,cAAT,GAA0B;AACtB,QAAIH,aAAa,CAACI,OAAd,IAAyB,IAA7B,EAAmC;AAC/BJ,MAAAA,aAAa,CAACI,OAAd,CAAsBC,KAAtB;AACH;AACJ;;AAED,WAASC,YAAT,GAAwB;AACpBb,IAAAA,OAAO;AACV;;AAED,WAASc,QAAT,GAAoB;AAChBd,IAAAA,OAAO,CAACE,KAAD,CAAP;AACH;;AAED,WAASa,YAAT,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuC;AACnCX,IAAAA,QAAQ,CAACW,QAAD,CAAR;AACH;;AAED,sBACI,oBAAC,MAAD;AACI,IAAA,oBAAoB,MADxB;AAEI,IAAA,oBAAoB,MAFxB;AAGI,IAAA,QAAQ,EAAC,IAHb;AAII,IAAA,UAAU,EAAEP,cAJhB;AAKI,uBAAgB,2BALpB;AAMI,IAAA,IAAI,EAAEP;AANV,KAOQC,KAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,eAYI,oBAAC,aAAD;AAAe,IAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,GAAG,EAAEG,aADT;AAEI,kBAAW,UAFf;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,KAAK,EAAEL,KAJX;AAKI,IAAA,QAAQ,EAAEa,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKlB,OAAO,CAACqB,GAAR,CAAY,UAACC,MAAD;AAAA,wBACT,oBAAC,gBAAD;AACI,MAAA,KAAK,EAAEA,MADX;AAEI,MAAA,GAAG,EAAEA,MAFT;AAGI,MAAA,OAAO,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHb;AAII,MAAA,KAAK,EAAEA,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS;AAAA,GAAZ,CAPL,CADJ,CAZJ,eA8BI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAC,WAFV;AAGI,IAAA,OAAO,EAAEN,YAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,QAAjB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARJ,CA9BJ,CADJ;AA6CH;;AAEDhB,qBAAqB,CAACsB,SAAtB,GAAkC;AAC9BpB,EAAAA,OAAO,EAAEhB,SAAS,CAACqC,IAAV,CAAeC,UADM;AAE9BnB,EAAAA,IAAI,EAAEnB,SAAS,CAACuC,IAAV,CAAeD,UAFS;AAG9BpB,EAAAA,KAAK,EAAElB,SAAS,CAACwC,MAAV,CAAiBF;AAHM,CAAlC;AAMA,IAAMG,SAAS,GAAGxC,UAAU,CAAC,UAACyC,KAAD;AAAA,SAAY;AACrCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE,MADL;AAEFC,MAAAA,QAAQ,EAAE,GAFR;AAGFC,MAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHxC,KAD+B;AAMrCA,IAAAA,KAAK,EAAE;AACHL,MAAAA,KAAK,EAAE,KADJ;AAEHM,MAAAA,SAAS,EAAE;AAFR;AAN8B,GAAZ;AAAA,CAAD,CAA5B;AAYA,eAAe,SAASC,kBAAT,GAA8B;AACzC,MAAMC,OAAO,GAAGX,SAAS,EAAzB;;AACA,yBAAwB1C,KAAK,CAACsB,QAAN,CAAe,KAAf,CAAxB;AAAA;AAAA,MAAOF,IAAP;AAAA,MAAakC,OAAb;;AACA,yBAA0BtD,KAAK,CAACsB,QAAN,CAAe,OAAf,CAA1B;AAAA;AAAA,MAAOH,KAAP;AAAA,MAAcI,QAAd;;AAEA,WAASgC,mBAAT,GAA+B;AAC3BD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH;;AAED,WAASE,WAAT,CAAqBtB,QAArB,EAA+B;AAC3BoB,IAAAA,OAAO,CAAC,KAAD,CAAP;;AAEA,QAAIpB,QAAJ,EAAc;AACVX,MAAAA,QAAQ,CAACW,QAAD,CAAR;AACH;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEmB,OAAO,CAACT,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,OAAO,MAAxB;AAAyB,IAAA,QAAQ,MAAjC;AAAkC,IAAA,IAAI,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,QAAD;AACI,IAAA,MAAM,MADV;AAEI,IAAA,OAAO,MAFX;AAGI,qBAAc,eAHlB;AAII,kBAAW,gBAJf;AAKI,IAAA,OAAO,EAAEW,mBALb;AAMI,IAAA,IAAI,EAAC,UANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,gBAAtB;AAAuC,IAAA,SAAS,EAAEpC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAJJ,eAcI,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,OAAO,MAAxB;AAAyB,IAAA,QAAQ,MAAjC;AAAkC,IAAA,IAAI,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AACI,IAAA,OAAO,EAAC,+BADZ;AAEI,IAAA,SAAS,EAAC,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAdJ,eAoBI,oBAAC,qBAAD;AACI,IAAA,OAAO,EAAE;AACL+B,MAAAA,KAAK,EAAEG,OAAO,CAACH;AADV,KADb;AAII,IAAA,EAAE,EAAC,eAJP;AAKI,IAAA,WAAW,MALf;AAMI,IAAA,IAAI,EAAE9B,IANV;AAOI,IAAA,OAAO,EAAEoC,WAPb;AAQI,IAAA,KAAK,EAAErC,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,CADJ,CADJ;AAmCH","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\n\r\nconst options = [\r\n    'None',\r\n    'Atria',\r\n    'Callisto',\r\n    'Dione',\r\n    'Ganymede',\r\n    'Hangouts Call',\r\n    'Luna',\r\n    'Oberon',\r\n    'Phobos',\r\n    'Pyxis',\r\n    'Sedna',\r\n    'Titania',\r\n    'Triton',\r\n    'Umbriel',\r\n]\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n    const { onClose, value: valueProp, open, ...other } = props\r\n    const [value, setValue] = React.useState(valueProp)\r\n    const radioGroupRef = React.useRef(null)\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setValue(valueProp)\r\n        }\r\n    }, [valueProp, open])\r\n\r\n    function handleEntering() {\r\n        if (radioGroupRef.current != null) {\r\n            radioGroupRef.current.focus()\r\n        }\r\n    }\r\n\r\n    function handleCancel() {\r\n        onClose()\r\n    }\r\n\r\n    function handleOk() {\r\n        onClose(value)\r\n    }\r\n\r\n    function handleChange(event, newValue) {\r\n        setValue(newValue)\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            disableBackdropClick\r\n            disableEscapeKeyDown\r\n            maxWidth=\"xs\"\r\n            onEntering={handleEntering}\r\n            aria-labelledby=\"confirmation-dialog-title\"\r\n            open={open}\r\n            {...other}\r\n        >\r\n            <DialogTitle id=\"confirmation-dialog-title\">\r\n                Phone Ringtone\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                <RadioGroup\r\n                    ref={radioGroupRef}\r\n                    aria-label=\"Ringtone\"\r\n                    name=\"ringtone\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                >\r\n                    {options.map((option) => (\r\n                        <FormControlLabel\r\n                            value={option}\r\n                            key={option}\r\n                            control={<Radio />}\r\n                            label={option}\r\n                        />\r\n                    ))}\r\n                </RadioGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={handleCancel}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={handleOk} color=\"primary\">\r\n                    Ok\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paper: {\r\n        width: '80%',\r\n        maxHeight: 435,\r\n    },\r\n}))\r\n\r\nexport default function ConfirmationDialog() {\r\n    const classes = useStyles()\r\n    const [open, setOpen] = React.useState(false)\r\n    const [value, setValue] = React.useState('Dione')\r\n\r\n    function handleClickListItem() {\r\n        setOpen(true)\r\n    }\r\n\r\n    function handleClose(newValue) {\r\n        setOpen(false)\r\n\r\n        if (newValue) {\r\n            setValue(newValue)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <List component=\"div\" role=\"list\">\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                    <ListItemText primary=\"Interruptions\" />\r\n                </ListItem>\r\n                <ListItem\r\n                    button\r\n                    divider\r\n                    aria-controls=\"ringtone-menu\"\r\n                    aria-label=\"Phone ringtone\"\r\n                    onClick={handleClickListItem}\r\n                    role=\"listitem\"\r\n                >\r\n                    <ListItemText primary=\"Phone ringtone\" secondary={value} />\r\n                </ListItem>\r\n                <ListItem button divider disabled role=\"listitem\">\r\n                    <ListItemText\r\n                        primary=\"Default notification ringtone\"\r\n                        secondary=\"Tethys\"\r\n                    />\r\n                </ListItem>\r\n                <ConfirmationDialogRaw\r\n                    classes={{\r\n                        paper: classes.paper,\r\n                    }}\r\n                    id=\"ringtone-menu\"\r\n                    keepMounted\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    value={value}\r\n                />\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}