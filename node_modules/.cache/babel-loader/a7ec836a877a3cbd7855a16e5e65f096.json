{"ast":null,"code":"import _Button from \"@material-ui/core/esm/Button\";\nimport _Table from \"@material-ui/core/esm/Table\";\nimport _TableBody from \"@material-ui/core/esm/TableBody\";\nimport _IconButton from \"@material-ui/core/esm/IconButton\";\nimport _Icon from \"@material-ui/core/esm/Icon\";\nimport _Select from \"@material-ui/core/esm/Select\";\nimport _MenuItem from \"@material-ui/core/esm/MenuItem\";\nimport _TextField from \"@material-ui/core/esm/TextField\";\nimport _TableHead from \"@material-ui/core/esm/TableHead\";\nimport _TableRow from \"@material-ui/core/esm/TableRow\";\nimport _TableCell from \"@material-ui/core/esm/TableCell\";\nimport _slicedToArray from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\src\\\\app\\\\views\\\\forms\\\\invoice-form\\\\InvoiceItemTable.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { FieldArray } from 'formik';\nimport { Autocomplete } from '@material-ui/lab';\nimport { getProductList, calculateAmount } from './InvoiceFormService';\n\nvar InvoiceItemTable = function InvoiceItemTable(_ref) {\n  var values = _ref.values,\n      handleChange = _ref.handleChange,\n      setFieldValue = _ref.setFieldValue;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAlive = _useState2[0],\n      setIsAlive = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      productList = _useState4[0],\n      setProductList = _useState4[1];\n\n  useEffect(function () {\n    getProductList().then(function (_ref2) {\n      var data = _ref2.data;\n      if (isAlive) setProductList(data);\n    });\n    return function () {\n      return setIsAlive(false);\n    };\n  }, [isAlive]);\n  return /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"items\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, function (arrayHelpers) {\n    var _values$items;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overflow-auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Table, {\n      className: \"whitespace-pre min-w-750\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_TableHead, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(_TableRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(_TableCell, {\n      colSpan: 7,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }\n    }, \"Item Details\"), /*#__PURE__*/React.createElement(_TableCell, {\n      colSpan: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }\n    }, \"Quantity \"), /*#__PURE__*/React.createElement(_TableCell, {\n      colSpan: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }\n    }, \"Rate\"), /*#__PURE__*/React.createElement(_TableCell, {\n      colSpan: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }, \"Discount\"), /*#__PURE__*/React.createElement(_TableCell, {\n      colSpan: 2,\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(_TableCell, {\n      colSpan: 1,\n      className: \"p-0\",\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(_TableBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, (_values$items = values.items) === null || _values$items === void 0 ? void 0 : _values$items.map(function (item, ind) {\n      return /*#__PURE__*/React.createElement(_TableRow, {\n        className: \"position-relative\",\n        key: ind,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(_TableCell, {\n        colSpan: 7,\n        className: \"p-0\",\n        align: \"left\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex items-center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"w-48\",\n        src: item === null || item === void 0 ? void 0 : item.imgUrl,\n        alt: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(Autocomplete, {\n        className: \"w-full\",\n        size: \"small\",\n        options: productList,\n        getOptionLabel: function getOptionLabel(option) {\n          return option.title;\n        },\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(_TextField, Object.assign({}, params, {\n            variant: \"outlined\",\n            fullWidth: true,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 53\n            }\n          }));\n        },\n        onChange: function onChange(event, newValue) {\n          handleChange({\n            target: {\n              name: \"items[\".concat(ind, \"]\"),\n              value: newValue\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(_TableCell, {\n        colSpan: 2,\n        className: \"p-0\",\n        align: \"left\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(_TextField, {\n        name: \"items[\".concat(ind, \"].quantity\"),\n        size: \"small\",\n        variant: \"outlined\",\n        type: \"number\",\n        fullWidth: true,\n        defaultValue: item.quantity || '',\n        onChange: handleChange,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(_TableCell, {\n        colSpan: 2,\n        className: \"p-0\",\n        align: \"left\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(_TextField, {\n        name: \"items[\".concat(ind, \"].price\"),\n        size: \"small\",\n        variant: \"outlined\",\n        type: \"number\",\n        fullWidth: true,\n        value: item.price || '',\n        onChange: handleChange,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(_TableCell, {\n        colSpan: 2,\n        className: \"p-0\",\n        align: \"left\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(_TextField, {\n        name: \"items[\".concat(ind, \"].discount\"),\n        size: \"small\",\n        variant: \"outlined\",\n        type: \"number\",\n        fullWidth: true,\n        value: item.discount || '',\n        onChange: handleChange,\n        InputProps: {\n          style: {\n            paddingRight: 0\n          },\n          endAdornment: /*#__PURE__*/React.createElement(_Select, {\n            name: \"items[\".concat(ind, \"].discountType\"),\n            margin: \"none\",\n            variant: \"standard\",\n            disableUnderline: true,\n            value: item.discountType || '%',\n            onChange: handleChange,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 53\n            }\n          }, /*#__PURE__*/React.createElement(_MenuItem, {\n            value: \"$\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 57\n            }\n          }, \"$\"), /*#__PURE__*/React.createElement(_MenuItem, {\n            value: \"%\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 57\n            }\n          }, \"%\"))\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(_TableCell, {\n        colSpan: 2,\n        className: \"p-0\",\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 37\n        }\n      }, calculateAmount(item).toFixed(2)), /*#__PURE__*/React.createElement(_TableCell, {\n        colSpan: 1,\n        className: \"p-0\",\n        align: \"center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(_IconButton, {\n        size: \"small\",\n        onClick: function onClick() {\n          return arrayHelpers.remove(ind);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(_Icon, {\n        color: \"error\",\n        fontSize: \"small\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 45\n        }\n      }, \"clear\"))));\n    }))), /*#__PURE__*/React.createElement(_Button, {\n      className: \"mt-4\",\n      color: \"primary\",\n      variant: \"contained\",\n      size: \"small\",\n      onClick: function onClick() {\n        return arrayHelpers.push({});\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, \"+ Add New Item\"));\n  });\n};\n\nexport default InvoiceItemTable;","map":{"version":3,"sources":["C:/Users/DiazP/Documents/SSmanagm/src/app/views/forms/invoice-form/InvoiceItemTable.jsx"],"names":["React","useState","useEffect","FieldArray","Autocomplete","getProductList","calculateAmount","InvoiceItemTable","values","handleChange","setFieldValue","isAlive","setIsAlive","productList","setProductList","then","data","arrayHelpers","items","map","item","ind","imgUrl","option","title","params","event","newValue","target","name","value","quantity","price","discount","style","paddingRight","endAdornment","discountType","toFixed","remove","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    TextField,\r\n    Button,\r\n    IconButton,\r\n    Icon,\r\n    Select,\r\n    MenuItem,\r\n} from '@material-ui/core'\r\nimport { FieldArray } from 'formik'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport { getProductList, calculateAmount } from './InvoiceFormService'\r\n\r\nconst InvoiceItemTable = ({ values, handleChange, setFieldValue }) => {\r\n    const [isAlive, setIsAlive] = useState(true)\r\n    const [productList, setProductList] = useState([])\r\n\r\n    useEffect(() => {\r\n        getProductList().then(({ data }) => {\r\n            if (isAlive) setProductList(data)\r\n        })\r\n\r\n        return () => setIsAlive(false)\r\n    }, [isAlive])\r\n\r\n    return (\r\n        <FieldArray name=\"items\">\r\n            {(arrayHelpers) => (\r\n                <div className=\"overflow-auto\">\r\n                    <Table className=\"whitespace-pre min-w-750\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell colSpan={7}>Item Details</TableCell>\r\n                                <TableCell colSpan={2}>Quantity </TableCell>\r\n                                <TableCell colSpan={2}>Rate</TableCell>\r\n                                <TableCell colSpan={2}>Discount</TableCell>\r\n                                <TableCell colSpan={2} align=\"center\">\r\n                                    Amount\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    colSpan={1}\r\n                                    className=\"p-0\"\r\n                                    align=\"center\"\r\n                                />\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {values.items?.map((item, ind) => (\r\n                                <TableRow\r\n                                    className=\"position-relative\"\r\n                                    key={ind}\r\n                                >\r\n                                    <TableCell\r\n                                        colSpan={7}\r\n                                        className=\"p-0\"\r\n                                        align=\"left\"\r\n                                    >\r\n                                        <div className=\"flex items-center\">\r\n                                            <img\r\n                                                className=\"w-48\"\r\n                                                src={item?.imgUrl}\r\n                                                alt=\"\"\r\n                                            />\r\n                                            <Autocomplete\r\n                                                className=\"w-full\"\r\n                                                size=\"small\"\r\n                                                options={productList}\r\n                                                getOptionLabel={(option) =>\r\n                                                    option.title\r\n                                                }\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                    />\r\n                                                )}\r\n                                                onChange={(event, newValue) => {\r\n                                                    handleChange({\r\n                                                        target: {\r\n                                                            name: `items[${ind}]`,\r\n                                                            value: newValue,\r\n                                                        },\r\n                                                    })\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell\r\n                                        colSpan={2}\r\n                                        className=\"p-0\"\r\n                                        align=\"left\"\r\n                                    >\r\n                                        <TextField\r\n                                            name={`items[${ind}].quantity`}\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            type=\"number\"\r\n                                            fullWidth\r\n                                            defaultValue={item.quantity || ''}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell\r\n                                        colSpan={2}\r\n                                        className=\"p-0\"\r\n                                        align=\"left\"\r\n                                    >\r\n                                        <TextField\r\n                                            name={`items[${ind}].price`}\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            type=\"number\"\r\n                                            fullWidth\r\n                                            value={item.price || ''}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell\r\n                                        colSpan={2}\r\n                                        className=\"p-0\"\r\n                                        align=\"left\"\r\n                                    >\r\n                                        <TextField\r\n                                            name={`items[${ind}].discount`}\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                            type=\"number\"\r\n                                            fullWidth\r\n                                            value={item.discount || ''}\r\n                                            onChange={handleChange}\r\n                                            InputProps={{\r\n                                                style: {\r\n                                                    paddingRight: 0,\r\n                                                },\r\n                                                endAdornment: (\r\n                                                    <Select\r\n                                                        name={`items[${ind}].discountType`}\r\n                                                        margin=\"none\"\r\n                                                        variant=\"standard\"\r\n                                                        disableUnderline\r\n                                                        value={\r\n                                                            item.discountType ||\r\n                                                            '%'\r\n                                                        }\r\n                                                        onChange={handleChange}\r\n                                                    >\r\n                                                        <MenuItem value=\"$\">\r\n                                                            $\r\n                                                        </MenuItem>\r\n                                                        <MenuItem value=\"%\">\r\n                                                            %\r\n                                                        </MenuItem>\r\n                                                    </Select>\r\n                                                ),\r\n                                            }}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell\r\n                                        colSpan={2}\r\n                                        className=\"p-0\"\r\n                                        align=\"center\"\r\n                                    >\r\n                                        {calculateAmount(item).toFixed(2)}\r\n                                    </TableCell>\r\n                                    <TableCell\r\n                                        colSpan={1}\r\n                                        className=\"p-0\"\r\n                                        align=\"center\"\r\n                                    >\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() =>\r\n                                                arrayHelpers.remove(ind)\r\n                                            }\r\n                                        >\r\n                                            <Icon\r\n                                                color=\"error\"\r\n                                                fontSize=\"small\"\r\n                                            >\r\n                                                clear\r\n                                            </Icon>\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                    <Button\r\n                        className=\"mt-4\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        onClick={() => arrayHelpers.push({})}\r\n                    >\r\n                        + Add New Item\r\n                    </Button>\r\n                </div>\r\n            )}\r\n        </FieldArray>\r\n    )\r\n}\r\n\r\nexport default InvoiceItemTable\r\n"]},"metadata":{},"sourceType":"module"}