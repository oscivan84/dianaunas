{"ast":null,"code":"import _Drawer from \"@material-ui/core/esm/Drawer\";\nimport _Button from \"@material-ui/core/esm/Button\";\nimport _IconButton from \"@material-ui/core/esm/IconButton\";\nimport _Badge from \"@material-ui/core/esm/Badge\";\nimport _Icon from \"@material-ui/core/esm/Icon\";\nvar _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\plantilla\\\\src\\\\app\\\\components\\\\ShoppingCart\\\\ShoppingCart.jsx\";\nimport React, { Fragment, useState } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCartList, deleteProductFromCart, updateCartAmount } from 'app/redux/actions/EcommerceActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useSettings from 'app/hooks/useSettings';\nimport useAuth from 'app/hooks/useAuth';\nconst useStyles = makeStyles(_ref => {\n  let {\n    palette,\n    ...theme\n  } = _ref;\n  return {\n    miniCart: {\n      width: 'var(--sidenav-width)',\n      '& .cart__topbar': {\n        height: 'var(--topbar-height)'\n      },\n      '& .mini-cart__item': {\n        transition: 'background 300ms ease',\n        '&:hover': {\n          background: 'rgba(0,0,0,0.01)'\n        }\n      }\n    }\n  };\n});\nlet cartListLoaded = false;\n\nfunction ShoppingCart(_ref2) {\n  let {\n    container\n  } = _ref2;\n  const [totalCost, setTotalCost] = useState(0);\n  const [panelOpen, setPanelOpen] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    user\n  } = useAuth();\n  const {\n    cartList\n  } = useSelector(state => state.ecommerce);\n  const {\n    settings\n  } = useSettings();\n\n  if (!cartListLoaded) {\n    dispatch(getCartList(user.id));\n    cartListLoaded = true;\n  }\n\n  const handleDrawerToggle = () => {\n    setPanelOpen(!panelOpen);\n  };\n\n  const handleCheckoutClick = () => {\n    if (totalCost > 0) {\n      history.push('/ecommerce/checkout');\n      setPanelOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    let total = 0;\n    cartList.forEach(product => {\n      total += product.price * product.amount;\n    });\n    setTotalCost(total);\n  }, [cartList]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_IconButton, {\n    onClick: handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Badge, {\n    color: \"secondary\",\n    badgeContent: cartList.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"shopping_cart\"))), /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: settings.themes[settings.activeTheme],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Drawer, {\n    container: container,\n    variant: \"temporary\",\n    anchor: 'right',\n    open: panelOpen,\n    onClose: handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx('flex-column h-full', classes.miniCart),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart__topbar elevation-z6 flex items-center p-1 mb-2 pl-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, \"shopping_cart\"), /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"ml-2 my-0 font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, \"Cart\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-grow overflow-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, cartList.map(product => /*#__PURE__*/React.createElement(\"div\", {\n    key: product.id,\n    className: \"mini-cart__item flex items-center py-2 px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-column mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(_IconButton, {\n    size: \"small\",\n    onClick: () => dispatch(updateCartAmount(user.id, product.id, product.amount + 1)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    className: \"cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 45\n    }\n  }, \"keyboard_arrow_up\")), /*#__PURE__*/React.createElement(_IconButton, {\n    disabled: !(product.amount - 1),\n    size: \"small\",\n    onClick: () => dispatch(updateCartAmount(user.id, product.id, product.amount - 1)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    className: \"cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 45\n    }\n  }, \"keyboard_arrow_down\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"w-48\",\n    src: product.imgUrl,\n    alt: product.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mr-2 text-center flex-grow flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0 mb-1 ellipsis w-120\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 41\n    }\n  }, product.title), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 41\n    }\n  }, \"$\", product.price, \" x \", product.amount)), /*#__PURE__*/React.createElement(_IconButton, {\n    size: \"small\",\n    onClick: () => dispatch(deleteProductFromCart(user.userId, product.id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 41\n    }\n  }, \"clear\"))))), /*#__PURE__*/React.createElement(_Button, {\n    className: \"w-full border-radius-0\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleCheckoutClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, \"Checkout ($\", totalCost.toFixed(2), \")\")))));\n}\n\nexport default ShoppingCart;","map":{"version":3,"sources":["C:/Users/DiazP/Documents/plantilla/src/app/components/ShoppingCart/ShoppingCart.jsx"],"names":["React","Fragment","useState","ThemeProvider","useDispatch","useSelector","getCartList","deleteProductFromCart","updateCartAmount","makeStyles","clsx","useEffect","useHistory","useSettings","useAuth","useStyles","palette","theme","miniCart","width","height","transition","background","cartListLoaded","ShoppingCart","container","totalCost","setTotalCost","panelOpen","setPanelOpen","classes","dispatch","history","user","cartList","state","ecommerce","settings","id","handleDrawerToggle","handleCheckoutClick","push","total","forEach","product","price","amount","length","themes","activeTheme","keepMounted","map","imgUrl","title","userId","toFixed"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport { Icon, Badge, IconButton, Drawer, Button } from '@material-ui/core'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    getCartList,\r\n    deleteProductFromCart,\r\n    updateCartAmount,\r\n} from 'app/redux/actions/EcommerceActions'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport useSettings from 'app/hooks/useSettings'\r\nimport useAuth from 'app/hooks/useAuth'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    miniCart: {\r\n        width: 'var(--sidenav-width)',\r\n        '& .cart__topbar': {\r\n            height: 'var(--topbar-height)',\r\n        },\r\n        '& .mini-cart__item': {\r\n            transition: 'background 300ms ease',\r\n            '&:hover': {\r\n                background: 'rgba(0,0,0,0.01)',\r\n            },\r\n        },\r\n    },\r\n}))\r\n\r\nlet cartListLoaded = false\r\n\r\nfunction ShoppingCart({ container }) {\r\n    const [totalCost, setTotalCost] = useState(0)\r\n    const [panelOpen, setPanelOpen] = useState(false)\r\n\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const { user } = useAuth()\r\n    const { cartList } = useSelector((state) => state.ecommerce)\r\n    const { settings } = useSettings()\r\n\r\n    if (!cartListLoaded) {\r\n        dispatch(getCartList(user.id))\r\n        cartListLoaded = true\r\n    }\r\n\r\n    const handleDrawerToggle = () => {\r\n        setPanelOpen(!panelOpen)\r\n    }\r\n\r\n    const handleCheckoutClick = () => {\r\n        if (totalCost > 0) {\r\n            history.push('/ecommerce/checkout')\r\n            setPanelOpen(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let total = 0\r\n\r\n        cartList.forEach((product) => {\r\n            total += product.price * product.amount\r\n        })\r\n\r\n        setTotalCost(total)\r\n    }, [cartList])\r\n\r\n    return (\r\n        <Fragment>\r\n            <IconButton onClick={handleDrawerToggle}>\r\n                <Badge color=\"secondary\" badgeContent={cartList.length}>\r\n                    <Icon>shopping_cart</Icon>\r\n                </Badge>\r\n            </IconButton>\r\n\r\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n                <Drawer\r\n                    container={container}\r\n                    variant=\"temporary\"\r\n                    anchor={'right'}\r\n                    open={panelOpen}\r\n                    onClose={handleDrawerToggle}\r\n                    ModalProps={{\r\n                        keepMounted: true,\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={clsx('flex-column h-full', classes.miniCart)}\r\n                    >\r\n                        <div className=\"cart__topbar elevation-z6 flex items-center p-1 mb-2 pl-4\">\r\n                            <Icon color=\"primary\">shopping_cart</Icon>\r\n                            <h5 className=\"ml-2 my-0 font-medium\">Cart</h5>\r\n                        </div>\r\n\r\n                        <div className=\"flex-grow overflow-auto\">\r\n                            {cartList.map((product) => (\r\n                                <div\r\n                                    key={product.id}\r\n                                    className=\"mini-cart__item flex items-center py-2 px-2\"\r\n                                >\r\n                                    <div className=\"flex flex-column mr-1\">\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() =>\r\n                                                dispatch(\r\n                                                    updateCartAmount(\r\n                                                        user.id,\r\n                                                        product.id,\r\n                                                        product.amount + 1\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <Icon className=\"cursor-pointer\">\r\n                                                keyboard_arrow_up\r\n                                            </Icon>\r\n                                        </IconButton>\r\n                                        <IconButton\r\n                                            disabled={!(product.amount - 1)}\r\n                                            size=\"small\"\r\n                                            onClick={() =>\r\n                                                dispatch(\r\n                                                    updateCartAmount(\r\n                                                        user.id,\r\n                                                        product.id,\r\n                                                        product.amount - 1\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <Icon className=\"cursor-pointer\">\r\n                                                keyboard_arrow_down\r\n                                            </Icon>\r\n                                        </IconButton>\r\n                                    </div>\r\n                                    <div className=\"mr-2\">\r\n                                        <img\r\n                                            className=\"w-48\"\r\n                                            src={product.imgUrl}\r\n                                            alt={product.title}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"mr-2 text-center flex-grow flex-column\">\r\n                                        <h6 className=\"m-0 mb-1 ellipsis w-120\">\r\n                                            {product.title}\r\n                                        </h6>\r\n                                        <small className=\"text-muted\">\r\n                                            ${product.price} x {product.amount}\r\n                                        </small>\r\n                                    </div>\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() =>\r\n                                            dispatch(\r\n                                                deleteProductFromCart(\r\n                                                    user.userId,\r\n                                                    product.id\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <Icon fontSize=\"small\">clear</Icon>\r\n                                    </IconButton>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <Button\r\n                            className=\"w-full border-radius-0\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleCheckoutClick}\r\n                        >\r\n                            Checkout (${totalCost.toFixed(2)})\r\n                        </Button>\r\n                    </div>\r\n                </Drawer>\r\n            </ThemeProvider>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ShoppingCart\r\n"]},"metadata":{},"sourceType":"module"}