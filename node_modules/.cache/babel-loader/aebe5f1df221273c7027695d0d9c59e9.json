{"ast":null,"code":"import _Table from \"@material-ui/core/esm/Table\";\nimport _TableBody from \"@material-ui/core/esm/TableBody\";\nimport _toConsumableArray from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _TableHead from \"@material-ui/core/esm/TableHead\";\nimport _TableRow from \"@material-ui/core/esm/TableRow\";\nimport _TableCell from \"@material-ui/core/esm/TableCell\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\src\\\\app\\\\views\\\\utilities\\\\Typography.jsx\";\n\nimport React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Highlight from 'react-highlight';\n\nvar Typography = function Typography() {\n  var list = [{\n    className: '.font-light',\n    description: 'font-weight: 300'\n  }, {\n    className: '.font-normal',\n    description: 'font-weight: normal'\n  }, {\n    className: '.font-medium',\n    description: 'font-weight: 500'\n  }, {\n    className: '.font-semibold',\n    description: 'font-weight: 600'\n  }, {\n    className: '.font-bold',\n    description: 'font-weight: 700'\n  }, {\n    className: '.capitalize',\n    description: 'Capitalize String'\n  }, {\n    className: '.uppercase',\n    description: 'UPPERCASE STRING'\n  }, {\n    className: '.lowercase',\n    description: 'lowercase string'\n  }, {\n    className: '.whitespace-pre',\n    description: 'white-space: pre'\n  }, {\n    className: '.whitespace-pre-wrap',\n    description: 'white-space: pre-wrap'\n  }, {\n    className: '.whitespace-no-wrap',\n    description: 'white-space: nowrap'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-sm-30\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-sm-30\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    routeSegments: [{\n      name: 'Utilities',\n      path: '/utilities'\n    }, {\n      name: 'Typography'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(SimpleCard, {\n    title: \"typography\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Table, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_TableRow, {\n    className: \"bg-default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_TableCell, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"Class Name\"), /*#__PURE__*/React.createElement(_TableCell, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"Size\"), /*#__PURE__*/React.createElement(_TableCell, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, \"Example\"))), /*#__PURE__*/React.createElement(_TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, _toConsumableArray(Array(7).keys()).slice(1).reverse().map(function (item, index) {\n    return /*#__PURE__*/React.createElement(_TableRow, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_TableCell, {\n      className: \"px-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    }, \"h\", item), /*#__PURE__*/React.createElement(_TableCell, {\n      className: \"px-0 capitalize\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(_TableCell, {\n      className: \"px-0 capitalize\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }\n    }, ReactHtmlParser(\"<h\".concat(item, \">h\").concat(item, \"</h\").concat(item, \">\"))));\n  }), /*#__PURE__*/React.createElement(_TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_TableCell, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, \"text-small\"), /*#__PURE__*/React.createElement(_TableCell, {\n    className: \"px-0 capitalize\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, \"0.8125rem\"), /*#__PURE__*/React.createElement(_TableCell, {\n    className: \"px-0 capitalize\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }, \"text-small\"))), [13, 14, 16, 18, 20, 22, 24, 30, 32].map(function (item, index) {\n    return /*#__PURE__*/React.createElement(_TableRow, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_TableCell, {\n      className: \"px-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }, \"text-\", item), /*#__PURE__*/React.createElement(_TableCell, {\n      className: \"px-0 capitalize\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    }, item, \"px\"), /*#__PURE__*/React.createElement(_TableCell, {\n      className: \"px-0 capitalize\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, ReactHtmlParser(\"<span class=\\\"text-\".concat(item, \"\\\">text-\").concat(item, \"</span>\"))));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }), list.map(function (item, ind) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: ind,\n      className: \"flex items-center flex-wrap justify-between\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, item.className), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"highlight-js\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Highlight, {\n      className: \"html\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, \"<div className=\\\"\".concat(item.className.replace('.', ''), \"\\\">\").concat(item.description, \"</div>\"))));\n  })));\n};\n\nexport default Typography;","map":{"version":3,"sources":["C:/Users/DiazP/Documents/SSmanagm/src/app/views/utilities/Typography.jsx"],"names":["React","ReactHtmlParser","Breadcrumb","SimpleCard","Highlight","Typography","list","className","description","name","path","Array","keys","slice","reverse","map","item","index","ind","replace"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport {\r\n    Table,\r\n    TableHead,\r\n    TableCell,\r\n    TableBody,\r\n    TableRow,\r\n} from '@material-ui/core'\r\nimport { Breadcrumb, SimpleCard } from 'app/components'\r\nimport Highlight from 'react-highlight'\r\n\r\nconst Typography = () => {\r\n    let list = [\r\n        {\r\n            className: '.font-light',\r\n            description: 'font-weight: 300',\r\n        },\r\n        {\r\n            className: '.font-normal',\r\n            description: 'font-weight: normal',\r\n        },\r\n        {\r\n            className: '.font-medium',\r\n            description: 'font-weight: 500',\r\n        },\r\n        {\r\n            className: '.font-semibold',\r\n            description: 'font-weight: 600',\r\n        },\r\n        {\r\n            className: '.font-bold',\r\n            description: 'font-weight: 700',\r\n        },\r\n        {\r\n            className: '.capitalize',\r\n            description: 'Capitalize String',\r\n        },\r\n        {\r\n            className: '.uppercase',\r\n            description: 'UPPERCASE STRING',\r\n        },\r\n        {\r\n            className: '.lowercase',\r\n            description: 'lowercase string',\r\n        },\r\n        {\r\n            className: '.whitespace-pre',\r\n            description: 'white-space: pre',\r\n        },\r\n        {\r\n            className: '.whitespace-pre-wrap',\r\n            description: 'white-space: pre-wrap',\r\n        },\r\n        {\r\n            className: '.whitespace-no-wrap',\r\n            description: 'white-space: nowrap',\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div className=\"m-sm-30\">\r\n            <div className=\"mb-sm-30\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Utilities', path: '/utilities' },\r\n                        { name: 'Typography' },\r\n                    ]}\r\n                />\r\n            </div>\r\n\r\n            <SimpleCard title=\"typography\">\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow className=\"bg-default\">\r\n                            <TableCell className=\"px-0\">Class Name</TableCell>\r\n                            <TableCell className=\"px-0\">Size</TableCell>\r\n                            <TableCell className=\"px-0\">Example</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {[...Array(7).keys()]\r\n                            .slice(1)\r\n                            .reverse()\r\n                            .map((item, index) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell className=\"px-0\">\r\n                                        h{item}\r\n                                    </TableCell>\r\n                                    <TableCell className=\"px-0 capitalize\"></TableCell>\r\n                                    <TableCell className=\"px-0 capitalize\">\r\n                                        {ReactHtmlParser(\r\n                                            `<h${item}>h${item}</h${item}>`\r\n                                        )}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        <TableRow>\r\n                            <TableCell className=\"px-0\">text-small</TableCell>\r\n                            <TableCell className=\"px-0 capitalize\">\r\n                                0.8125rem\r\n                            </TableCell>\r\n                            <TableCell className=\"px-0 capitalize\">\r\n                                <span className=\"text-small\">text-small</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n\r\n                        {[13, 14, 16, 18, 20, 22, 24, 30, 32].map(\r\n                            (item, index) => (\r\n                                <TableRow key={index}>\r\n                                    <TableCell className=\"px-0\">\r\n                                        text-{item}\r\n                                    </TableCell>\r\n                                    <TableCell className=\"px-0 capitalize\">\r\n                                        {item}px\r\n                                    </TableCell>\r\n                                    <TableCell className=\"px-0 capitalize\">\r\n                                        {ReactHtmlParser(\r\n                                            `<span class=\"text-${item}\">text-${item}</span>`\r\n                                        )}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n\r\n                <div className=\"py-2\"></div>\r\n                {list.map((item, ind) => (\r\n                    <div\r\n                        key={ind}\r\n                        className=\"flex items-center flex-wrap justify-between\"\r\n                    >\r\n                        <code>{item.className}</code>\r\n                        <div className=\"highlight-js\">\r\n                            <Highlight className=\"html\">{`<div className=\"${item.className.replace(\r\n                                '.',\r\n                                ''\r\n                            )}\">${item.description}</div>`}</Highlight>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </SimpleCard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Typography\r\n"]},"metadata":{},"sourceType":"module"}