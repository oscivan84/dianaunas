{"ast":null,"code":"import _Card from \"@material-ui/core/esm/Card\";\nvar _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\plantilla\\\\src\\\\app\\\\views\\\\map\\\\MarkerMap.jsx\";\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { compose, withProps } from 'recompose';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { InfoBox } from 'react-google-maps/lib/components/addons/InfoBox';\nconst MyMapComponent = compose(withProps({\n  googleMapURL: 'https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places',\n  loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }),\n  containerElement: /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 27\n    }\n  }),\n  mapElement: /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  })\n}), withScriptjs, withGoogleMap)(props => /*#__PURE__*/React.createElement(GoogleMap, {\n  defaultZoom: 8,\n  defaultCenter: {\n    lat: -34.397,\n    lng: 150.644\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Marker, {\n  isMarkerShown: false,\n  position: {\n    lat: -34.397,\n    lng: 150.644\n  },\n  onClick: props.onMarkerClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(InfoBox, {\n  options: {\n    closeBoxURL: \"\",\n    enableEventPropagation: true\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(_Card, {\n  className: \"p-4\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: \"whitespace-pre m-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }\n}, \"Hello World !!!\"))))));\n\nconst MarkerMap = () => {\n  const timer = useRef(null);\n  const [isMarkerShown, setIsMarkerShown] = useState(false);\n  const delayedShowMarker = useCallback(() => {\n    timer.current = setTimeout(() => {\n      setIsMarkerShown(true);\n    }, 3000);\n  }, []);\n\n  const handleMarkerClick = () => {\n    setIsMarkerShown(false);\n    delayedShowMarker();\n  };\n\n  useEffect(() => {\n    delayedShowMarker();\n    return () => {\n      if (timer.current) clearTimeout(timer.current);\n    };\n  }, [delayedShowMarker]);\n  return /*#__PURE__*/React.createElement(MyMapComponent, {\n    isMarkerShown: isMarkerShown,\n    onMarkerClick: handleMarkerClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default MarkerMap;","map":{"version":3,"sources":["C:/Users/DiazP/Documents/plantilla/src/app/views/map/MarkerMap.jsx"],"names":["React","useState","useEffect","useCallback","useRef","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoBox","MyMapComponent","googleMapURL","loadingElement","containerElement","mapElement","props","lat","lng","onMarkerClick","closeBoxURL","enableEventPropagation","MarkerMap","timer","isMarkerShown","setIsMarkerShown","delayedShowMarker","current","setTimeout","handleMarkerClick","clearTimeout"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,MAAlD,QAAgE,OAAhE;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SACIC,YADJ,EAEIC,aAFJ,EAGIC,SAHJ,EAIIC,MAJJ,QAKO,mBALP;AAOA,SAASC,OAAT,QAAwB,iDAAxB;AAGA,MAAMC,cAAc,GAAGP,OAAO,CAC1BC,SAAS,CAAC;AACNO,EAAAA,YAAY,EACR,mFAFE;AAGNC,EAAAA,cAAc,eAAE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHV;AAINC,EAAAA,gBAAgB,eAAE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJZ;AAKNC,EAAAA,UAAU,eAAE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALN,CAAD,CADiB,EAQ1BT,YAR0B,EAS1BC,aAT0B,CAAP,CAUpBS,KAAD,iBACE,oBAAC,SAAD;AAAW,EAAA,WAAW,EAAE,CAAxB;AAA2B,EAAA,aAAa,EAAE;AAAEC,IAAAA,GAAG,EAAE,CAAC,MAAR;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,MAAD;AACI,EAAA,aAAa,EAAE,KADnB;AAEI,EAAA,QAAQ,EAAE;AAAED,IAAAA,GAAG,EAAE,CAAC,MAAR;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAFd;AAGI,EAAA,OAAO,EAAEF,KAAK,CAACG,aAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKI,oBAAC,OAAD;AACI,EAAA,OAAO,EAAE;AAAEC,IAAAA,WAAW,IAAb;AAAmBC,IAAAA,sBAAsB,EAAE;AAA3C,GADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAGI;AAAM,EAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAG,EAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAHJ,CALJ,CADJ,CAXmB,CAAvB;;AA4BA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,KAAK,GAAGpB,MAAM,CAAC,IAAD,CAApB;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAM0B,iBAAiB,GAAGxB,WAAW,CAAC,MAAM;AACxCqB,IAAAA,KAAK,CAACI,OAAN,GAAgBC,UAAU,CAAC,MAAM;AAC7BH,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,KAFyB,EAEvB,IAFuB,CAA1B;AAGH,GAJoC,EAIlC,EAJkC,CAArC;;AAMA,QAAMI,iBAAiB,GAAG,MAAM;AAC5BJ,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAC,IAAAA,iBAAiB;AACpB,GAHD;;AAKAzB,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,iBAAiB;AACjB,WAAO,MAAM;AACT,UAAIH,KAAK,CAACI,OAAV,EAAmBG,YAAY,CAACP,KAAK,CAACI,OAAP,CAAZ;AACtB,KAFD;AAGH,GALQ,EAKN,CAACD,iBAAD,CALM,CAAT;AAOA,sBACI,oBAAC,cAAD;AACI,IAAA,aAAa,EAAEF,aADnB;AAEI,IAAA,aAAa,EAAEK,iBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAMH,CA5BD;;AA8BA,eAAeP,SAAf","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react'\r\nimport { compose, withProps } from 'recompose'\r\nimport {\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    GoogleMap,\r\n    Marker,\r\n} from 'react-google-maps'\r\n\r\nimport { InfoBox } from 'react-google-maps/lib/components/addons/InfoBox'\r\nimport { Card } from '@material-ui/core'\r\n\r\nconst MyMapComponent = compose(\r\n    withProps({\r\n        googleMapURL:\r\n            'https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places',\r\n        loadingElement: <div className=\"h-full\" />,\r\n        containerElement: <div className=\"h-400\" />,\r\n        mapElement: <div className=\"h-full\" />,\r\n    }),\r\n    withScriptjs,\r\n    withGoogleMap\r\n)((props) => (\r\n    <GoogleMap defaultZoom={8} defaultCenter={{ lat: -34.397, lng: 150.644 }}>\r\n        <Marker\r\n            isMarkerShown={false}\r\n            position={{ lat: -34.397, lng: 150.644 }}\r\n            onClick={props.onMarkerClick}\r\n        >\r\n            <InfoBox\r\n                options={{ closeBoxURL: ``, enableEventPropagation: true }}\r\n            >\r\n                <Card className=\"p-4\">\r\n                    <p className=\"whitespace-pre m-0\">Hello World !!!</p>\r\n                </Card>\r\n            </InfoBox>\r\n        </Marker>\r\n    </GoogleMap>\r\n))\r\n\r\nconst MarkerMap = () => {\r\n    const timer = useRef(null)\r\n    const [isMarkerShown, setIsMarkerShown] = useState(false)\r\n\r\n    const delayedShowMarker = useCallback(() => {\r\n        timer.current = setTimeout(() => {\r\n            setIsMarkerShown(true)\r\n        }, 3000)\r\n    }, [])\r\n\r\n    const handleMarkerClick = () => {\r\n        setIsMarkerShown(false)\r\n        delayedShowMarker()\r\n    }\r\n\r\n    useEffect(() => {\r\n        delayedShowMarker()\r\n        return () => {\r\n            if (timer.current) clearTimeout(timer.current)\r\n        }\r\n    }, [delayedShowMarker])\r\n\r\n    return (\r\n        <MyMapComponent\r\n            isMarkerShown={isMarkerShown}\r\n            onMarkerClick={handleMarkerClick}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MarkerMap\r\n"]},"metadata":{},"sourceType":"module"}