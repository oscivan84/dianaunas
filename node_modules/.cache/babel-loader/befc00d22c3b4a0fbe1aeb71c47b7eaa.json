{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\plantilla\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\plantilla\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\plantilla\\\\src\\\\app\\\\views\\\\Drag&Drop\\\\TwoListDnD.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useTheme } from '@material-ui/core/styles'; // fake data generator\n\nvar getItems = function getItems(count) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return Array.from({\n    length: count\n  }, function (v, k) {\n    return k;\n  }).map(function (k) {\n    return {\n      id: \"item-\".concat(k + offset),\n      content: \"item \".concat(k + offset)\n    };\n  });\n}; // a little function to help us with reordering the result\n\n\nvar reorder = function reorder(list, startIndex, endIndex) {\n  var result = Array.from(list);\n\n  var _result$splice = result.splice(startIndex, 1),\n      _result$splice2 = _slicedToArray(_result$splice, 1),\n      removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n/**\r\n * Moves an item from one list to another list.\r\n */\n\n\nvar move = function move(source, destination, droppableSource, droppableDestination) {\n  var sourceClone = Array.from(source);\n  var destClone = Array.from(destination);\n\n  var _sourceClone$splice = sourceClone.splice(droppableSource.index, 1),\n      _sourceClone$splice2 = _slicedToArray(_sourceClone$splice, 1),\n      removed = _sourceClone$splice2[0];\n\n  destClone.splice(droppableDestination.index, 0, removed);\n  var result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nvar grid = 8;\n\nvar getItemStyle = function getItemStyle(isDragging, draggableStyle, theme) {\n  return _objectSpread({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: \"0 0 \".concat(grid, \"px 0\"),\n    boxShadow: theme.shadows[4],\n    borderRadius: '4px',\n    // change background colour if dragging\n    background: isDragging ? 'rgba(var(--primary),1)' : 'rgba(var(--bg-paper),1)'\n  }, draggableStyle);\n};\n\nvar getListStyle = function getListStyle(isDraggingOver) {\n  return {\n    borderRadius: '4px',\n    background: isDraggingOver ? 'rgba(0,0,0, .1)' : 'rgba(var(--bg-default),1)',\n    padding: grid,\n    width: 250\n  };\n};\n\nvar TwoListDnD = function TwoListDnD() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var theme = useTheme();\n  useEffect(function () {\n    setItems(getItems(10));\n    setSelected(getItems(5, 10));\n  }, []);\n\n  var getList = function getList(id) {\n    return id === 'droppable' ? items : selected;\n  };\n\n  var onDragEnd = function onDragEnd(result) {\n    var source = result.source,\n        destination = result.destination; // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      var _items = reorder(getList(source.droppableId), source.index, destination.index);\n\n      if (source.droppableId === 'droppable2') {\n        setSelected(_items);\n      } else setItems(_items);\n    } else {\n      var _result = move(getList(source.droppableId), getList(destination.droppableId), source, destination);\n\n      setItems(_result.droppable);\n      setSelected(_result.droppable2);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-around\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"droppable\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, function (provided, snapshot) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, items.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(Draggable, {\n        key: item.id,\n        draggableId: item.id,\n        index: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          style: getItemStyle(snapshot.isDragging, provided.draggableProps.style, theme),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 41\n          }\n        }), item.content);\n      });\n    }), provided.placeholder);\n  }), /*#__PURE__*/React.createElement(Droppable, {\n    droppableId: \"droppable2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, function (provided, snapshot) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, selected.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(Draggable, {\n        key: item.id,\n        draggableId: item.id,\n        index: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 33\n        }\n      }, function (provided, snapshot) {\n        return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          style: getItemStyle(snapshot.isDragging, provided.draggableProps.style, theme),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 41\n          }\n        }), item.content);\n      });\n    }), provided.placeholder);\n  })));\n};\n\nexport default TwoListDnD;","map":{"version":3,"sources":["C:/Users/DiazP/Documents/plantilla/src/app/views/Drag&Drop/TwoListDnD.jsx"],"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","useTheme","getItems","count","offset","Array","from","length","v","k","map","id","content","reorder","list","startIndex","endIndex","result","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","grid","getItemStyle","isDragging","draggableStyle","theme","userSelect","padding","margin","boxShadow","shadows","borderRadius","background","getListStyle","isDraggingOver","width","TwoListDnD","items","setItems","selected","setSelected","getList","onDragEnd","droppable","droppable2","provided","snapshot","innerRef","item","draggableProps","dragHandleProps","style","placeholder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport { useTheme } from '@material-ui/core/styles'\r\n\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n    Array.from({ length: count }, (v, k) => k).map((k) => ({\r\n        id: `item-${k + offset}`,\r\n        content: `item ${k + offset}`,\r\n    }))\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list)\r\n    const [removed] = result.splice(startIndex, 1)\r\n    result.splice(endIndex, 0, removed)\r\n\r\n    return result\r\n}\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source)\r\n    const destClone = Array.from(destination)\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1)\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed)\r\n\r\n    const result = {}\r\n    result[droppableSource.droppableId] = sourceClone\r\n    result[droppableDestination.droppableId] = destClone\r\n\r\n    return result\r\n}\r\n\r\nconst grid = 8\r\n\r\nconst getItemStyle = (isDragging, draggableStyle, theme) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: 'none',\r\n    padding: grid * 2,\r\n    margin: `0 0 ${grid}px 0`,\r\n    boxShadow: theme.shadows[4],\r\n    borderRadius: '4px',\r\n    // change background colour if dragging\r\n    background: isDragging\r\n        ? 'rgba(var(--primary),1)'\r\n        : 'rgba(var(--bg-paper),1)',\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n})\r\n\r\nconst getListStyle = (isDraggingOver) => ({\r\n    borderRadius: '4px',\r\n    background: isDraggingOver\r\n        ? 'rgba(0,0,0, .1)'\r\n        : 'rgba(var(--bg-default),1)',\r\n    padding: grid,\r\n    width: 250,\r\n})\r\n\r\nconst TwoListDnD = () => {\r\n    const [items, setItems] = useState([])\r\n    const [selected, setSelected] = useState([])\r\n    const theme = useTheme()\r\n\r\n    useEffect(() => {\r\n        setItems(getItems(10))\r\n        setSelected(getItems(5, 10))\r\n    }, [])\r\n\r\n    const getList = (id) => (id === 'droppable' ? items : selected)\r\n\r\n    const onDragEnd = (result) => {\r\n        const { source, destination } = result\r\n\r\n        // dropped outside the list\r\n        if (!destination) {\r\n            return\r\n        }\r\n\r\n        if (source.droppableId === destination.droppableId) {\r\n            const items = reorder(\r\n                getList(source.droppableId),\r\n                source.index,\r\n                destination.index\r\n            )\r\n\r\n            if (source.droppableId === 'droppable2') {\r\n                setSelected(items)\r\n            } else setItems(items)\r\n        } else {\r\n            const result = move(\r\n                getList(source.droppableId),\r\n                getList(destination.droppableId),\r\n                source,\r\n                destination\r\n            )\r\n\r\n            setItems(result.droppable)\r\n            setSelected(result.droppable2)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <div className=\"flex justify-around\">\r\n                <Droppable droppableId=\"droppable\">\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            style={getListStyle(snapshot.isDraggingOver)}\r\n                        >\r\n                            {items.map((item, index) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}\r\n                                >\r\n                                    {(provided, snapshot) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            style={getItemStyle(\r\n                                                snapshot.isDragging,\r\n                                                provided.draggableProps.style,\r\n                                                theme\r\n                                            )}\r\n                                        >\r\n                                            {item.content}\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n                <Droppable droppableId=\"droppable2\">\r\n                    {(provided, snapshot) => (\r\n                        <div\r\n                            ref={provided.innerRef}\r\n                            style={getListStyle(snapshot.isDraggingOver)}\r\n                        >\r\n                            {selected.map((item, index) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}\r\n                                >\r\n                                    {(provided, snapshot) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                            style={getItemStyle(\r\n                                                snapshot.isDragging,\r\n                                                provided.draggableProps.style,\r\n                                                theme\r\n                                            )}\r\n                                        >\r\n                                            {item.content}\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </div>\r\n        </DragDropContext>\r\n    )\r\n}\r\n\r\nexport default TwoListDnD\r\n"]},"metadata":{},"sourceType":"module"}