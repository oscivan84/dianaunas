{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\src\\\\app\\\\views\\\\material-kit\\\\checkbox\\\\LabelledCheckbox.jsx\";\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nvar GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(function (props) {\n  return /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n    color: \"default\"\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }));\n});\nexport default function LabelledCheckbox() {\n  var _React$useState = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, name, event.target.checked)));\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: state.checkedA,\n      onChange: handleChange('checkedA'),\n      value: \"checkedA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }),\n    label: \"Secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: state.checkedB,\n      onChange: handleChange('checkedB'),\n      value: \"checkedB\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }),\n    label: \"Primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"checkedC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 26\n      }\n    }),\n    label: \"Uncontrolled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    disabled: true,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"checkedD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 26\n      }\n    }),\n    label: \"Disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    disabled: true,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: true,\n      value: \"checkedE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 26\n      }\n    }),\n    label: \"Disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: state.checkedF,\n      onChange: handleChange('checkedF'),\n      value: \"checkedF\",\n      indeterminate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }),\n    label: \"Indeterminate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n      checked: state.checkedG,\n      onChange: handleChange('checkedG'),\n      value: \"checkedG\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }),\n    label: \"Custom color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      icon: /*#__PURE__*/React.createElement(FavoriteBorder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 31\n        }\n      }),\n      checkedIcon: /*#__PURE__*/React.createElement(Favorite, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 38\n        }\n      }),\n      value: \"checkedH\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }),\n    label: \"Custom icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      icon: /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 31\n        }\n      }),\n      checkedIcon: /*#__PURE__*/React.createElement(CheckBoxIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 38\n        }\n      }),\n      value: \"checkedI\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }),\n    label: \"Custom size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/DiazP/Documents/SSmanagm/src/app/views/material-kit/checkbox/LabelledCheckbox.jsx"],"names":["React","withStyles","green","FormGroup","FormControlLabel","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","Favorite","FavoriteBorder","GreenCheckbox","root","color","checked","props","LabelledCheckbox","useState","checkedA","checkedB","checkedF","checkedG","state","setState","handleChange","name","event","target"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { green } from '@material-ui/core/colors'\r\nimport FormGroup from '@material-ui/core/FormGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank'\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox'\r\nimport Favorite from '@material-ui/icons/Favorite'\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder'\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n        color: green[400],\r\n        '&$checked': {\r\n            color: green[600],\r\n        },\r\n    },\r\n    checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />)\r\n\r\nexport default function LabelledCheckbox() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedF: true,\r\n        checkedG: true,\r\n    })\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setState({ ...state, [name]: event.target.checked })\r\n    }\r\n\r\n    return (\r\n        <FormGroup row>\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={state.checkedA}\r\n                        onChange={handleChange('checkedA')}\r\n                        value=\"checkedA\"\r\n                    />\r\n                }\r\n                label=\"Secondary\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={state.checkedB}\r\n                        onChange={handleChange('checkedB')}\r\n                        value=\"checkedB\"\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n                label=\"Primary\"\r\n            />\r\n            <FormControlLabel\r\n                control={<Checkbox value=\"checkedC\" />}\r\n                label=\"Uncontrolled\"\r\n            />\r\n            <FormControlLabel\r\n                disabled\r\n                control={<Checkbox value=\"checkedD\" />}\r\n                label=\"Disabled\"\r\n            />\r\n            <FormControlLabel\r\n                disabled\r\n                control={<Checkbox checked value=\"checkedE\" />}\r\n                label=\"Disabled\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        checked={state.checkedF}\r\n                        onChange={handleChange('checkedF')}\r\n                        value=\"checkedF\"\r\n                        indeterminate\r\n                    />\r\n                }\r\n                label=\"Indeterminate\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <GreenCheckbox\r\n                        checked={state.checkedG}\r\n                        onChange={handleChange('checkedG')}\r\n                        value=\"checkedG\"\r\n                    />\r\n                }\r\n                label=\"Custom color\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        icon={<FavoriteBorder />}\r\n                        checkedIcon={<Favorite />}\r\n                        value=\"checkedH\"\r\n                    />\r\n                }\r\n                label=\"Custom icon\"\r\n            />\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox\r\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                        checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                        value=\"checkedI\"\r\n                    />\r\n                }\r\n                label=\"Custom size\"\r\n            />\r\n        </FormGroup>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}