{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\plantilla\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\plantilla\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\plantilla\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\plantilla\\\\src\\\\app\\\\components\\\\Sidenav\\\\Sidenav.jsx\";\n\nvar _excluded = [\"palette\"];\nimport React, { Fragment } from 'react';\nimport Scrollbar from 'react-perfect-scrollbar';\nimport { navigations } from 'app/navigations';\nimport { MatxVerticalNav } from 'app/components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport useSettings from 'app/hooks/useSettings';\nvar useStyles = makeStyles(function (_ref) {\n  var palette = _ref.palette,\n      theme = _objectWithoutProperties(_ref, _excluded);\n\n  return {\n    scrollable: {\n      paddingLeft: 20,\n      paddingRight: 20\n    },\n    sidenavMobileOverlay: _defineProperty({\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      width: '100vw',\n      background: 'rgba(0, 0, 0, 0.54)',\n      zIndex: -1\n    }, theme.breakpoints.up('lg'), {\n      display: 'none'\n    })\n  };\n});\n\nvar Sidenav = function Sidenav(_ref2) {\n  var children = _ref2.children;\n  var classes = useStyles();\n\n  var _useSettings = useSettings(),\n      settings = _useSettings.settings,\n      updateSettings = _useSettings.updateSettings;\n\n  var updateSidebarMode = function updateSidebarMode(sidebarSettings) {\n    var activeLayoutSettingsName = settings.activeLayout + 'Settings';\n    var activeLayoutSettings = settings[activeLayoutSettingsName];\n    updateSettings(_objectSpread(_objectSpread({}, settings), {}, _defineProperty({}, activeLayoutSettingsName, _objectSpread(_objectSpread({}, activeLayoutSettings), {}, {\n      leftSidebar: _objectSpread(_objectSpread({}, activeLayoutSettings.leftSidebar), sidebarSettings)\n    }))));\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Scrollbar, {\n    options: {\n      suppressScrollX: true\n    },\n    className: clsx('relative px-4', classes.scrollable),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, children, /*#__PURE__*/React.createElement(MatxVerticalNav, {\n    items: navigations,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: function onClick() {\n      return updateSidebarMode({\n        mode: 'close'\n      });\n    },\n    className: classes.sidenavMobileOverlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Sidenav;","map":{"version":3,"sources":["C:/Users/DiazP/Documents/plantilla/src/app/components/Sidenav/Sidenav.jsx"],"names":["React","Fragment","Scrollbar","navigations","MatxVerticalNav","makeStyles","clsx","useSettings","useStyles","palette","theme","scrollable","paddingLeft","paddingRight","sidenavMobileOverlay","position","top","left","bottom","right","width","background","zIndex","breakpoints","up","display","Sidenav","children","classes","settings","updateSettings","updateSidebarMode","sidebarSettings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","leftSidebar","suppressScrollX","mode"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAAC;AAAA,MAAGI,OAAH,QAAGA,OAAH;AAAA,MAAeC,KAAf;;AAAA,SAA4B;AACrDC,IAAAA,UAAU,EAAE;AACRC,MAAAA,WAAW,EAAE,EADL;AAERC,MAAAA,YAAY,EAAE;AAFN,KADyC;AAKrDC,IAAAA,oBAAoB;AAChBC,MAAAA,QAAQ,EAAE,OADM;AAEhBC,MAAAA,GAAG,EAAE,CAFW;AAGhBC,MAAAA,IAAI,EAAE,CAHU;AAIhBC,MAAAA,MAAM,EAAE,CAJQ;AAKhBC,MAAAA,KAAK,EAAE,CALS;AAMhBC,MAAAA,KAAK,EAAE,OANS;AAOhBC,MAAAA,UAAU,EAAE,qBAPI;AAQhBC,MAAAA,MAAM,EAAE,CAAC;AARO,OASfZ,KAAK,CAACa,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CATe,EASc;AAC1BC,MAAAA,OAAO,EAAE;AADiB,KATd;AALiC,GAA5B;AAAA,CAAD,CAA5B;;AAoBA,IAAMC,OAAO,GAAG,SAAVA,OAAU,QAAkB;AAAA,MAAfC,QAAe,SAAfA,QAAe;AAC9B,MAAMC,OAAO,GAAGpB,SAAS,EAAzB;;AACA,qBAAqCD,WAAW,EAAhD;AAAA,MAAQsB,QAAR,gBAAQA,QAAR;AAAA,MAAkBC,cAAlB,gBAAkBA,cAAlB;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,eAAD,EAAqB;AAC3C,QAAIC,wBAAwB,GAAGJ,QAAQ,CAACK,YAAT,GAAwB,UAAvD;AACA,QAAIC,oBAAoB,GAAGN,QAAQ,CAACI,wBAAD,CAAnC;AAEAH,IAAAA,cAAc,iCACPD,QADO,2BAETI,wBAFS,kCAGHE,oBAHG;AAINC,MAAAA,WAAW,kCACJD,oBAAoB,CAACC,WADjB,GAEJJ,eAFI;AAJL,SAAd;AAUH,GAdD;;AAgBA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAE;AAAEK,MAAAA,eAAe,EAAE;AAAnB,KADb;AAEI,IAAA,SAAS,EAAE/B,IAAI,CAAC,eAAD,EAAkBsB,OAAO,CAACjB,UAA1B,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKgB,QAJL,eAKI,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAExB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,eASI;AACI,IAAA,OAAO,EAAE;AAAA,aAAM4B,iBAAiB,CAAC;AAAEO,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAvB;AAAA,KADb;AAEI,IAAA,SAAS,EAAEV,OAAO,CAACd,oBAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ;AAgBH,CApCD;;AAsCA,eAAeY,OAAf","sourcesContent":["import React, { Fragment } from 'react'\r\nimport Scrollbar from 'react-perfect-scrollbar'\r\nimport { navigations } from 'app/navigations'\r\nimport { MatxVerticalNav } from 'app/components'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    scrollable: {\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n    },\r\n    sidenavMobileOverlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        width: '100vw',\r\n        background: 'rgba(0, 0, 0, 0.54)',\r\n        zIndex: -1,\r\n        [theme.breakpoints.up('lg')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}))\r\n\r\nconst Sidenav = ({ children }) => {\r\n    const classes = useStyles()\r\n    const { settings, updateSettings } = useSettings()\r\n\r\n    const updateSidebarMode = (sidebarSettings) => {\r\n        let activeLayoutSettingsName = settings.activeLayout + 'Settings'\r\n        let activeLayoutSettings = settings[activeLayoutSettingsName]\r\n\r\n        updateSettings({\r\n            ...settings,\r\n            [activeLayoutSettingsName]: {\r\n                ...activeLayoutSettings,\r\n                leftSidebar: {\r\n                    ...activeLayoutSettings.leftSidebar,\r\n                    ...sidebarSettings,\r\n                },\r\n            },\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Scrollbar\r\n                options={{ suppressScrollX: true }}\r\n                className={clsx('relative px-4', classes.scrollable)}\r\n            >\r\n                {children}\r\n                <MatxVerticalNav items={navigations} />\r\n            </Scrollbar>\r\n\r\n            <div\r\n                onClick={() => updateSidebarMode({ mode: 'close' })}\r\n                className={classes.sidenavMobileOverlay}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Sidenav\r\n"]},"metadata":{},"sourceType":"module"}