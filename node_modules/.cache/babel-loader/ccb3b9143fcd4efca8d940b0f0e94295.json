{"ast":null,"code":"import _Button from \"@material-ui/core/esm/Button\";\nimport _Icon from \"@material-ui/core/esm/Icon\";\nimport _FormControlLabel from \"@material-ui/core/esm/FormControlLabel\";\nimport _Checkbox from \"@material-ui/core/esm/Checkbox\";\nimport _Grid from \"@material-ui/core/esm/Grid\";\nimport _defineProperty from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\src\\\\app\\\\views\\\\material-kit\\\\forms\\\\OrdenServicio.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { useDemoData } from '@mui/x-data-grid-generator';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\n\nvar OrdenServicio = function OrdenServicio() {\n  var _useState = useState({\n    date: new Date()\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useDemoData = useDemoData({\n    dataSet: 'Commodity',\n    rowLength: 5,\n    maxColumns: 6\n  }),\n      data = _useDemoData.data;\n\n  useEffect(function () {\n    ValidatorForm.addValidationRule('isPasswordMatch', function (value) {\n      console.log(value);\n\n      if (value !== state.password) {\n        return false;\n      }\n\n      return true;\n    });\n    return function () {\n      return ValidatorForm.removeValidationRule('isPasswordMatch');\n    };\n  }, [state.password]);\n\n  var handleSubmit = function handleSubmit(event) {// console.log(\"submitted\");\n    // console.log(event);\n  };\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var handleDateChange = function handleDateChange(date) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      date: date\n    }));\n  };\n\n  var username = state.username,\n      firstName = state.firstName,\n      creditCard = state.creditCard,\n      mobile = state.mobile,\n      password = state.password,\n      confirmPassword = state.confirmPassword,\n      gender = state.gender,\n      date = state.date,\n      email = state.email;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ValidatorForm, {\n    onSubmit: handleSubmit,\n    onError: function onError() {\n      return null;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Grid, {\n    container: true,\n    spacing: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    sm: 6,\n    xs: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Nombre\",\n    onChange: handleChange,\n    type: \"text\",\n    name: \"firstName\",\n    value: firstName || '',\n    validators: ['required'],\n    errorMessages: ['Campo Requerido'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Apellido\",\n    onChange: handleChange,\n    type: \"text\",\n    name: \"username\",\n    value: username || '',\n    validators: ['required', 'minStringLength: 4', 'maxStringLength: 9'],\n    errorMessages: ['Campo Requerido'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Email\",\n    onChange: handleChange,\n    type: \"email\",\n    name: \"email\",\n    value: email || '',\n    validators: ['required', 'isEmail'],\n    errorMessages: ['Campo Requerido', 'email is not valid'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-8 w-full\",\n    label: \"Celular\",\n    onChange: handleChange,\n    type: \"number\",\n    name: \"creditCard\",\n    value: creditCard || '',\n    validators: ['required', 'minStringLength:16', 'maxStringLength: 16'],\n    errorMessages: ['Campo Requerido'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(_Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Direccion\",\n    onChange: handleChange,\n    type: \"text\",\n    name: \"mobile\",\n    value: mobile || '',\n    validators: ['required'],\n    errorMessages: ['Campo Requerido'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Otro\",\n    onChange: handleChange,\n    name: \"password\",\n    type: \"firstName\",\n    value: password || '',\n    errorMessages: ['Campo Requerido'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-4 w-full\",\n    label: \"Otro\",\n    onChange: handleChange,\n    name: \"confirmPassword\",\n    type: \"firstName\",\n    value: confirmPassword || '',\n    validators: ['isPasswordMatch'],\n    errorMessages: ['Campo Requerido', 'password no concuerda'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(_FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(_Checkbox, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 38\n      }\n    }),\n    label: \"Deseo Recibir informacion mediante correo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(_Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flexGrow: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, Object.assign({}, data, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  })))))), /*#__PURE__*/React.createElement(_Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, \"send\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pl-2 capitalize\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, \"Enviar\"))));\n};\n\nexport default OrdenServicio;","map":{"version":3,"sources":["C:/Users/DiazP/Documents/SSmanagm/src/app/views/material-kit/forms/OrdenServicio.jsx"],"names":["React","useState","useEffect","ValidatorForm","TextValidator","useDemoData","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","OrdenServicio","date","Date","state","setState","dataSet","rowLength","maxColumns","data","addValidationRule","value","console","log","password","removeValidationRule","handleSubmit","event","handleChange","persist","target","name","handleDateChange","username","firstName","creditCard","mobile","confirmPassword","gender","email","height","width","display","flexGrow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\n\r\nimport { useDemoData } from '@mui/x-data-grid-generator';\r\n\r\nimport {\r\n    Button,\r\n    Icon,\r\n    Grid,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel,\r\n    Checkbox,\r\n} from '@material-ui/core'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers'\r\nimport 'date-fns'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\n\r\n\r\n\r\n\r\nconst OrdenServicio = () => {\r\n    const [state, setState] = useState({\r\n        date: new Date(),\r\n    })\r\n\r\n    const { data } = useDemoData({\r\n        dataSet: 'Commodity',\r\n        rowLength: 5,\r\n        maxColumns: 6,\r\n      });\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n            console.log(value)\r\n\r\n            if (value !== state.password) {\r\n                return false\r\n            }\r\n            return true\r\n        })\r\n        return () => ValidatorForm.removeValidationRule('isPasswordMatch')\r\n    }, [state.password])\r\n\r\n    const handleSubmit = (event) => {\r\n        // console.log(\"submitted\");\r\n        // console.log(event);\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        event.persist()\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n        setState({ ...state, date })\r\n    }\r\n\r\n    const {\r\n        username,\r\n        firstName,\r\n        creditCard,\r\n        mobile,\r\n        password,\r\n        confirmPassword,\r\n        gender,\r\n        date,\r\n        email,\r\n    } = state\r\n\r\n    return (\r\n        <div>\r\n            <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n                <Grid container spacing={6}>\r\n                    <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Nombre\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            value={firstName || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['Campo Requerido']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Apellido\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={username || ''}\r\n                            validators={[\r\n                                'required',\r\n                                'minStringLength: 4',\r\n                                'maxStringLength: 9',\r\n                            ]}\r\n                            errorMessages={['Campo Requerido']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Email\"\r\n                            onChange={handleChange}\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={email || ''}\r\n                            validators={['required', 'isEmail']}\r\n                            errorMessages={[\r\n                                'Campo Requerido',\r\n                                'email is not valid',\r\n                            ]}\r\n                        />\r\n\r\n                        <TextValidator\r\n                            className=\"mb-8 w-full\"\r\n                            label=\"Celular\"\r\n                            onChange={handleChange}\r\n                            type=\"number\"\r\n                            name=\"creditCard\"\r\n                            value={creditCard || ''}\r\n                            validators={[\r\n                                'required',\r\n                                'minStringLength:16',\r\n                                'maxStringLength: 16',\r\n                            ]}\r\n                            errorMessages={['Campo Requerido']}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item lg={6} md={6} sm={12} xs={12}>\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Direccion\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"mobile\"\r\n                            value={mobile || ''}\r\n                            validators={['required']}\r\n                            errorMessages={['Campo Requerido']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Otro\"\r\n                            onChange={handleChange}\r\n                            name=\"password\"\r\n                            type=\"firstName\"\r\n                            value={password || ''}\r\n                            errorMessages={['Campo Requerido']}\r\n                        />\r\n                        <TextValidator\r\n                            className=\"mb-4 w-full\"\r\n                            label=\"Otro\"\r\n                            onChange={handleChange}\r\n                            name=\"confirmPassword\"\r\n                            type=\"firstName\"\r\n                            value={confirmPassword || ''}\r\n                            validators={['isPasswordMatch']}\r\n                            errorMessages={[\r\n                                'Campo Requerido',\r\n                                'password no concuerda',\r\n                            ]}\r\n                        />\r\n\r\n                        <FormControlLabel\r\n                            control={<Checkbox />}\r\n                            label=\"Deseo Recibir informacion mediante correo\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid>\r\n                <div style={{ height: 400, width: '100%' }}>\r\n      <div style={{ display: 'flex', height: '100%' }}>\r\n        <div style={{ flexGrow: 1 }}>\r\n          <DataGrid {...data} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n                    </Grid>\r\n\r\n                <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                    <Icon>send</Icon>\r\n                    <span className=\"pl-2 capitalize\">Enviar</span>\r\n                </Button>\r\n            </ValidatorForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrdenServicio\r\n"]},"metadata":{},"sourceType":"module"}