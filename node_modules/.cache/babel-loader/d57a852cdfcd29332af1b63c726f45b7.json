{"ast":null,"code":"import _TextField from \"@material-ui/core/esm/TextField\";\nimport _CircularProgress from \"@material-ui/core/esm/CircularProgress\";\nimport _objectSpread from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\src\\\\app\\\\views\\\\material-kit\\\\auto-complete\\\\AsyncAutocomplete.jsx\";\n// *https://www.registers.service.gov.uk/registers/country/use-the-api*\nimport fetch from 'cross-fetch';\nimport React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nfunction sleep() {\n  var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport default function AsyncAutocomplete() {\n  var _this = this;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      options = _React$useState4[0],\n      setOptions = _React$useState4[1];\n\n  var loading = open && options.length === 0;\n  React.useEffect(function () {\n    var active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    ;\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, countries;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://country.register.gov.uk/records.json?page-size=5000');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return sleep(1e3);\n\n            case 5:\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              countries = _context.sent;\n\n              if (active) {\n                setOptions(Object.keys(countries).map(function (key) {\n                  return countries[key].item[0];\n                }));\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n\n    return function () {\n      active = false;\n    };\n  }, [loading]);\n  React.useEffect(function () {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n  return /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"asynchronous-demo\",\n    className: \"w-300\",\n    open: open,\n    onOpen: function onOpen() {\n      setOpen(true);\n    },\n    onClose: function onClose() {\n      setOpen(false);\n    },\n    getOptionSelected: function getOptionSelected(option, value) {\n      return option.name === value.name;\n    },\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    options: options,\n    loading: loading,\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(_TextField, Object.assign({}, params, {\n        label: \"Asynchronous\",\n        fullWidth: true,\n        variant: \"outlined\",\n        InputProps: _objectSpread(_objectSpread({}, params.InputProps), {}, {\n          endAdornment: /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }\n          }, loading ? /*#__PURE__*/React.createElement(_CircularProgress, {\n            color: \"inherit\",\n            size: 20,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }\n          }) : null, params.InputProps.endAdornment)\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/DiazP/Documents/SSmanagm/src/app/views/material-kit/auto-complete/AsyncAutocomplete.jsx"],"names":["fetch","React","Autocomplete","sleep","delay","Promise","resolve","setTimeout","AsyncAutocomplete","useState","open","setOpen","options","setOptions","loading","length","useEffect","active","undefined","response","json","countries","Object","keys","map","key","item","option","value","name","params","InputProps","endAdornment"],"mappings":"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","sourcesContent":["// *https://www.registers.service.gov.uk/registers/country/use-the-api*\r\nimport fetch from 'cross-fetch'\r\nimport React from 'react'\r\nimport { TextField, CircularProgress } from '@material-ui/core'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\n\r\nfunction sleep(delay = 0) {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\nexport default function AsyncAutocomplete() {\r\n    const [open, setOpen] = React.useState(false)\r\n    const [options, setOptions] = React.useState([])\r\n    const loading = open && options.length === 0\r\n\r\n    React.useEffect(() => {\r\n        let active = true\r\n\r\n        if (!loading) {\r\n            return undefined\r\n        }\r\n\r\n        ;(async () => {\r\n            const response = await fetch(\r\n                'https://country.register.gov.uk/records.json?page-size=5000'\r\n            )\r\n            await sleep(1e3) // For demo purposes.\r\n            const countries = await response.json()\r\n\r\n            if (active) {\r\n                setOptions(\r\n                    Object.keys(countries).map((key) => countries[key].item[0])\r\n                )\r\n            }\r\n        })()\r\n\r\n        return () => {\r\n            active = false\r\n        }\r\n    }, [loading])\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([])\r\n        }\r\n    }, [open])\r\n\r\n    return (\r\n        <Autocomplete\r\n            id=\"asynchronous-demo\"\r\n            className=\"w-300\"\r\n            open={open}\r\n            onOpen={() => {\r\n                setOpen(true)\r\n            }}\r\n            onClose={() => {\r\n                setOpen(false)\r\n            }}\r\n            getOptionSelected={(option, value) => option.name === value.name}\r\n            getOptionLabel={(option) => option.name}\r\n            options={options}\r\n            loading={loading}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label=\"Asynchronous\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                            <React.Fragment>\r\n                                {loading ? (\r\n                                    <CircularProgress\r\n                                        color=\"inherit\"\r\n                                        size={20}\r\n                                    />\r\n                                ) : null}\r\n                                {params.InputProps.endAdornment}\r\n                            </React.Fragment>\r\n                        ),\r\n                    }}\r\n                />\r\n            )}\r\n        />\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}