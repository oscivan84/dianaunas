{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\plantilla\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\plantilla\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\plantilla\\\\src\\\\app\\\\components\\\\MatxMenu\\\\MatxMenu.jsx\";\n\nvar _excluded = [\"palette\"];\nimport React, { Fragment } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport { ThemeProvider, makeStyles } from '@material-ui/styles';\nimport useSettings from 'app/hooks/useSettings';\nvar useStyles = makeStyles(function (_ref) {\n  var palette = _ref.palette,\n      theme = _objectWithoutProperties(_ref, _excluded);\n\n  return {\n    menuButton: {\n      display: 'inline-block',\n      color: palette.text.primary,\n      '& div:hover': {\n        backgroundColor: palette.action.hover\n      }\n    }\n  };\n});\n\nvar MatxMenu = function MatxMenu(props) {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var children = React.Children.toArray(props.children);\n  var _props$shouldCloseOnI = props.shouldCloseOnItemClick,\n      shouldCloseOnItemClick = _props$shouldCloseOnI === void 0 ? true : _props$shouldCloseOnI,\n      _props$horizontalPosi = props.horizontalPosition,\n      horizontalPosition = _props$horizontalPosi === void 0 ? 'left' : _props$horizontalPosi;\n\n  var _useSettings = useSettings(),\n      settings = _useSettings.settings;\n\n  var classes = useStyles();\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.menuButton,\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, props.menuButton), /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: settings.themes[settings.activeTheme],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    elevation: 8,\n    getContentAnchorEl: null,\n    anchorEl: anchorEl,\n    open: !!anchorEl,\n    onClose: handleClose,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: horizontalPosition\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: horizontalPosition\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, children.map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: shouldCloseOnItemClick ? handleClose : function () {},\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, child);\n  }))));\n};\n\nexport default MatxMenu;","map":{"version":3,"sources":["C:/Users/DiazP/Documents/plantilla/src/app/components/MatxMenu/MatxMenu.jsx"],"names":["React","Fragment","Menu","ThemeProvider","makeStyles","useSettings","useStyles","palette","theme","menuButton","display","color","text","primary","backgroundColor","action","hover","MatxMenu","props","useState","anchorEl","setAnchorEl","children","Children","toArray","shouldCloseOnItemClick","horizontalPosition","settings","classes","handleClick","event","currentTarget","handleClose","themes","activeTheme","vertical","horizontal","map","child","index"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,qBAA1C;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC;AAAA,MAAGG,OAAH,QAAGA,OAAH;AAAA,MAAeC,KAAf;;AAAA,SAA4B;AACrDC,IAAAA,UAAU,EAAE;AACRC,MAAAA,OAAO,EAAE,cADD;AAERC,MAAAA,KAAK,EAAEJ,OAAO,CAACK,IAAR,CAAaC,OAFZ;AAGR,qBAAe;AACXC,QAAAA,eAAe,EAAEP,OAAO,CAACQ,MAAR,CAAeC;AADrB;AAHP;AADyC,GAA5B;AAAA,CAAD,CAA5B;;AAUA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxB,wBAAgClB,KAAK,CAACmB,QAAN,CAAe,IAAf,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,QAAQ,GAAGtB,KAAK,CAACuB,QAAN,CAAeC,OAAf,CAAuBN,KAAK,CAACI,QAA7B,CAAjB;AACA,8BAAqEJ,KAArE,CAAMO,sBAAN;AAAA,MAAMA,sBAAN,sCAA+B,IAA/B;AAAA,8BAAqEP,KAArE,CAAqCQ,kBAArC;AAAA,MAAqCA,kBAArC,sCAA0D,MAA1D;;AACA,qBAAqBrB,WAAW,EAAhC;AAAA,MAAQsB,QAAR,gBAAQA,QAAR;;AACA,MAAMC,OAAO,GAAGtB,SAAS,EAAzB;;AAEA,MAAMuB,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC3BT,IAAAA,WAAW,CAACS,KAAK,CAACC,aAAP,CAAX;AACH,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBX,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEO,OAAO,CAACnB,UAAxB;AAAoC,IAAA,OAAO,EAAEoB,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,KAAK,CAACT,UADX,CADJ,eAII,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEkB,QAAQ,CAACM,MAAT,CAAgBN,QAAQ,CAACO,WAAzB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AACI,IAAA,SAAS,EAAE,CADf;AAEI,IAAA,kBAAkB,EAAE,IAFxB;AAGI,IAAA,QAAQ,EAAEd,QAHd;AAII,IAAA,IAAI,EAAE,CAAC,CAACA,QAJZ;AAKI,IAAA,OAAO,EAAEY,WALb;AAMI,IAAA,YAAY,EAAE;AACVG,MAAAA,QAAQ,EAAE,QADA;AAEVC,MAAAA,UAAU,EAAEV;AAFF,KANlB;AAUI,IAAA,eAAe,EAAE;AACbS,MAAAA,QAAQ,EAAE,KADG;AAEbC,MAAAA,UAAU,EAAEV;AAFC,KAVrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeKJ,QAAQ,CAACe,GAAT,CAAa,UAACC,KAAD,EAAQC,KAAR;AAAA,wBACV;AACI,MAAA,OAAO,EACHd,sBAAsB,GAAGO,WAAH,GAAiB,YAAM,CAAE,CAFvD;AAII,MAAA,GAAG,EAAEO,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMKD,KANL,CADU;AAAA,GAAb,CAfL,CADJ,CAJJ,CADJ;AAmCH,CAlDD;;AAoDA,eAAerB,QAAf","sourcesContent":["import React, { Fragment } from 'react'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport { ThemeProvider, makeStyles } from '@material-ui/styles'\r\nimport useSettings from 'app/hooks/useSettings'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    menuButton: {\r\n        display: 'inline-block',\r\n        color: palette.text.primary,\r\n        '& div:hover': {\r\n            backgroundColor: palette.action.hover,\r\n        },\r\n    },\r\n}))\r\n\r\nconst MatxMenu = (props) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n    const children = React.Children.toArray(props.children)\r\n    let { shouldCloseOnItemClick = true, horizontalPosition = 'left' } = props\r\n    const { settings } = useSettings()\r\n    const classes = useStyles()\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.menuButton} onClick={handleClick}>\r\n                {props.menuButton}\r\n            </div>\r\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n                <Menu\r\n                    elevation={8}\r\n                    getContentAnchorEl={null}\r\n                    anchorEl={anchorEl}\r\n                    open={!!anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: horizontalPosition,\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: horizontalPosition,\r\n                    }}\r\n                >\r\n                    {children.map((child, index) => (\r\n                        <div\r\n                            onClick={\r\n                                shouldCloseOnItemClick ? handleClose : () => {}\r\n                            }\r\n                            key={index}\r\n                        >\r\n                            {child}\r\n                        </div>\r\n                    ))}\r\n                </Menu>\r\n            </ThemeProvider>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MatxMenu\r\n"]},"metadata":{},"sourceType":"module"}