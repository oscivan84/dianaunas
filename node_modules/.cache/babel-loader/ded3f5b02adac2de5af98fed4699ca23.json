{"ast":null,"code":"var controller = {};\n\ncontroller.list = function (req, res) {\n  req.getConnection(function (err, conn) {\n    conn.query('SELECT * FROM movimientomercancia', function (err, movimientos) {\n      if (err) {\n        res.json(err);\n      }\n\n      console.log(movimientos);\n      res.render('movimientos', {\n        data: movimientos\n      });\n    });\n  });\n};\n\ncontroller.save = function (req, res) {\n  var data = req.body;\n  console.log(req.body);\n  req.getConnection(function (err, connection) {\n    var query = connection.query('INSERT INTO movimientomercancia set ?', data, function (err, movimientos) {\n      //console.log(movimientomercancia)\n      res.redirect('/');\n    });\n  });\n};\n\ncontroller.edit = function (req, res) {\n  var id = req.params.id;\n  req.getConnection(function (err, conn) {\n    conn.query(\"SELECT * FROM movimientomercancia WHERE id = ?\", [id], function (err, rows) {\n      res.render('customers_edit', {\n        data: rows[0]\n      });\n    });\n  });\n};\n\ncontroller.update = function (req, res) {\n  var id = req.params.id;\n  var newCustomer = req.body;\n  req.getConnection(function (err, conn) {\n    conn.query('UPDATE customer set ? where id = ?', [newCustomer, id], function (err, rows) {\n      res.redirect('/');\n    });\n  });\n};\n\ncontroller.delete = function (req, res) {\n  var id = req.params.id;\n  req.getConnection(function (err, connection) {\n    connection.query('DELETE FROM movimientomercancia WHERE id = ?', [id], function (err, rows) {\n      res.redirect('/');\n    });\n  });\n};\n\nmodule.exports = controller;","map":{"version":3,"sources":["C:/Users/DiazP/Documents/SSmanagm/src/Server/controllers/customerController.js"],"names":["controller","list","req","res","getConnection","err","conn","query","movimientos","json","console","log","render","data","save","body","connection","redirect","edit","id","params","rows","update","newCustomer","delete","module","exports"],"mappings":"AAAA,IAAMA,UAAU,GAAG,EAAnB;;AAEAA,UAAU,CAACC,IAAX,GAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9BD,EAAAA,GAAG,CAACE,aAAJ,CAAkB,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC/BA,IAAAA,IAAI,CAACC,KAAL,CAAW,mCAAX,EAAgD,UAACF,GAAD,EAAMG,WAAN,EAAsB;AACrE,UAAIH,GAAJ,EAAS;AACRF,QAAAA,GAAG,CAACM,IAAJ,CAASJ,GAAT;AACA;;AACDK,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AAEAL,MAAAA,GAAG,CAACS,MAAJ,CAAW,aAAX,EAA0B;AACvBC,QAAAA,IAAI,EAAEL;AADiB,OAA1B;AAIA,KAVD;AAWD,GAZD;AAaD,CAdD;;AAgBAR,UAAU,CAACc,IAAX,GAAkB,UAACZ,GAAD,EAAMC,GAAN,EAAc;AAC9B,MAAMU,IAAI,GAAGX,GAAG,CAACa,IAAjB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAACa,IAAhB;AACAb,EAAAA,GAAG,CAACE,aAAJ,CAAkB,UAACC,GAAD,EAAMW,UAAN,EAAqB;AACrC,QAAMT,KAAK,GAAGS,UAAU,CAACT,KAAX,CAAiB,uCAAjB,EAA0DM,IAA1D,EAAgE,UAACR,GAAD,EAAMG,WAAN,EAAsB;AAClG;AACAL,MAAAA,GAAG,CAACc,QAAJ,CAAa,GAAb;AACD,KAHa,CAAd;AAID,GALD;AAMD,CATD;;AAWAjB,UAAU,CAACkB,IAAX,GAAkB,UAAChB,GAAD,EAAMC,GAAN,EAAc;AAC9B,MAAQgB,EAAR,GAAejB,GAAG,CAACkB,MAAnB,CAAQD,EAAR;AACAjB,EAAAA,GAAG,CAACE,aAAJ,CAAkB,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC/BA,IAAAA,IAAI,CAACC,KAAL,CAAW,gDAAX,EAA6D,CAACY,EAAD,CAA7D,EAAmE,UAACd,GAAD,EAAMgB,IAAN,EAAe;AAChFlB,MAAAA,GAAG,CAACS,MAAJ,CAAW,gBAAX,EAA6B;AAC3BC,QAAAA,IAAI,EAAEQ,IAAI,CAAC,CAAD;AADiB,OAA7B;AAGD,KAJD;AAKD,GAND;AAOD,CATD;;AAWArB,UAAU,CAACsB,MAAX,GAAoB,UAACpB,GAAD,EAAMC,GAAN,EAAc;AAChC,MAAQgB,EAAR,GAAejB,GAAG,CAACkB,MAAnB,CAAQD,EAAR;AACA,MAAMI,WAAW,GAAGrB,GAAG,CAACa,IAAxB;AACAb,EAAAA,GAAG,CAACE,aAAJ,CAAkB,UAACC,GAAD,EAAMC,IAAN,EAAe;AAEjCA,IAAAA,IAAI,CAACC,KAAL,CAAW,oCAAX,EAAiD,CAACgB,WAAD,EAAcJ,EAAd,CAAjD,EAAoE,UAACd,GAAD,EAAMgB,IAAN,EAAe;AACjFlB,MAAAA,GAAG,CAACc,QAAJ,CAAa,GAAb;AACD,KAFD;AAGC,GALD;AAMD,CATD;;AAWAjB,UAAU,CAACwB,MAAX,GAAoB,UAACtB,GAAD,EAAMC,GAAN,EAAc;AAChC,MAAQgB,EAAR,GAAejB,GAAG,CAACkB,MAAnB,CAAQD,EAAR;AACAjB,EAAAA,GAAG,CAACE,aAAJ,CAAkB,UAACC,GAAD,EAAMW,UAAN,EAAqB;AACrCA,IAAAA,UAAU,CAACT,KAAX,CAAiB,8CAAjB,EAAiE,CAACY,EAAD,CAAjE,EAAuE,UAACd,GAAD,EAAMgB,IAAN,EAAe;AACpFlB,MAAAA,GAAG,CAACc,QAAJ,CAAa,GAAb;AACD,KAFD;AAGD,GAJD;AAKD,CAPD;;AASAQ,MAAM,CAACC,OAAP,GAAiB1B,UAAjB","sourcesContent":["const controller = {};\r\n\r\ncontroller.list = (req, res) => {\r\n  req.getConnection((err, conn) => {\r\n    conn.query('SELECT * FROM movimientomercancia', (err, movimientos) => {\r\n     if (err) {\r\n      res.json(err);\r\n     }\r\n     console.log(movimientos);\r\n     \r\n     res.render('movimientos', {\r\n        data: movimientos\r\n     });\r\n\r\n    });\r\n  });\r\n};\r\n\r\ncontroller.save = (req, res) => {\r\n  const data = req.body;\r\n  console.log(req.body)\r\n  req.getConnection((err, connection) => {\r\n    const query = connection.query('INSERT INTO movimientomercancia set ?', data, (err, movimientos) => {\r\n      //console.log(movimientomercancia)\r\n      res.redirect('/');\r\n    })\r\n  })\r\n};\r\n\r\ncontroller.edit = (req, res) => {\r\n  const { id } = req.params;\r\n  req.getConnection((err, conn) => {\r\n    conn.query(\"SELECT * FROM movimientomercancia WHERE id = ?\", [id], (err, rows) => {\r\n      res.render('customers_edit', {\r\n        data: rows[0]\r\n      })\r\n    });\r\n  });\r\n};\r\n\r\ncontroller.update = (req, res) => {\r\n  const { id } = req.params;\r\n  const newCustomer = req.body;\r\n  req.getConnection((err, conn) => {\r\n\r\n  conn.query('UPDATE customer set ? where id = ?', [newCustomer, id], (err, rows) => {\r\n    res.redirect('/');\r\n  });\r\n  });\r\n};\r\n\r\ncontroller.delete = (req, res) => {\r\n  const { id } = req.params;\r\n  req.getConnection((err, connection) => {\r\n    connection.query('DELETE FROM movimientomercancia WHERE id = ?', [id], (err, rows) => {\r\n      res.redirect('/');\r\n    });\r\n  });\r\n}\r\n\r\nmodule.exports = controller;\r\n"]},"metadata":{},"sourceType":"module"}