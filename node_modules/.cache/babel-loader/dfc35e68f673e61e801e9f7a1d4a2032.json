{"ast":null,"code":"import _Icon from \"@material-ui/core/esm/Icon\";\nimport _defineProperty from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\src\\\\app\\\\components\\\\MatxVerticalNav\\\\MatxVerticalNavExpansionPanel.jsx\";\n\nvar _excluded = [\"palette\"];\nimport React, { useState, useRef, useCallback } from 'react';\nimport TouchRipple from '@material-ui/core/ButtonBase';\nimport { useLocation } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useEffect } from 'react';\nimport clsx from 'clsx';\nvar useStyles = makeStyles(function (_ref) {\n  var palette = _ref.palette,\n      theme = _objectWithoutProperties(_ref, _excluded);\n\n  return {\n    expandIcon: {\n      transition: 'transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms',\n      transform: 'rotate(90deg)'\n    },\n    collapseIcon: {\n      transition: 'transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms',\n      transform: 'rotate(0deg)'\n    },\n    'expansion-panel': {\n      overflow: 'hidden',\n      transition: 'max-height 0.3s cubic-bezier(0, 0, 0.2, 1)'\n    },\n    highlight: {\n      background: palette.primary.main\n    },\n    navItem: {\n      // color: palette.type === \"dark\" ? palette.text.secondary : \"inherit\",\n      '&:hover': {\n        backgroundColor: palette.action.hover\n      }\n    },\n    compactNavItem: {\n      width: 44,\n      overflow: 'hidden',\n      justifyContent: 'center !important',\n      '& $itemText': {\n        display: 'none'\n      },\n      '& $itemIcon': {\n        display: 'none'\n      }\n    },\n    itemIcon: {},\n    itemText: {\n      fontSize: '0.875rem',\n      paddingLeft: '0.8rem'\n    },\n    bulletIcon: {\n      background: palette.text.secondary\n    }\n  };\n});\n\nvar MatxVerticalNavExpansionPanel = function MatxVerticalNavExpansionPanel(_ref2) {\n  var _clsx, _clsx2;\n\n  var item = _ref2.item,\n      children = _ref2.children,\n      mode = _ref2.mode;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      collapsed = _useState2[0],\n      setCollapsed = _useState2[1];\n\n  var classes = useStyles();\n  var elementRef = useRef(null);\n  var componentHeight = useRef(0);\n\n  var _useLocation = useLocation(),\n      pathname = _useLocation.pathname;\n\n  var name = item.name,\n      icon = item.icon,\n      iconText = item.iconText,\n      badge = item.badge;\n\n  var handleClick = function handleClick() {\n    componentHeight.current = 0;\n    calcaulateHeight(elementRef.current);\n    setCollapsed(!collapsed);\n  };\n\n  var calcaulateHeight = useCallback(function (node) {\n    if (node.name !== 'child') {\n      var _iterator = _createForOfIteratorHelper(node.children),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var child = _step.value;\n          calcaulateHeight(child);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    if (node.name === 'child') componentHeight.current += node.scrollHeight;else componentHeight.current += 44; //here 44 is node height\n\n    return;\n  }, []);\n  useEffect(function () {\n    if (!elementRef) return;\n    calcaulateHeight(elementRef.current); // OPEN DROPDOWN IF CHILD IS ACTIVE\n\n    var _iterator2 = _createForOfIteratorHelper(elementRef.current.children),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var child = _step2.value;\n\n        if (child.getAttribute('href') === pathname) {\n          setCollapsed(false);\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }, [pathname, calcaulateHeight]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TouchRipple, {\n    className: clsx((_clsx = {\n      'flex justify-between h-44 border-radius-4 mb-2 w-full pr-4 has-submenu compactNavItem whitespace-pre overflow-hidden': true\n    }, _defineProperty(_clsx, classes.navItem, true), _defineProperty(_clsx, classes.compactNavItem, mode === 'compact'), _defineProperty(_clsx, \"open\", !collapsed), _clsx)),\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, icon && /*#__PURE__*/React.createElement(_Icon, {\n    className: \"align-middle text-18 w-36 px-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, icon), iconText && /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx('w-4 h-4 rounded bg-white ml-5 mr-2', classes.bulletIcon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx('align-middle sidenavHoverShow', classes.itemText),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, name)), badge && /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(\"rounded bg-\".concat(item.badge.color, \" px-1 py-1px\"), 'sidenavHoverShow', classes.itemIcon),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, badge.value), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx((_clsx2 = {\n      'item-arrow sidenavHoverShow': true\n    }, _defineProperty(_clsx2, classes.itemIcon, true), _defineProperty(_clsx2, classes.collapseIcon, collapsed), _defineProperty(_clsx2, classes.expandIcon, !collapsed), _clsx2)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    fontSize: \"small\",\n    className: \"align-middle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"chevron_right\"))), /*#__PURE__*/React.createElement(\"div\", {\n    ref: elementRef,\n    className: clsx(classes['expansion-panel'], 'submenu'),\n    style: collapsed ? {\n      maxHeight: '0px'\n    } : {\n      maxHeight: componentHeight.current + 'px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, children));\n};\n\nexport default MatxVerticalNavExpansionPanel;","map":{"version":3,"sources":["C:/Users/DiazP/Documents/SSmanagm/src/app/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx"],"names":["React","useState","useRef","useCallback","TouchRipple","useLocation","makeStyles","useEffect","clsx","useStyles","palette","theme","expandIcon","transition","transform","collapseIcon","overflow","highlight","background","primary","main","navItem","backgroundColor","action","hover","compactNavItem","width","justifyContent","display","itemIcon","itemText","fontSize","paddingLeft","bulletIcon","text","secondary","MatxVerticalNavExpansionPanel","item","children","mode","collapsed","setCollapsed","classes","elementRef","componentHeight","pathname","name","icon","iconText","badge","handleClick","current","calcaulateHeight","node","child","scrollHeight","getAttribute","color","value","maxHeight"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from 'react'\r\nimport { Icon } from '@material-ui/core'\r\nimport TouchRipple from '@material-ui/core/ButtonBase'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useEffect } from 'react'\r\nimport clsx from 'clsx'\r\n\r\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\r\n    expandIcon: {\r\n        transition: 'transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms',\r\n        transform: 'rotate(90deg)',\r\n    },\r\n    collapseIcon: {\r\n        transition: 'transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms',\r\n        transform: 'rotate(0deg)',\r\n    },\r\n    'expansion-panel': {\r\n        overflow: 'hidden',\r\n        transition: 'max-height 0.3s cubic-bezier(0, 0, 0.2, 1)',\r\n    },\r\n    highlight: {\r\n        background: palette.primary.main,\r\n    },\r\n    navItem: {\r\n        // color: palette.type === \"dark\" ? palette.text.secondary : \"inherit\",\r\n        '&:hover': {\r\n            backgroundColor: palette.action.hover,\r\n        },\r\n    },\r\n    compactNavItem: {\r\n        width: 44,\r\n        overflow: 'hidden',\r\n        justifyContent: 'center !important',\r\n        '& $itemText': {\r\n            display: 'none',\r\n        },\r\n        '& $itemIcon': {\r\n            display: 'none',\r\n        },\r\n    },\r\n    itemIcon: {},\r\n    itemText: {\r\n        fontSize: '0.875rem',\r\n        paddingLeft: '0.8rem',\r\n    },\r\n    bulletIcon: {\r\n        background: palette.text.secondary,\r\n    },\r\n}))\r\n\r\nconst MatxVerticalNavExpansionPanel = ({ item, children, mode }) => {\r\n    const [collapsed, setCollapsed] = useState(true)\r\n    const classes = useStyles()\r\n    const elementRef = useRef(null)\r\n    const componentHeight = useRef(0)\r\n    const { pathname } = useLocation()\r\n    const { name, icon, iconText, badge } = item\r\n\r\n    const handleClick = () => {\r\n        componentHeight.current = 0\r\n        calcaulateHeight(elementRef.current)\r\n        setCollapsed(!collapsed)\r\n    }\r\n\r\n    const calcaulateHeight = useCallback((node) => {\r\n        if (node.name !== 'child') {\r\n            for (let child of node.children) {\r\n                calcaulateHeight(child)\r\n            }\r\n        }\r\n\r\n        if (node.name === 'child') componentHeight.current += node.scrollHeight\r\n        else componentHeight.current += 44 //here 44 is node height\r\n        return\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!elementRef) return\r\n\r\n        calcaulateHeight(elementRef.current)\r\n\r\n        // OPEN DROPDOWN IF CHILD IS ACTIVE\r\n        for (let child of elementRef.current.children) {\r\n            if (child.getAttribute('href') === pathname) {\r\n                setCollapsed(false)\r\n            }\r\n        }\r\n    }, [pathname, calcaulateHeight])\r\n\r\n    return (\r\n        <div>\r\n            <TouchRipple\r\n                className={clsx({\r\n                    'flex justify-between h-44 border-radius-4 mb-2 w-full pr-4 has-submenu compactNavItem whitespace-pre overflow-hidden': true,\r\n                    [classes.navItem]: true,\r\n                    [classes.compactNavItem]: mode === 'compact',\r\n                    open: !collapsed,\r\n                })}\r\n                onClick={handleClick}\r\n            >\r\n                <div className=\"flex items-center\">\r\n                    {icon && (\r\n                        <Icon className=\"align-middle text-18 w-36 px-4\">\r\n                            {icon}\r\n                        </Icon>\r\n                    )}\r\n                    {iconText && (\r\n                        <div\r\n                            className={clsx(\r\n                                'w-4 h-4 rounded bg-white ml-5 mr-2',\r\n                                classes.bulletIcon\r\n                            )}\r\n                        ></div>\r\n                    )}\r\n                    <span\r\n                        className={clsx(\r\n                            'align-middle sidenavHoverShow',\r\n                            classes.itemText\r\n                        )}\r\n                    >\r\n                        {name}\r\n                    </span>\r\n                </div>\r\n                {badge && (\r\n                    <div\r\n                        className={clsx(\r\n                            `rounded bg-${item.badge.color} px-1 py-1px`,\r\n                            'sidenavHoverShow',\r\n                            classes.itemIcon\r\n                        )}\r\n                    >\r\n                        {badge.value}\r\n                    </div>\r\n                )}\r\n                <div\r\n                    className={clsx({\r\n                        'item-arrow sidenavHoverShow': true,\r\n                        [classes.itemIcon]: true,\r\n                        [classes.collapseIcon]: collapsed,\r\n                        [classes.expandIcon]: !collapsed,\r\n                    })}\r\n                >\r\n                    <Icon fontSize=\"small\" className=\"align-middle\">\r\n                        chevron_right\r\n                    </Icon>\r\n                </div>\r\n            </TouchRipple>\r\n\r\n            <div\r\n                ref={elementRef}\r\n                className={clsx(classes['expansion-panel'], 'submenu')}\r\n                style={\r\n                    collapsed\r\n                        ? { maxHeight: '0px' }\r\n                        : { maxHeight: componentHeight.current + 'px' }\r\n                }\r\n            >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatxVerticalNavExpansionPanel\r\n"]},"metadata":{},"sourceType":"module"}