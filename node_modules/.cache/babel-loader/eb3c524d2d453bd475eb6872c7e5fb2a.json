{"ast":null,"code":"import _Card from \"@material-ui/core/esm/Card\";\nimport _Button from \"@material-ui/core/esm/Button\";\nimport _Divider from \"@material-ui/core/esm/Divider\";\nimport _Grid from \"@material-ui/core/esm/Grid\";\nimport _Fab from \"@material-ui/core/esm/Fab\";\nimport _Icon from \"@material-ui/core/esm/Icon\";\nimport _objectSpread from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DiazP\\\\Documents\\\\SSmanagm\\\\src\\\\app\\\\views\\\\forms\\\\UploadForm.jsx\";\n\nimport React, { useState } from 'react';\nimport { Breadcrumb, SimpleCard, MatxProgressBar } from 'app/components';\nimport clsx from 'clsx';\n\nvar UploadForm = function UploadForm() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      queProgress = _useState4[0],\n      setQueProgress = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dargClass = _useState6[0],\n      setDragClass = _useState6[1];\n\n  var handleFileSelect = function handleFileSelect(event) {\n    var files = event.target.files;\n    var list = [];\n\n    var _iterator = _createForOfIteratorHelper(files),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var iterator = _step.value;\n        list.push({\n          file: iterator,\n          uploading: false,\n          error: false,\n          progress: 0\n        });\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    setFiles(list);\n  };\n\n  var handleDragOver = function handleDragOver(event) {\n    event.preventDefault();\n    setDragClass('drag-shadow');\n  };\n\n  var handleDrop = function handleDrop(event) {\n    event.preventDefault();\n    event.persist();\n    var files = event.dataTransfer.files;\n    var list = [];\n\n    var _iterator2 = _createForOfIteratorHelper(files),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var iterator = _step2.value;\n        list.push({\n          file: iterator,\n          uploading: false,\n          error: false,\n          progress: 0\n        });\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    setDragClass('');\n    setFiles(list);\n    return false;\n  };\n\n  var handleDragStart = function handleDragStart(event) {\n    setDragClass('drag-shadow');\n  };\n\n  var handleSingleRemove = function handleSingleRemove(index) {\n    var tempList = _toConsumableArray(files);\n\n    tempList.splice(index, 1);\n    setFiles(_toConsumableArray(tempList));\n  };\n\n  var handleAllRemove = function handleAllRemove() {\n    setFiles([]);\n    setQueProgress(0);\n  };\n\n  var uploadSingleFile = function uploadSingleFile(index) {\n    var allFiles = _toConsumableArray(files);\n\n    var file = files[index];\n    allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n      uploading: true,\n      error: false\n    });\n    setFiles(_toConsumableArray(allFiles));\n  };\n\n  var uploadAllFile = function uploadAllFile() {\n    var allFiles = [];\n    files.map(function (item) {\n      allFiles.push(_objectSpread(_objectSpread({}, item), {}, {\n        uploading: true,\n        error: false\n      }));\n      return item;\n    });\n    setFiles([].concat(allFiles));\n    setQueProgress(35);\n  };\n\n  var handleSingleCancel = function handleSingleCancel(index) {\n    var allFiles = _toConsumableArray(files);\n\n    var file = files[index];\n    allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n      uploading: false,\n      error: true\n    });\n    setFiles(_toConsumableArray(allFiles));\n  };\n\n  var handleCancelAll = function handleCancelAll() {\n    var allFiles = [];\n    files.map(function (item) {\n      allFiles.push(_objectSpread(_objectSpread({}, item), {}, {\n        uploading: false,\n        error: true\n      }));\n      return item;\n    });\n    setFiles([].concat(allFiles));\n    setQueProgress(0);\n  };\n\n  var isEmpty = !!!files.length;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-form m-sm-30\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-sm-30\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    routeSegments: [{\n      name: 'Others',\n      path: '/'\n    }, {\n      name: 'Upload'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(SimpleCard, {\n    title: \"File Upload\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-wrap mb-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"upload-single-file\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Fab, {\n    className: \"capitalize\",\n    color: \"primary\",\n    component: \"span\",\n    variant: \"extended\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    className: \"pr-8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, \"Single File\")))), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"hidden\",\n    onChange: handleFileSelect,\n    id: \"upload-single-file\",\n    type: \"file\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"px-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"upload-multiple-file\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Fab, {\n    className: \"capitalize\",\n    color: \"primary\",\n    component: \"span\",\n    variant: \"extended\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(_Icon, {\n    className: \"pr-8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 33\n    }\n  }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 33\n    }\n  }, \"Multiple File\")))), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"hidden\",\n    onChange: handleFileSelect,\n    id: \"upload-multiple-file\",\n    type: \"file\",\n    multiple: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx('h-200 w-full border-radius-4 bg-light-gray mb-6 flex justify-center items-center', dargClass),\n    onDragEnter: handleDragStart,\n    onDragOver: handleDragOver,\n    onDrop: handleDrop,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, isEmpty ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, \"Drop your files here\") : /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"m-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, files.length, \" file\", files.length > 1 ? 's' : '', ' ', \"selected...\")), /*#__PURE__*/React.createElement(_Card, {\n    className: \"mb-6\",\n    elevation: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"center\",\n    direction: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(_Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(_Grid, {\n    item: true,\n    lg: 1,\n    md: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }, \"Size\"), /*#__PURE__*/React.createElement(_Grid, {\n    item: true,\n    lg: 2,\n    md: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }\n  }, \"Progress\"), /*#__PURE__*/React.createElement(_Grid, {\n    item: true,\n    lg: 1,\n    md: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 29\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(_Grid, {\n    item: true,\n    lg: 4,\n    md: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(_Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }), isEmpty && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"px-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 33\n    }\n  }, \"Que is empty\"), files.map(function (item, index) {\n    var file = item.file,\n        uploading = item.uploading,\n        error = item.error,\n        progress = item.progress;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"px-4 py-4\",\n      key: file.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(_Grid, {\n      container: true,\n      spacing: 2,\n      justify: \"center\",\n      alignItems: \"center\",\n      direction: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 37\n      }\n    }, file.name), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      lg: 1,\n      md: 1,\n      sm: 12,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 37\n      }\n    }, (file.size / 1024 / 1024).toFixed(1), ' ', \"MB\"), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      lg: 2,\n      md: 2,\n      sm: 12,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MatxProgressBar, {\n      value: progress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      lg: 1,\n      md: 1,\n      sm: 12,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 37\n      }\n    }, error && /*#__PURE__*/React.createElement(_Icon, {\n      color: \"error\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 45\n      }\n    }, \"error\")), /*#__PURE__*/React.createElement(_Grid, {\n      item: true,\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      size: \"small\",\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: uploading,\n      onClick: function onClick() {\n        return uploadSingleFile(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 45\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(_Button, {\n      className: \"mx-2\",\n      size: \"small\",\n      variant: \"contained\",\n      disabled: !uploading,\n      color: \"secondary\",\n      onClick: function onClick() {\n        return handleSingleCancel(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 45\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(_Button, {\n      variant: \"contained\",\n      size: \"small\",\n      className: \"bg-error\",\n      onClick: function onClick() {\n        return handleSingleRemove(index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 45\n      }\n    }, \"Remove\")))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"m-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }, \"Queue progress:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MatxProgressBar, {\n    value: queProgress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: isEmpty,\n    onClick: uploadAllFile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 25\n    }\n  }, \"Upload All\"), /*#__PURE__*/React.createElement(_Button, {\n    className: \"mx-2\",\n    variant: \"contained\",\n    color: \"secondary\",\n    disabled: isEmpty,\n    onClick: handleCancelAll,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 25\n    }\n  }, \"Cancel All\"), !isEmpty && /*#__PURE__*/React.createElement(_Button, {\n    variant: \"contained\",\n    className: \"bg-error\",\n    onClick: handleAllRemove,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 29\n    }\n  }, \"Remove All\")))));\n};\n\nexport default UploadForm;","map":{"version":3,"sources":["C:/Users/DiazP/Documents/SSmanagm/src/app/views/forms/UploadForm.jsx"],"names":["React","useState","Breadcrumb","SimpleCard","MatxProgressBar","clsx","UploadForm","files","setFiles","queProgress","setQueProgress","dargClass","setDragClass","handleFileSelect","event","target","list","iterator","push","file","uploading","error","progress","handleDragOver","preventDefault","handleDrop","persist","dataTransfer","handleDragStart","handleSingleRemove","index","tempList","splice","handleAllRemove","uploadSingleFile","allFiles","uploadAllFile","map","item","handleSingleCancel","handleCancelAll","isEmpty","length","name","path","size","toFixed"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,eAAjC,QAAwD,gBAAxD;AAEA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,kBAA0BL,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAsCP,QAAQ,CAAC,CAAD,CAA9C;AAAA;AAAA,MAAOQ,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAkCT,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOU,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAChC,QAAIP,KAAK,GAAGO,KAAK,CAACC,MAAN,CAAaR,KAAzB;AACA,QAAIS,IAAI,GAAG,EAAX;;AAFgC,+CAITT,KAJS;AAAA;;AAAA;AAIhC,0DAA8B;AAAA,YAAnBU,QAAmB;AAC1BD,QAAAA,IAAI,CAACE,IAAL,CAAU;AACNC,UAAAA,IAAI,EAAEF,QADA;AAENG,UAAAA,SAAS,EAAE,KAFL;AAGNC,UAAAA,KAAK,EAAE,KAHD;AAINC,UAAAA,QAAQ,EAAE;AAJJ,SAAV;AAMH;AAX+B;AAAA;AAAA;AAAA;AAAA;;AAYhCd,IAAAA,QAAQ,CAACQ,IAAD,CAAR;AACH,GAbD;;AAeA,MAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAACT,KAAD,EAAW;AAC9BA,IAAAA,KAAK,CAACU,cAAN;AACAZ,IAAAA,YAAY,CAAC,aAAD,CAAZ;AACH,GAHD;;AAKA,MAAMa,UAAU,GAAG,SAAbA,UAAa,CAACX,KAAD,EAAW;AAC1BA,IAAAA,KAAK,CAACU,cAAN;AACAV,IAAAA,KAAK,CAACY,OAAN;AAEA,QAAInB,KAAK,GAAGO,KAAK,CAACa,YAAN,CAAmBpB,KAA/B;AACA,QAAIS,IAAI,GAAG,EAAX;;AAL0B,gDAOHT,KAPG;AAAA;;AAAA;AAO1B,6DAA8B;AAAA,YAAnBU,QAAmB;AAC1BD,QAAAA,IAAI,CAACE,IAAL,CAAU;AACNC,UAAAA,IAAI,EAAEF,QADA;AAENG,UAAAA,SAAS,EAAE,KAFL;AAGNC,UAAAA,KAAK,EAAE,KAHD;AAINC,UAAAA,QAAQ,EAAE;AAJJ,SAAV;AAMH;AAdyB;AAAA;AAAA;AAAA;AAAA;;AAgB1BV,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAJ,IAAAA,QAAQ,CAACQ,IAAD,CAAR;AAEA,WAAO,KAAP;AACH,GApBD;;AAsBA,MAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAACd,KAAD,EAAW;AAC/BF,IAAAA,YAAY,CAAC,aAAD,CAAZ;AACH,GAFD;;AAIA,MAAMiB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAClC,QAAIC,QAAQ,sBAAOxB,KAAP,CAAZ;;AACAwB,IAAAA,QAAQ,CAACC,MAAT,CAAgBF,KAAhB,EAAuB,CAAvB;AACAtB,IAAAA,QAAQ,oBAAKuB,QAAL,EAAR;AACH,GAJD;;AAMA,MAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BzB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,cAAc,CAAC,CAAD,CAAd;AACH,GAHD;;AAKA,MAAMwB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,KAAD,EAAW;AAChC,QAAIK,QAAQ,sBAAO5B,KAAP,CAAZ;;AACA,QAAIY,IAAI,GAAGZ,KAAK,CAACuB,KAAD,CAAhB;AAEAK,IAAAA,QAAQ,CAACL,KAAD,CAAR,mCAAuBX,IAAvB;AAA6BC,MAAAA,SAAS,EAAE,IAAxC;AAA8CC,MAAAA,KAAK,EAAE;AAArD;AAEAb,IAAAA,QAAQ,oBAAK2B,QAAL,EAAR;AACH,GAPD;;AASA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAID,QAAQ,GAAG,EAAf;AAEA5B,IAAAA,KAAK,CAAC8B,GAAN,CAAU,UAACC,IAAD,EAAU;AAChBH,MAAAA,QAAQ,CAACjB,IAAT,iCACOoB,IADP;AAEIlB,QAAAA,SAAS,EAAE,IAFf;AAGIC,QAAAA,KAAK,EAAE;AAHX;AAMA,aAAOiB,IAAP;AACH,KARD;AAUA9B,IAAAA,QAAQ,WAAK2B,QAAL,EAAR;AACAzB,IAAAA,cAAc,CAAC,EAAD,CAAd;AACH,GAfD;;AAiBA,MAAM6B,kBAAkB,GAAG,SAArBA,kBAAqB,CAACT,KAAD,EAAW;AAClC,QAAIK,QAAQ,sBAAO5B,KAAP,CAAZ;;AACA,QAAIY,IAAI,GAAGZ,KAAK,CAACuB,KAAD,CAAhB;AAEAK,IAAAA,QAAQ,CAACL,KAAD,CAAR,mCAAuBX,IAAvB;AAA6BC,MAAAA,SAAS,EAAE,KAAxC;AAA+CC,MAAAA,KAAK,EAAE;AAAtD;AAEAb,IAAAA,QAAQ,oBAAK2B,QAAL,EAAR;AACH,GAPD;;AASA,MAAMK,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,QAAIL,QAAQ,GAAG,EAAf;AAEA5B,IAAAA,KAAK,CAAC8B,GAAN,CAAU,UAACC,IAAD,EAAU;AAChBH,MAAAA,QAAQ,CAACjB,IAAT,iCACOoB,IADP;AAEIlB,QAAAA,SAAS,EAAE,KAFf;AAGIC,QAAAA,KAAK,EAAE;AAHX;AAMA,aAAOiB,IAAP;AACH,KARD;AAUA9B,IAAAA,QAAQ,WAAK2B,QAAL,EAAR;AACAzB,IAAAA,cAAc,CAAC,CAAD,CAAd;AACH,GAfD;;AAiBA,MAAI+B,OAAO,GAAG,CAAC,CAAC,CAAClC,KAAK,CAACmC,MAAvB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,aAAa,EAAE,CACX;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KADW,EAEX;AAAED,MAAAA,IAAI,EAAE;AAAR,KAFW,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eASI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,YADd;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,SAAS,EAAC,MAHd;AAII,IAAA,OAAO,EAAC,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CANJ,CADJ,CADJ,eAcI;AACI,IAAA,SAAS,EAAC,QADd;AAEI,IAAA,QAAQ,EAAE9B,gBAFd;AAGI,IAAA,EAAE,EAAC,oBAHP;AAII,IAAA,IAAI,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,eAoBI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,eAqBI;AAAO,IAAA,OAAO,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,YADd;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,SAAS,EAAC,MAHd;AAII,IAAA,OAAO,EAAC,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CANJ,CADJ,CArBJ,eAkCI;AACI,IAAA,SAAS,EAAC,QADd;AAEI,IAAA,QAAQ,EAAEA,gBAFd;AAGI,IAAA,EAAE,EAAC,sBAHP;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,QAAQ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCJ,CADJ,eA4CI;AACI,IAAA,SAAS,EAAER,IAAI,CACX,kFADW,EAEXM,SAFW,CADnB;AAKI,IAAA,WAAW,EAAEiB,eALjB;AAMI,IAAA,UAAU,EAAEL,cANhB;AAOI,IAAA,MAAM,EAAEE,UAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKgB,OAAO,gBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADI,gBAGJ;AAAI,IAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlC,KAAK,CAACmC,MADX,WACwBnC,KAAK,CAACmC,MAAN,GAAe,CAAf,GAAmB,GAAnB,GAAyB,EADjD,EACqD,GADrD,gBAZR,CA5CJ,eA+DI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,SAAS,EAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,MADb;AAEI,IAAA,OAAO,EAAE,CAFb;AAGI,IAAA,OAAO,EAAC,QAHZ;AAII,IAAA,UAAU,EAAC,QAJf;AAKI,IAAA,SAAS,EAAC,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAaI;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAgBI;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAmBI;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAnBJ,CADJ,CADJ,eA0BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,EA4BKD,OAAO,iBAAI;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5BhB,EA8BKlC,KAAK,CAAC8B,GAAN,CAAU,UAACC,IAAD,EAAOR,KAAP,EAAiB;AACxB,QAAMX,IAAN,GAA2CmB,IAA3C,CAAMnB,IAAN;AAAA,QAAYC,SAAZ,GAA2CkB,IAA3C,CAAYlB,SAAZ;AAAA,QAAuBC,KAAvB,GAA2CiB,IAA3C,CAAuBjB,KAAvB;AAAA,QAA8BC,QAA9B,GAA2CgB,IAA3C,CAA8BhB,QAA9B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEH,IAAI,CAACwB,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,MADb;AAEI,MAAA,OAAO,EAAE,CAFb;AAGI,MAAA,OAAO,EAAC,QAHZ;AAII,MAAA,UAAU,EAAC,QAJf;AAKI,MAAA,SAAS,EAAC,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,EAA7B;AAAiC,MAAA,EAAE,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKxB,IAAI,CAACwB,IADV,CAPJ,eAUI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,EAA7B;AAAiC,MAAA,EAAE,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACxB,IAAI,CAAC0B,IAAL,GAAY,IAAZ,GAAmB,IAApB,EAA0BC,OAA1B,CAAkC,CAAlC,CADL,EAC2C,GAD3C,OAVJ,eAcI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,EAA7B;AAAiC,MAAA,EAAE,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AACI,MAAA,KAAK,EAAExB,QADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAdJ,eAmBI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,EAA7B;AAAiC,MAAA,EAAE,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KAAK,iBACF;AAAM,MAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFR,CAnBJ,eAyBI;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,EAA7B;AAAiC,MAAA,EAAE,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,OAAO,EAAC,WAFZ;AAGI,MAAA,KAAK,EAAC,SAHV;AAII,MAAA,QAAQ,EAAED,SAJd;AAKI,MAAA,OAAO,EAAE;AAAA,eACLc,gBAAgB,CAACJ,KAAD,CADX;AAAA,OALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI;AACI,MAAA,SAAS,EAAC,MADd;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,OAAO,EAAC,WAHZ;AAII,MAAA,QAAQ,EAAE,CAACV,SAJf;AAKI,MAAA,KAAK,EAAC,WALV;AAMI,MAAA,OAAO,EAAE;AAAA,eACLmB,kBAAkB,CAACT,KAAD,CADb;AAAA,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAwBI;AACI,MAAA,OAAO,EAAC,WADZ;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,SAAS,EAAC,UAHd;AAII,MAAA,OAAO,EAAE;AAAA,eACLD,kBAAkB,CAACC,KAAD,CADb;AAAA,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBJ,CADJ,CAzBJ,CADJ,CADJ;AAmEH,GArEA,CA9BL,CA/DJ,eAqKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAErB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAKI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,QAAQ,EAAEgC,OAHd;AAII,IAAA,OAAO,EAAEL,aAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,OAAO,EAAC,WAFZ;AAGI,IAAA,KAAK,EAAC,WAHV;AAII,IAAA,QAAQ,EAAEK,OAJd;AAKI,IAAA,OAAO,EAAED,eALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,EAkBK,CAACC,OAAD,iBACG;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,SAAS,EAAC,UAFd;AAGI,IAAA,OAAO,EAAER,eAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBR,CALJ,CArKJ,CATJ,CADJ;AAoNH,CAxUD;;AA0UA,eAAe3B,UAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Breadcrumb, SimpleCard, MatxProgressBar } from 'app/components'\r\nimport { Fab, Icon, Card, Grid, Divider, Button } from '@material-ui/core'\r\nimport clsx from 'clsx'\r\n\r\nconst UploadForm = () => {\r\n    const [files, setFiles] = useState([])\r\n    const [queProgress, setQueProgress] = useState(0)\r\n    const [dargClass, setDragClass] = useState('')\r\n\r\n    const handleFileSelect = (event) => {\r\n        let files = event.target.files\r\n        let list = []\r\n\r\n        for (const iterator of files) {\r\n            list.push({\r\n                file: iterator,\r\n                uploading: false,\r\n                error: false,\r\n                progress: 0,\r\n            })\r\n        }\r\n        setFiles(list)\r\n    }\r\n\r\n    const handleDragOver = (event) => {\r\n        event.preventDefault()\r\n        setDragClass('drag-shadow')\r\n    }\r\n\r\n    const handleDrop = (event) => {\r\n        event.preventDefault()\r\n        event.persist()\r\n\r\n        let files = event.dataTransfer.files\r\n        let list = []\r\n\r\n        for (const iterator of files) {\r\n            list.push({\r\n                file: iterator,\r\n                uploading: false,\r\n                error: false,\r\n                progress: 0,\r\n            })\r\n        }\r\n\r\n        setDragClass('')\r\n        setFiles(list)\r\n\r\n        return false\r\n    }\r\n\r\n    const handleDragStart = (event) => {\r\n        setDragClass('drag-shadow')\r\n    }\r\n\r\n    const handleSingleRemove = (index) => {\r\n        let tempList = [...files]\r\n        tempList.splice(index, 1)\r\n        setFiles([...tempList])\r\n    }\r\n\r\n    const handleAllRemove = () => {\r\n        setFiles([])\r\n        setQueProgress(0)\r\n    }\r\n\r\n    const uploadSingleFile = (index) => {\r\n        let allFiles = [...files]\r\n        let file = files[index]\r\n\r\n        allFiles[index] = { ...file, uploading: true, error: false }\r\n\r\n        setFiles([...allFiles])\r\n    }\r\n\r\n    const uploadAllFile = () => {\r\n        let allFiles = []\r\n\r\n        files.map((item) => {\r\n            allFiles.push({\r\n                ...item,\r\n                uploading: true,\r\n                error: false,\r\n            })\r\n\r\n            return item\r\n        })\r\n\r\n        setFiles([...allFiles])\r\n        setQueProgress(35)\r\n    }\r\n\r\n    const handleSingleCancel = (index) => {\r\n        let allFiles = [...files]\r\n        let file = files[index]\r\n\r\n        allFiles[index] = { ...file, uploading: false, error: true }\r\n\r\n        setFiles([...allFiles])\r\n    }\r\n\r\n    const handleCancelAll = () => {\r\n        let allFiles = []\r\n\r\n        files.map((item) => {\r\n            allFiles.push({\r\n                ...item,\r\n                uploading: false,\r\n                error: true,\r\n            })\r\n\r\n            return item\r\n        })\r\n\r\n        setFiles([...allFiles])\r\n        setQueProgress(0)\r\n    }\r\n\r\n    let isEmpty = !!!files.length\r\n\r\n    return (\r\n        <div className=\"upload-form m-sm-30\">\r\n            <div className=\"mb-sm-30\">\r\n                <Breadcrumb\r\n                    routeSegments={[\r\n                        { name: 'Others', path: '/' },\r\n                        { name: 'Upload' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <SimpleCard title=\"File Upload\">\r\n                <div className=\"flex flex-wrap mb-6\">\r\n                    <label htmlFor=\"upload-single-file\">\r\n                        <Fab\r\n                            className=\"capitalize\"\r\n                            color=\"primary\"\r\n                            component=\"span\"\r\n                            variant=\"extended\"\r\n                        >\r\n                            <div className=\"flex items-center\">\r\n                                <Icon className=\"pr-8\">cloud_upload</Icon>\r\n                                <span>Single File</span>\r\n                            </div>\r\n                        </Fab>\r\n                    </label>\r\n                    <input\r\n                        className=\"hidden\"\r\n                        onChange={handleFileSelect}\r\n                        id=\"upload-single-file\"\r\n                        type=\"file\"\r\n                    />\r\n                    <div className=\"px-4\"></div>\r\n                    <label htmlFor=\"upload-multiple-file\">\r\n                        <Fab\r\n                            className=\"capitalize\"\r\n                            color=\"primary\"\r\n                            component=\"span\"\r\n                            variant=\"extended\"\r\n                        >\r\n                            <div className=\"flex items-center\">\r\n                                <Icon className=\"pr-8\">cloud_upload</Icon>\r\n                                <span>Multiple File</span>\r\n                            </div>\r\n                        </Fab>\r\n                    </label>\r\n                    <input\r\n                        className=\"hidden\"\r\n                        onChange={handleFileSelect}\r\n                        id=\"upload-multiple-file\"\r\n                        type=\"file\"\r\n                        multiple\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                    className={clsx(\r\n                        'h-200 w-full border-radius-4 bg-light-gray mb-6 flex justify-center items-center',\r\n                        dargClass\r\n                    )}\r\n                    onDragEnter={handleDragStart}\r\n                    onDragOver={handleDragOver}\r\n                    onDrop={handleDrop}\r\n                >\r\n                    {isEmpty ? (\r\n                        <span>Drop your files here</span>\r\n                    ) : (\r\n                        <h5 className=\"m-0\">\r\n                            {files.length} file{files.length > 1 ? 's' : ''}{' '}\r\n                            selected...\r\n                        </h5>\r\n                    )}\r\n                </div>\r\n\r\n                <Card className=\"mb-6\" elevation={2}>\r\n                    <div className=\"p-4\">\r\n                        <Grid\r\n                            container\r\n                            spacing={2}\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            direction=\"row\"\r\n                        >\r\n                            <Grid item lg={4} md={4}>\r\n                                Name\r\n                            </Grid>\r\n                            <Grid item lg={1} md={1}>\r\n                                Size\r\n                            </Grid>\r\n                            <Grid item lg={2} md={2}>\r\n                                Progress\r\n                            </Grid>\r\n                            <Grid item lg={1} md={1}>\r\n                                Status\r\n                            </Grid>\r\n                            <Grid item lg={4} md={4}>\r\n                                Actions\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                    <Divider></Divider>\r\n\r\n                    {isEmpty && <p className=\"px-4\">Que is empty</p>}\r\n\r\n                    {files.map((item, index) => {\r\n                        let { file, uploading, error, progress } = item\r\n                        return (\r\n                            <div className=\"px-4 py-4\" key={file.name}>\r\n                                <Grid\r\n                                    container\r\n                                    spacing={2}\r\n                                    justify=\"center\"\r\n                                    alignItems=\"center\"\r\n                                    direction=\"row\"\r\n                                >\r\n                                    <Grid item lg={4} md={4} sm={12} xs={12}>\r\n                                        {file.name}\r\n                                    </Grid>\r\n                                    <Grid item lg={1} md={1} sm={12} xs={12}>\r\n                                        {(file.size / 1024 / 1024).toFixed(1)}{' '}\r\n                                        MB\r\n                                    </Grid>\r\n                                    <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                                        <MatxProgressBar\r\n                                            value={progress}\r\n                                        ></MatxProgressBar>\r\n                                    </Grid>\r\n                                    <Grid item lg={1} md={1} sm={12} xs={12}>\r\n                                        {error && (\r\n                                            <Icon color=\"error\">error</Icon>\r\n                                        )}\r\n                                        {/* {uploading && <Icon className=\"text-green\">done</Icon>} */}\r\n                                    </Grid>\r\n                                    <Grid item lg={4} md={4} sm={12} xs={12}>\r\n                                        <div>\r\n                                            <Button\r\n                                                size=\"small\"\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                disabled={uploading}\r\n                                                onClick={() =>\r\n                                                    uploadSingleFile(index)\r\n                                                }\r\n                                            >\r\n                                                Upload\r\n                                            </Button>\r\n                                            <Button\r\n                                                className=\"mx-2\"\r\n                                                size=\"small\"\r\n                                                variant=\"contained\"\r\n                                                disabled={!uploading}\r\n                                                color=\"secondary\"\r\n                                                onClick={() =>\r\n                                                    handleSingleCancel(index)\r\n                                                }\r\n                                            >\r\n                                                Cancel\r\n                                            </Button>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                size=\"small\"\r\n                                                className=\"bg-error\"\r\n                                                onClick={() =>\r\n                                                    handleSingleRemove(index)\r\n                                                }\r\n                                            >\r\n                                                Remove\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </Card>\r\n\r\n                <div>\r\n                    <p className=\"m-0\">Queue progress:</p>\r\n                    <div className=\"py-4\">\r\n                        <MatxProgressBar value={queProgress}></MatxProgressBar>\r\n                    </div>\r\n                    <div className=\"flex\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={isEmpty}\r\n                            onClick={uploadAllFile}\r\n                        >\r\n                            Upload All\r\n                        </Button>\r\n                        <Button\r\n                            className=\"mx-2\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disabled={isEmpty}\r\n                            onClick={handleCancelAll}\r\n                        >\r\n                            Cancel All\r\n                        </Button>\r\n                        {!isEmpty && (\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                className=\"bg-error\"\r\n                                onClick={handleAllRemove}\r\n                            >\r\n                                Remove All\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </SimpleCard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadForm\r\n"]},"metadata":{},"sourceType":"module"}